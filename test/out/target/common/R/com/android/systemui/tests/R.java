/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.systemui.tests;

public final class R {
    public static final class anim {
        public static final int dismiss_all_shape_animation_1=0x7f050000;
        public static final int dismiss_all_shape_animation_2=0x7f050001;
        public static final int dismiss_all_shape_animation_3=0x7f050002;
        public static final int dismiss_all_shape_animation_rectangle_path_1=0x7f050003;
        public static final int dismiss_all_shape_animation_rectangle_path_1_1=0x7f050004;
        public static final int dismiss_all_shape_animation_rectangle_path_1_2=0x7f050005;
        public static final int error_to_trustedstate_ellipse_path_1_animation=0x7f050006;
        public static final int error_to_trustedstate_ellipse_path_2_animation=0x7f050007;
        public static final int error_to_trustedstate_exclamation_dot_animation=0x7f050008;
        public static final int error_to_trustedstate_lock_left_side_animation=0x7f050009;
        public static final int error_to_trustedstate_lock_right_side_animation=0x7f05000a;
        public static final int error_to_trustedstate_lock_top_animation=0x7f05000b;
        public static final int error_to_trustedstate_path_1_animation=0x7f05000c;
        public static final int error_to_trustedstate_path_2_animation=0x7f05000d;
        public static final int error_to_trustedstate_path_3_animation=0x7f05000e;
        public static final int error_to_trustedstate_rectangle_path_1_animation=0x7f05000f;
        public static final int float_panel_item_fade_out=0x7f050010;
        public static final int ic_dnd_disable_alpha_animation=0x7f050011;
        public static final int ic_dnd_disable_bar01_0_animation=0x7f050012;
        public static final int ic_dnd_disable_mask_1_animation=0x7f050013;
        public static final int ic_dnd_total_silence_disable_alpha_animation=0x7f050014;
        public static final int ic_dnd_total_silence_disable_mask_1_animation=0x7f050015;
        public static final int ic_dnd_total_silence_disable_outer_ring_merged_animation=0x7f050016;
        public static final int ic_hotspot_disable_animation_cross_1=0x7f050017;
        public static final int ic_hotspot_disable_animation_mask=0x7f050018;
        public static final int ic_hotspot_disable_animation_root=0x7f050019;
        public static final int ic_hotspot_enable_animation_cross_1=0x7f05001a;
        public static final int ic_hotspot_enable_animation_mask=0x7f05001b;
        public static final int ic_hotspot_enable_animation_root=0x7f05001c;
        public static final int ic_invert_colors_disable_animation_cross_1=0x7f05001d;
        public static final int ic_invert_colors_disable_animation_icon=0x7f05001e;
        public static final int ic_invert_colors_disable_animation_mask=0x7f05001f;
        public static final int ic_invert_colors_disable_animation_root=0x7f050020;
        public static final int ic_invert_colors_enable_animation_cross_1=0x7f050021;
        public static final int ic_invert_colors_enable_animation_icon=0x7f050022;
        public static final int ic_invert_colors_enable_animation_mask=0x7f050023;
        public static final int ic_invert_colors_enable_animation_root=0x7f050024;
        public static final int ic_landscape_from_auto_rotate_animation_arrow_bottom=0x7f050025;
        public static final int ic_landscape_from_auto_rotate_animation_arrow_top=0x7f050026;
        public static final int ic_landscape_from_auto_rotate_animation_arrows=0x7f050027;
        public static final int ic_landscape_from_auto_rotate_animation_body=0x7f050028;
        public static final int ic_landscape_from_auto_rotate_animation_device=0x7f050029;
        public static final int ic_landscape_to_auto_rotate_animation_arrow_bottom=0x7f05002a;
        public static final int ic_landscape_to_auto_rotate_animation_arrow_top=0x7f05002b;
        public static final int ic_landscape_to_auto_rotate_animation_arrows=0x7f05002c;
        public static final int ic_landscape_to_auto_rotate_animation_body=0x7f05002d;
        public static final int ic_landscape_to_auto_rotate_animation_device=0x7f05002e;
        public static final int ic_portrait_from_auto_rotate_animation_arrow_bottom=0x7f05002f;
        public static final int ic_portrait_from_auto_rotate_animation_arrow_top=0x7f050030;
        public static final int ic_portrait_from_auto_rotate_animation_arrows=0x7f050031;
        public static final int ic_portrait_from_auto_rotate_animation_device=0x7f050032;
        public static final int ic_portrait_from_auto_rotate_animation_device_1=0x7f050033;
        public static final int ic_portrait_to_auto_rotate_animation_arrow_bottom=0x7f050034;
        public static final int ic_portrait_to_auto_rotate_animation_arrow_top=0x7f050035;
        public static final int ic_portrait_to_auto_rotate_animation_arrows=0x7f050036;
        public static final int ic_portrait_to_auto_rotate_animation_device=0x7f050037;
        public static final int ic_portrait_to_auto_rotate_animation_device_1=0x7f050038;
        public static final int ic_qs_signal_blink_1=0x7f050039;
        public static final int ic_qs_signal_blink_2=0x7f05003a;
        public static final int ic_qs_signal_blink_3=0x7f05003b;
        public static final int ic_signal_airplane_disable_animation_cross_1=0x7f05003c;
        public static final int ic_signal_airplane_disable_animation_ic_signal_airplane=0x7f05003d;
        public static final int ic_signal_airplane_disable_animation_mask=0x7f05003e;
        public static final int ic_signal_airplane_disable_animation_root=0x7f05003f;
        public static final int ic_signal_airplane_enable_animation_cross_1=0x7f050040;
        public static final int ic_signal_airplane_enable_animation_ic_signal_airplane=0x7f050041;
        public static final int ic_signal_airplane_enable_animation_mask=0x7f050042;
        public static final int ic_signal_airplane_enable_animation_root=0x7f050043;
        public static final int ic_signal_blink_1=0x7f050044;
        public static final int ic_signal_blink_2=0x7f050045;
        public static final int ic_signal_blink_3=0x7f050046;
        public static final int ic_signal_flashlight_disable_animation_cross_1=0x7f050047;
        public static final int ic_signal_flashlight_disable_animation_ic_signal_flashlight=0x7f050048;
        public static final int ic_signal_flashlight_disable_animation_mask=0x7f050049;
        public static final int ic_signal_flashlight_disable_animation_root=0x7f05004a;
        public static final int ic_signal_flashlight_enable_animation_cross_1=0x7f05004b;
        public static final int ic_signal_flashlight_enable_animation_ic_signal_flashlight=0x7f05004c;
        public static final int ic_signal_flashlight_enable_animation_mask=0x7f05004d;
        public static final int ic_signal_flashlight_enable_animation_root=0x7f05004e;
        public static final int ic_signal_hotknot_disable_animation_cross_1=0x7f05004f;
        public static final int ic_signal_hotknot_disable_animation_ic_signal_hotknot=0x7f050050;
        public static final int ic_signal_hotknot_disable_animation_mask=0x7f050051;
        public static final int ic_signal_hotknot_disable_animation_root=0x7f050052;
        public static final int ic_signal_hotknot_enable_animation_cross_1=0x7f050053;
        public static final int ic_signal_hotknot_enable_animation_ic_signal_hotknot=0x7f050054;
        public static final int ic_signal_hotknot_enable_animation_mask=0x7f050055;
        public static final int ic_signal_hotknot_enable_animation_root=0x7f050056;
        public static final int ic_signal_location_disable_animation_cross_1=0x7f050057;
        public static final int ic_signal_location_disable_animation_ic_signal_location=0x7f050058;
        public static final int ic_signal_location_disable_animation_mask=0x7f050059;
        public static final int ic_signal_location_disable_animation_root=0x7f05005a;
        public static final int ic_signal_location_enable_animation_cross_1=0x7f05005b;
        public static final int ic_signal_location_enable_animation_ic_signal_location=0x7f05005c;
        public static final int ic_signal_location_enable_animation_mask=0x7f05005d;
        public static final int ic_signal_location_enable_animation_root=0x7f05005e;
        public static final int ic_volume_collapse_chevron_02_animation=0x7f05005f;
        public static final int ic_volume_collapse_rectangle_1_animation=0x7f050060;
        public static final int ic_volume_collapse_rectangle_2_animation=0x7f050061;
        public static final int ic_volume_expand_chevron_01_animation=0x7f050062;
        public static final int ic_volume_expand_rectangle_3_animation=0x7f050063;
        public static final int ic_volume_expand_rectangle_4_animation=0x7f050064;
        public static final int lockscreen_fingerprint_draw_off_ridge_1_path_animation=0x7f050065;
        public static final int lockscreen_fingerprint_draw_off_ridge_2_path_animation=0x7f050066;
        public static final int lockscreen_fingerprint_draw_off_ridge_5_path_animation=0x7f050067;
        public static final int lockscreen_fingerprint_draw_off_ridge_6_path_animation=0x7f050068;
        public static final int lockscreen_fingerprint_draw_off_ridge_7_path_animation=0x7f050069;
        public static final int lockscreen_fingerprint_draw_on_ridge_1_path_animation=0x7f05006a;
        public static final int lockscreen_fingerprint_draw_on_ridge_2_path_animation=0x7f05006b;
        public static final int lockscreen_fingerprint_draw_on_ridge_5_path_animation=0x7f05006c;
        public static final int lockscreen_fingerprint_draw_on_ridge_6_path_animation=0x7f05006d;
        public static final int lockscreen_fingerprint_draw_on_ridge_7_path_animation=0x7f05006e;
        public static final int lockscreen_fingerprint_error_state_to_fp_group_1_animation=0x7f05006f;
        public static final int lockscreen_fingerprint_error_state_to_fp_group_2_animation=0x7f050070;
        public static final int lockscreen_fingerprint_error_state_to_fp_path_1_animation=0x7f050071;
        public static final int lockscreen_fingerprint_error_state_to_fp_path_2_animation=0x7f050072;
        public static final int lockscreen_fingerprint_error_state_to_fp_path_3_animation=0x7f050073;
        public static final int lockscreen_fingerprint_error_state_to_fp_ridge_1_path_animation=0x7f050074;
        public static final int lockscreen_fingerprint_error_state_to_fp_ridge_2_path_animation=0x7f050075;
        public static final int lockscreen_fingerprint_error_state_to_fp_ridge_5_path_animation=0x7f050076;
        public static final int lockscreen_fingerprint_error_state_to_fp_ridge_6_path_animation=0x7f050077;
        public static final int lockscreen_fingerprint_error_state_to_fp_ridge_7_path_animation=0x7f050078;
        public static final int lockscreen_fingerprint_error_state_to_fp_white_fingerprint_ridges_animation=0x7f050079;
        public static final int lockscreen_fingerprint_fp_to_error_state_fingerprint_ridges_animation=0x7f05007a;
        public static final int lockscreen_fingerprint_fp_to_error_state_group_1_animation=0x7f05007b;
        public static final int lockscreen_fingerprint_fp_to_error_state_group_2_animation=0x7f05007c;
        public static final int lockscreen_fingerprint_fp_to_error_state_path_1_animation=0x7f05007d;
        public static final int lockscreen_fingerprint_fp_to_error_state_path_2_animation=0x7f05007e;
        public static final int lockscreen_fingerprint_fp_to_error_state_path_3_animation=0x7f05007f;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_1_path_0_animation=0x7f050080;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_1_path_animation=0x7f050081;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_2_path_0_animation=0x7f050082;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_2_path_animation=0x7f050083;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_5_path_0_animation=0x7f050084;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_5_path_animation=0x7f050085;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_6_path_0_animation=0x7f050086;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_6_path_animation=0x7f050087;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_7_path_0_animation=0x7f050088;
        public static final int lockscreen_fingerprint_fp_to_error_state_ridge_7_path_animation=0x7f050089;
        public static final int lockscreen_fingerprint_fp_to_error_state_white_fingerprint_ridges_animation=0x7f05008a;
        public static final int navbar_fade_in=0x7f05008b;
        public static final int progress_indeterminate_horizontal_rect1_scale=0x7f05008c;
        public static final int progress_indeterminate_horizontal_rect1_translate=0x7f05008d;
        public static final int progress_indeterminate_horizontal_rect2_scale=0x7f05008e;
        public static final int progress_indeterminate_horizontal_rect2_translate=0x7f05008f;
        public static final int recents_from_app_enter=0x7f050090;
        public static final int recents_from_app_exit=0x7f050091;
        public static final int recents_from_launcher_enter=0x7f050092;
        public static final int recents_from_launcher_exit=0x7f050093;
        public static final int recents_from_search_launcher_enter=0x7f050094;
        public static final int recents_from_search_launcher_exit=0x7f050095;
        public static final int recents_from_unknown_enter=0x7f050096;
        public static final int recents_from_unknown_exit=0x7f050097;
        public static final int recents_launch_from_launcher_enter=0x7f050098;
        public static final int recents_launch_from_launcher_exit=0x7f050099;
        public static final int recents_launch_next_affiliated_task_bounce=0x7f05009a;
        public static final int recents_launch_next_affiliated_task_source=0x7f05009b;
        public static final int recents_launch_next_affiliated_task_target=0x7f05009c;
        public static final int recents_launch_prev_affiliated_task_bounce=0x7f05009d;
        public static final int recents_launch_prev_affiliated_task_source=0x7f05009e;
        public static final int recents_launch_prev_affiliated_task_target=0x7f05009f;
        public static final int recents_return_to_launcher_enter=0x7f0500a0;
        public static final int recents_return_to_launcher_exit=0x7f0500a1;
        public static final int recents_to_launcher_enter=0x7f0500a2;
        public static final int recents_to_launcher_exit=0x7f0500a3;
        public static final int recents_to_search_launcher_enter=0x7f0500a4;
        public static final int recents_to_search_launcher_exit=0x7f0500a5;
        public static final int search_launch_enter=0x7f0500a6;
        public static final int search_launch_exit=0x7f0500a7;
        public static final int system_in=0x7f0500a8;
        public static final int system_out=0x7f0500a9;
        public static final int trusted_state_to_error_ellipse_path_1_animation=0x7f0500aa;
        public static final int trusted_state_to_error_ellipse_path_2_animation=0x7f0500ab;
        public static final int trusted_state_to_error_exclamation_dot_animation=0x7f0500ac;
        public static final int trusted_state_to_error_lock_left_side_animation=0x7f0500ad;
        public static final int trusted_state_to_error_lock_right_side_animation=0x7f0500ae;
        public static final int trusted_state_to_error_lock_top_animation=0x7f0500af;
        public static final int trusted_state_to_error_path_1_animation=0x7f0500b0;
        public static final int trusted_state_to_error_path_2_animation=0x7f0500b1;
        public static final int trusted_state_to_error_path_3_animation=0x7f0500b2;
        public static final int trusted_state_to_error_rectangle_path_1_animation=0x7f0500b3;
        public static final int wallpaper_recents_launch_from_launcher_enter=0x7f0500b4;
        public static final int wallpaper_recents_launch_from_launcher_exit=0x7f0500b5;
    }
    public static final class array {
        public static final int batterymeter_bolt_points=0x7f08000b;
        /**  BatteryMeterView parameters 
         */
        public static final int batterymeter_color_levels=0x7f080009;
        public static final int batterymeter_color_values=0x7f08000a;
        public static final int dismiss_descriptions=0x7f080006;
        public static final int dismiss_direction_descriptions=0x7f080007;
        public static final int dismiss_drawables=0x7f080005;
        /**  list of 3- or 4-letter mnemonics for a 10-key numeric keypad 
 9 
         */
        public static final int lockscreen_num_pad_klondike=0x7f080008;
        public static final int snooze_dismiss_descriptions=0x7f080003;
        public static final int snooze_dismiss_direction_descriptions=0x7f080004;
        public static final int snooze_dismiss_drawables=0x7f080002;
        /**  STREAM_TTS 
         */
        public static final int volume_stream_titles=0x7f08000c;
        /**  Wi-Fi settings. The status messages when the network is unknown. 
         */
        public static final int wifi_status=0x7f080000;
        /**  Wi-Fi settings. The status messages when the network is known. 
         */
        public static final int wifi_status_with_ssid=0x7f080001;
    }
    public static final class attr {
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int activatedFontFamily=0x7f010029;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int activeFrameColor=0x7f010027;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allCaps=0x7f010014;
        /**  Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent. If this is set to false, no scaling will occur. If this is set to true
            scaling will occur to fit for any axis in which gravity is set to center. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowScaling=0x7f01000e;
        /**  Used when the handle shouldn't wait to be hit before following the finger 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysTrackFinger=0x7f01000d;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>small</code></td><td>1</td><td></td></tr>
<tr><td><code>gone</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int amPmStyle=0x7f010023;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundColor=0x7f01002e;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int circleProgressColor=0x7f010037;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int circleProgressNormalColor=0x7f010036;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int circleWidth=0x7f010038;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int datePattern=0x7f01002a;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int decayTime=0x7f010021;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int digit=0x7f010011;
        /**  Reference to an array resource that be used to announce the directions with targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int directionDescriptions=0x7f010003;
        /**  Number of waves/chevrons to show in animation. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int feedbackCount=0x7f01000c;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColor=0x7f01002f;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int frameColor=0x7f010022;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int framePadding=0x7f010026;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int frameWidth=0x7f010025;
        /**  Size of target radius. Points within this distance of target center is a "hit". 

        <attr name="hitRadius" format="dimension"/>
        
 Radius of glow under finger. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int glowRadius=0x7f010009;
        /**  Sets a drawable as the center. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handleDrawable=0x7f010004;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hasOverlappingRendering=0x7f010032;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int holdTime=0x7f010020;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalSpacing=0x7f01002d;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ignoreRightInset=0x7f010031;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerCircleSpace=0x7f010033;
        /**  Inner radius of glow area. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerRadius=0x7f010007;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetLeft=0x7f01001b;
        /**  key code to send when pressed; if absent or 0, no key is sent 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyCode=0x7f010018;
        /**  does this button generate longpress / repeat events? 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeat=0x7f010019;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_maxHeight=0x7f010010;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_maxWidth=0x7f01000f;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int locateAtNonSecureView=0x7f010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxSize=0x7f01001f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minSize=0x7f01001e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int normalBackground=0x7f010034;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numColumns=0x7f01002b;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int orientation=0x7f010024;
        /**  Outer radius of glow area. Target icons will be drawn on this circle. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int outerRadius=0x7f010008;
        /**  Drawable to use for wave ripple animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int outerRingDrawable=0x7f010005;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int percentTextColor=0x7f01003d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int percentTextLargeSize=0x7f01003c;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int percentTextSize=0x7f01003b;
        /**  Drawble used for drawing points 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointDrawable=0x7f010006;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pressedBackground=0x7f010035;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int recentItemLayout=0x7f01001d;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int regularFontFamily=0x7f010028;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int residentClassName=0x7f010016;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int residentOrder=0x7f010017;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int residentPackageName=0x7f010015;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f01001c;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleTextForeColor=0x7f01003f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleTextSize=0x7f01003e;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleTextbehindColor=0x7f010040;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaledTextSize=0x7f010013;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int singleToneColor=0x7f010030;
        /**  How close we need to be before snapping to a target. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int snapMargin=0x7f01000b;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int startAngle=0x7f010039;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int sweepAngle=0x7f01003a;
        /**  Reference to an array resource that be used as description for the targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDescriptions=0x7f010002;
        /**  Reference to an array resource that be shown as targets around a circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDrawables=0x7f010001;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int text=0x7f01001a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textView=0x7f010012;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalSpacing=0x7f01002c;
        /**  Tactile feedback duration for actions. Set to '0' for no vibration. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int vibrationDuration=0x7f01000a;
    }
    public static final class bool {
        public static final int config_dead_zone_flash=0x7f0b0013;
        /**  Allow the menu hard key to be disabled in LockScreen on some devices [DO NOT TRANSLATE] 
         */
        public static final int config_disableMenuKeyInLockScreen=0x7f0b0006;
        /**  Whether to enable KeyguardService or not 
         */
        public static final int config_enableKeyguardService=0x7f0b0018;
        /**  Alias used to reference framework configuration for screen rotation.  
         */
        public static final int config_enableLockScreenRotation=0x7f0b0001;
        /**  Alias used to reference framework configuration for translucent decor.  
         */
        public static final int config_enableLockScreenTranslucentDecor=0x7f0b0002;
        /**  Control whether status bar should distinguish HSPA data icon form UMTS
    data icon on devices 
         */
        public static final int config_hspa_data_distinguishable=0x7f0b000c;
        /**  A: DELSLM-160 huangerhui 20160129 { 
         */
        public static final int config_isShownBatteryFullDialog=0x7f0b0021;
        /**  Show camera affordance on Keyguard 
         */
        public static final int config_keyguardShowCameraAffordance=0x7f0b0011;
        /**  Set to true to enable the user switcher on the keyguard. 
 Set to true to enable the user switcher on the keyguard. 
         */
        public static final int config_keyguardUserSwitcher=0x7f0b0019;
        /**  Whether to clip notification contents with a rounded rectangle. Might be expensive on
         certain GPU's and thus can be turned off with only minimal visual impact. 
         */
        public static final int config_notifications_round_rect_clipping=0x7f0b000b;
        /**  Whether to use cheap, less good looking shadows for recents 
         */
        public static final int config_recents_fake_shadows=0x7f0b000a;
        /**  Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
 Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
         */
        public static final int config_recents_interface_for_tablets=0x7f0b0007;
        /**  Whether recents thumbnails should stretch in both x and y to fill their
     ImageView 
 Whether recents thumbnails should stretch in both x and y to fill their
     ImageView 
         */
        public static final int config_recents_thumbnail_image_fits_to_xy=0x7f0b0008;
        /**  Whether recents should use hardware layers for its taskviews. This flag can be enabled
    for devices where the java drawing of round rects may be slow 
         */
        public static final int config_recents_use_hardware_layers=0x7f0b0009;
        /**  Should "4G" be shown instead of "LTE" when the network is NETWORK_TYPE_LTE? 
         */
        public static final int config_show4GForLTE=0x7f0b0015;
        /**  When true, show 1/2G networks as 3G. 
         */
        public static final int config_showMin3G=0x7f0b000f;
        /**  Show phone (voice) signal strength instead of data in mobile RSSI. 
         */
        public static final int config_showPhoneRSSIForData=0x7f0b000e;
        /**  Show rotation lock toggle in System UI
         */
        public static final int config_showRotationLock=0x7f0b0010;
        /**  Whether or not we show the number in the bar. 
         */
        public static final int config_statusBarShowNumber=0x7f0b000d;
        /**  Whether we should use SRC drawing mode when drawing the scrim behind. If this flag is set,
         we change the canvas opacity so libhwui doesn't call glClear on our surface, and then we
         draw the scrim with SRC to overwrite the whole buffer, which saves us a layer of overdraw.
         However, SRC performs poorly on some devices, where it is more efficient to
         glClear + SRC_OVER, in which case this flag should be disabled. 
         */
        public static final int config_status_bar_scrim_behind_use_src=0x7f0b0012;
        public static final int config_useCondensedSongInfoLayout=0x7f0b0000;
        /**  Doze: does this device support STATE_DOZE and STATE_DOZE_SUSPEND?  
         */
        public static final int doze_display_state_supported=0x7f0b001a;
        /**  Doze: can we assume the pickup sensor includes a proximity check? 
         */
        public static final int doze_pickup_performs_proximity_check=0x7f0b001f;
        /**  Doze: check proximity sensor before pulsing? 
         */
        public static final int doze_proximity_check_before_pulse=0x7f0b001d;
        /**  Doze: should notifications be used as a pulse signal? 
         */
        public static final int doze_pulse_on_notifications=0x7f0b001e;
        /**  Doze: should the pickup sensor be used as a pulse signal? 
         */
        public static final int doze_pulse_on_pick_up=0x7f0b001c;
        /**  Doze: should the significant motion sensor be used as a pulse signal? 
         */
        public static final int doze_pulse_on_significant_motion=0x7f0b001b;
        /**  Enable the default volume dialog 
         */
        public static final int enable_volume_ui=0x7f0b0020;
        public static final int kg_show_ime_at_screen_on=0x7f0b0003;
        public static final int kg_sim_puk_account_full_screen=0x7f0b0005;
        /**  Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
 Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
 Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
         */
        public static final int kg_use_all_caps=0x7f0b0004;
        /**  Whether or not the RSSI tile is capitalized or not. 
 Whether or not the RSSI tile is capitalized or not. 
 Whether or not the RSSI tile is capitalized or not. 
 Whether or not the RSSI tile is capitalized or not. 
         */
        public static final int quick_settings_rssi_tile_capitalization=0x7f0b0014;
        /**  Transposes the nav bar in landscape (only used for purposes of layout). 
 Transposes the nav bar in landscape (only used for purposes of layout). 
 Transposes the nav bar in landscape (only used for purposes of layout). 
         */
        public static final int recents_has_transposed_nav_bar=0x7f0b0017;
        /**  Transposes the search bar layout in landscape. 
 Transposes the search bar layout in landscape. 
 Transposes the search bar layout in landscape. 
         */
        public static final int recents_has_transposed_search_bar=0x7f0b0016;
        /**  Transposes the search bar layout in landscape 
         */
        public static final int recents_transpose_search_layout_with_orientation=0x7f0b0022;
    }
    public static final class color {
        public static final int assist_orb_color=0x7f0d0036;
        public static final int batterymeter_bolt_color=0x7f0d000b;
        /**  30% white 
         */
        public static final int batterymeter_charge_color=0x7f0d000a;
        public static final int batterymeter_frame_color=0x7f0d0009;
        public static final int clock_gray=0x7f0d0002;
        /**  Clock 
         */
        public static final int clock_white=0x7f0d0001;
        /**  The color of the circle around the primary user in the user switcher 
         */
        public static final int current_user_border_color=0x7f0d0031;
        public static final int dark_mode_icon_color_dual_tone_background=0x7f0d0043;
        public static final int dark_mode_icon_color_dual_tone_fill=0x7f0d0044;
        /**  blue grey 200 
         */
        public static final int dark_mode_icon_color_single_tone=0x7f0d0042;
        /**  60% white 
         */
        public static final int data_usage_graph_track=0x7f0d001b;
        /**  20% white 
         */
        public static final int data_usage_graph_warning=0x7f0d001c;
        /**  60% deep teal 500 
         */
        public static final int data_usage_secondary=0x7f0d001a;
        public static final int doze_small_icon_background_color=0x7f0d0038;
        /**  Shadow color for the furthest pixels around the fake shadow for recents. 
         */
        public static final int fake_shadow_end_color=0x7f0d003b;
        /**  Shadow color for the first pixels around the fake shadow for recents. 
         */
        public static final int fake_shadow_start_color=0x7f0d003a;
        public static final int keyguard_affordance=0x7f0d0028;
        /**  not so muted after all 
 Tint color for the content on the notification overflow card. 
         */
        public static final int keyguard_overflow_content_color=0x7f0d001f;
        public static final int keyguard_user_switcher_background_gradient_color=0x7f0d0037;
        public static final int light_mode_icon_color_dual_tone_background=0x7f0d0046;
        public static final int light_mode_icon_color_dual_tone_fill=0x7f0d0047;
        public static final int light_mode_icon_color_single_tone=0x7f0d0045;
        /**  The color of the navigation bar icons. Need to be in sync with ic_sysbar_* 
         */
        public static final int navigation_bar_icon_color=0x7f0d0039;
        /**  The "inside" of a notification, reached via longpress 
         */
        public static final int notification_guts_bg_color=0x7f0d0032;
        public static final int notification_guts_btn_color=0x7f0d0035;
        public static final int notification_guts_text_color=0x7f0d0034;
        public static final int notification_guts_title_color=0x7f0d0033;
        /**  The color of the legacy notification background 
         */
        public static final int notification_legacy_background_color=0x7f0d0029;
        public static final int notification_list_shadow_top=0x7f0d0008;
        /**  The color of the material notification background 
         */
        public static final int notification_material_background_color=0x7f0d002a;
        /**  The color of the material notification background when dimmed 
         */
        public static final int notification_material_background_dimmed_color=0x7f0d002b;
        /**  The color of the material notification background when low priority 
         */
        public static final int notification_material_background_low_priority_color=0x7f0d002c;
        /**  The color of the material notification background for media notifications when no custom
         color is specified 
         */
        public static final int notification_material_background_media_default_color=0x7f0d002d;
        public static final int notification_panel_solid_background=0x7f0d0006;
        /**  The color of the ripples on the low priority notifications 
         */
        public static final int notification_ripple_color_low_priority=0x7f0d002f;
        /**  The color of the ripples on the tinted notifications 
         */
        public static final int notification_ripple_tinted_color=0x7f0d0030;
        /**  The color of the ripples on the untinted notifications 
         */
        public static final int notification_ripple_untinted_color=0x7f0d002e;
        public static final int qs_batterymeter_frame_color=0x7f0d000c;
        /**  14% blue grey 200 
         */
        public static final int qs_detail_button=0x7f0d0016;
        /**  100% blue grey 200 
         */
        public static final int qs_detail_button_white=0x7f0d0017;
        /**  60% white 
         */
        public static final int qs_detail_empty=0x7f0d0015;
        public static final int qs_detail_progress_track=0x7f0d0019;
        /**  70% white 
         */
        public static final int qs_detail_transition=0x7f0d0018;
        /**  70% white 
         */
        public static final int qs_subhead=0x7f0d0014;
        /**  deep orange 600 
         */
        public static final int qs_text=0x7f0d0011;
        public static final int qs_tile_divider=0x7f0d0012;
        /**  16% white 
         */
        public static final int qs_tile_text=0x7f0d0013;
        public static final int qs_user_detail_icon_muted=0x7f0d001e;
        public static final int qs_user_detail_name=0x7f0d0050;
        public static final int recents_clear_all_color_gray=0x7f0d004e;
        public static final int recents_clear_all_green_dark=0x7f0d004d;
        /**  blue grey 200 
 A:DSYYLM-64 guoshuai 20160108(start) 
         */
        public static final int recents_clear_all_green_light=0x7f0d004c;
        /**  The recents task bar dark dismiss icon color to be drawn on top of light backgrounds. 
         */
        public static final int recents_task_bar_dark_dismiss_color=0x7f0d0024;
        /**  The recents task bar dark text color to be drawn on top of light backgrounds. 
         */
        public static final int recents_task_bar_dark_text_color=0x7f0d0022;
        /**  The default recents task bar background color. 
         */
        public static final int recents_task_bar_default_background_color=0x7f0d0020;
        /**  The recents task bar highlight color. 
         */
        public static final int recents_task_bar_highlight_color=0x7f0d0025;
        /**  The recents task bar light dismiss icon color to be drawn on top of dark backgrounds. 
         */
        public static final int recents_task_bar_light_dismiss_color=0x7f0d0023;
        /**  The recents task bar light text color to be drawn on top of dark backgrounds. 
         */
        public static final int recents_task_bar_light_text_color=0x7f0d0021;
        /**  The lock to task button background color. 
         */
        public static final int recents_task_view_lock_to_app_button_background_color=0x7f0d0026;
        /**  The lock to task button foreground color. 
         */
        public static final int recents_task_view_lock_to_app_button_color=0x7f0d0027;
        public static final int screen_pinning_nav_icon_highlight_outer=0x7f0d003c;
        public static final int screen_pinning_primary_text=0x7f0d004f;
        /**  25% deep teal 200 
         */
        public static final int screen_pinning_request_bg=0x7f0d003d;
        /**  deep teal 500 
         */
        public static final int screen_pinning_request_window_bg=0x7f0d003e;
        /**  8% white 
         */
        public static final int segmented_button_selected=0x7f0d0040;
        public static final int segmented_button_text_selector=0x7f0d0051;
        public static final int segmented_button_unselected=0x7f0d0041;
        public static final int segmented_buttons_background=0x7f0d003f;
        public static final int status_bar_clock_color=0x7f0d001d;
        public static final int status_bar_recents_app_label_color=0x7f0d0007;
        public static final int system_accent_color=0x7f0d000f;
        public static final int system_bar_background_opaque=0x7f0d0003;
        public static final int system_bar_background_semi_transparent=0x7f0d0004;
        /**  40% black 
         */
        public static final int system_bar_background_transparent=0x7f0d0005;
        public static final int system_primary_color=0x7f0d000d;
        /**  blue grey 900 
         */
        public static final int system_secondary_color=0x7f0d000e;
        /**  deep teal 200 
         */
        public static final int system_warning_color=0x7f0d0010;
        /**  Alias used to reference framework color for transparency. 
         */
        public static final int transparent=0x7f0d0000;
        /**  deep teal 500 
         */
        public static final int volume_icon_color=0x7f0d0049;
        public static final int volume_settings_icon_color=0x7f0d004a;
        public static final int volume_slider_inactive=0x7f0d004b;
        public static final int zen_introduction_message_background=0x7f0d0048;
    }
    public static final class dimen {
        public static final int G=0x7f0a013d;
        /**  The y translation to apply at the start in appear animations. 
 The y translation to apply at the start in appear animations. 
         */
        public static final int appear_y_translation_start=0x7f0a0000;
        /**  Thickness of the shadows of the assist disclosure beams 
         */
        public static final int assist_disclosure_shadow_thickness=0x7f0a0122;
        /**  Thickness of the assist disclosure beams 
         */
        public static final int assist_disclosure_thickness=0x7f0a0121;
        /**  The margin to the edge of the screen from where the orb starts to appear 
         */
        public static final int assist_orb_base_margin=0x7f0a00f7;
        /**  The elevation of the orb 
         */
        public static final int assist_orb_elevation=0x7f0a00f9;
        /**  The height of the scrim behind the search panel circle. Should be navigation_bar_height
         + 8dp. 
         */
        public static final int assist_orb_navbar_scrim_height=0x7f0a00fb;
        /**  The height of the scrim behind the orb. 
         */
        public static final int assist_orb_scrim_height=0x7f0a00fa;
        /**  The diameter of the search panel circle. 
         */
        public static final int assist_orb_size=0x7f0a00f6;
        /**  The amount the orb translates when appearing 
         */
        public static final int assist_orb_travel_distance=0x7f0a00f8;
        /**  Battery level text padding end when in expanded QS and on Keyguard 
         */
        public static final int battery_level_padding_end=0x7f0a00ed;
        /**  The text size for battery level 
         */
        public static final int battery_level_text_size=0x7f0a0101;
        public static final int battery_margin_bottom=0x7f0a0107;
        public static final int big_font_size=0x7f0a002d;
        public static final int blade_font_size=0x7f0a0005;
        public static final int blade_indicator_height=0x7f0a0004;
        /**  Dimemsions for BladeView. 
         */
        public static final int blade_indicator_width=0x7f0a0003;
        public static final int blade_prompt_horz_offset=0x7f0a0008;
        public static final int blade_prompt_vert_offset=0x7f0a0007;
        public static final int blade_prompt_width=0x7f0a0006;
        public static final int blinds_pop_threshold=0x7f0a0085;
        public static final int body_font_padding=0x7f0a003a;
        public static final int body_font_size=0x7f0a0039;
        /**  The height of gallery image on the hdpi Device 
         */
        public static final int bookmark_bitmap_height=0x7f0a001c;
        /**  The width of gallery image on the hdpi Device 
         */
        public static final int bookmark_bitmap_width=0x7f0a001b;
        /**  The gap between two adjacent dot 
         */
        public static final int bookmark_dot_gap=0x7f0a0019;
        /**  The CoverFlow space 
         */
        public static final int bookmark_spacing=0x7f0a001a;
        /**  Dimemsions for BookmarkWidget. 
         */
        public static final int bookmarkwidget_anim_height=0x7f0a0017;
        public static final int boost_dv=0x7f0a012d;
        public static final int borderless_button_radius=0x7f0a009f;
        /**  Space reserved for the cards behind the top card in the bottom stack 
         */
        public static final int bottom_stack_peek_amount=0x7f0a00b8;
        /**  The height of the area before the bottom stack in which the notifications slow down 
         */
        public static final int bottom_stack_slow_down_length=0x7f0a00ba;
        /**  Default clock parameters 
         */
        public static final int bottom_text_spacing_digital=0x7f0a0045;
        public static final int building_height_min=0x7f0a0136;
        public static final int building_width_max=0x7f0a0135;
        public static final int building_width_min=0x7f0a0134;
        public static final int button_font_size=0x7f0a003b;
        /**  fill_horizontal|top 
 Height of the carrier/wifi name label 
         */
        public static final int carrier_label_height=0x7f0a0082;
        /**  The top padding of the clear all button 
         */
        public static final int clear_all_padding_top=0x7f0a00ee;
        /**  The padding bottom of the clock group when QS is collapsed. 
         */
        public static final int clock_collapsed_bottom_margin=0x7f0a00e1;
        /**  The padding bottom of the clock group when QS is collapsed for large text 
         */
        public static final int clock_collapsed_bottom_margin_large_text=0x7f0a00e2;
        /**  The padding bottom of the clock group when QS is expanded. 
         */
        public static final int clock_expanded_bottom_margin=0x7f0a00e0;
        /**  Height of the draggable handle at the bottom of the phone notification panel 
         */
        public static final int close_handle_height=0x7f0a007a;
        /**  Amount of close_handle that will NOT overlap the notification list 
         */
        public static final int close_handle_underlap=0x7f0a007b;
        public static final int cloud_size_max=0x7f0a0138;
        public static final int cloud_size_min=0x7f0a0137;
        /**  Dimemsions for ContactWidget. 
         */
        public static final int contactwidget_anim_height=0x7f0a0018;
        public static final int data_usage_graph_marker_width=0x7f0a00df;
        /**  The vertical margin between the date and the owner info. 
         */
        public static final int date_owner_info_margin=0x7f0a004a;
        /**  used by DessertCase 
         */
        public static final int dessert_case_cell_size=0x7f0a00a5;
        public static final int dialog_button_font_size=0x7f0a003d;
        /**  The translation for disappearing security views after having solved them. 
 The translation for disappearing security views after having solved them. 
         */
        public static final int disappear_y_translation=0x7f0a0001;
        /**  EmergencyCarrierArea overlap - amount to overlap the emergency button and carrier text.
         Should be 0 on devices with plenty of room (e.g. tablets) 
 EmergencyCarrierArea overlap - amount to overlap the emergency button and carrier text.
         Should be 0 on devices with plenty of room (e.g. tablets) 
         */
        public static final int eca_overlap=0x7f0a0044;
        /**  The width of the region on the left/right edge of the screen for performing the camera/
         phone hints. 
 The width of the region on the left/right edge of the screen for performing the camera/
     phone hints. 
         */
        public static final int edge_tap_area_width=0x7f0a00d3;
        /**  Inset shadow for FakeShadowDrawable. It is used to avoid gaps between the card
         and the shadow. 
         */
        public static final int fake_shadow_inset=0x7f0a010c;
        public static final int fake_shadow_size=0x7f0a010d;
        /**  Padding to be used on the bottom of the fingerprint icon on Keyguard so it better aligns
         with the other icons. 
         */
        public static final int fingerprint_icon_additional_padding=0x7f0a011a;
        public static final int float_bottom_min_width=0x7f0a0050;
        public static final int float_container_width=0x7f0a004f;
        /**  The padding on the global screenshot background image 
         */
        public static final int global_screenshot_bg_padding=0x7f0a0072;
        /**  Default glow radius for GlowPadView 
 Default glow radius for GlowPadView 
         */
        public static final int glowpadview_glow_radius=0x7f0a0033;
        /**  Default distance from each snap target that GlowPadView considers a "hit" 
 Default distance from each snap target that GlowPadView considers a "hit" 
         */
        public static final int glowpadview_inner_radius=0x7f0a0031;
        /**  Default glow radius for GlowPadView 
         */
        public static final int glowpadview_margin_bottom=0x7f0a002e;
        public static final int glowpadview_margin_right=0x7f0a002f;
        /**  Size of alarm alert outer ring. 
         */
        public static final int glowpadview_outerring_diameter=0x7f0a0034;
        /**  Default distance beyond which GlowPadView snaps to the matching target 
         */
        public static final int glowpadview_snap_margin=0x7f0a0032;
        /**  Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
         */
        public static final int glowpadview_target_placement_radius=0x7f0a0030;
        /**  Additional translation (downwards) for appearing notifications when going to the full shade
         from Keyguard. 
         */
        public static final int go_to_full_shade_appearing_translation=0x7f0a00f5;
        public static final int gridview_column_width=0x7f0a004c;
        public static final int gridview_horizontal_spacing=0x7f0a004d;
        /** M:add for multi window@{
M:add for multi window@{
         */
        public static final int gridview_more_height=0x7f0a004b;
        public static final int gridview_vertical_spacing=0x7f0a004e;
        /**  Margin on the left side of the battery % in the header. 
         */
        public static final int header_battery_margin_expanded=0x7f0a00f1;
        /**  Margin on the left side of the battery % when on Keyguard. 
         */
        public static final int header_battery_margin_keyguard=0x7f0a00f2;
        public static final int header_battery_power_save=0x7f0a00f3;
        public static final int header_font_size=0x7f0a0038;
        /**  Distance between notifications and header when they are considered to be colliding. 
         */
        public static final int header_notifications_collide_distance=0x7f0a00cf;
        public static final int heads_up_scrim_height=0x7f0a00ca;
        /**  The grow amount for the camera and phone circles when hinting 
         */
        public static final int hint_grow_amount_sideways=0x7f0a00ce;
        /**  Move distance for the unlock hint animation on the lockscreen 
         */
        public static final int hint_move_distance=0x7f0a00d2;
        public static final int hud_z=0x7f0a0143;
        /**  The maximum width of the navigation bar ripples. 
         */
        public static final int key_button_ripple_max_width=0x7f0a010b;
        /**  The width/height of the phone/camera/unlock icon view on keyguard. 
 The width/height of the phone/camera/unlock icon on keyguard. 
         */
        public static final int keyguard_affordance_height=0x7f0a00fc;
        /**  The width/height of the phone/camera/unlock icon drawable on keyguard. 
         */
        public static final int keyguard_affordance_icon_height=0x7f0a00fe;
        public static final int keyguard_affordance_icon_width=0x7f0a00ff;
        /**  The minimum background radius when swiping to a side for the camera / phone affordances. 
         */
        public static final int keyguard_affordance_min_background_radius=0x7f0a00cc;
        /**  The size of the touch targets on the keyguard for the affordances. 
         */
        public static final int keyguard_affordance_touch_target_size=0x7f0a00cd;
        public static final int keyguard_affordance_width=0x7f0a00fd;
        /**  Margin on the left side of the carrier text on Keyguard 
 Margin on the left side of the carrier text on Keyguard 
         */
        public static final int keyguard_carrier_text_margin=0x7f0a00f0;
        public static final int keyguard_clock_notifications_margin_max=0x7f0a00c9;
        /**  The margin between the clock and the notifications on Keyguard. See
         keyguard_clock_height_fraction_* for the difference between min and max.
 The margin between the clock and the notifications on Keyguard. See
         keyguard_clock_height_fraction_* for the difference between min and max.
         */
        public static final int keyguard_clock_notifications_margin_min=0x7f0a00c8;
        /**  Minimum distance the user has to drag down to go to the full shade. 
         */
        public static final int keyguard_drag_down_min_distance=0x7f0a00c7;
        public static final int keyguard_indication_margin_bottom=0x7f0a0100;
        /**  The minimum amount the user needs to swipe to go to the camera / phone. 
         */
        public static final int keyguard_min_swipe_amount=0x7f0a00cb;
        /**  Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x
         keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer
        (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_height=0x7f0a0041;
        /**  Max Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Max Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_max_height=0x7f0a0042;
        /**  Margin around the various security views 
 Margin around the various security views 
         */
        public static final int keyguard_security_view_margin=0x7f0a0043;
        /**  Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_width=0x7f0a0040;
        /**  Power off alarm end
 on phones, the keyguard widget may be too small to be cut.
       Set a minimum height and reduce the challenge container height 
         */
        public static final int keyguard_small_widget_height_for_phone=0x7f0a003e;
        /**  The thickness of the colored border around the current user. 
         */
        public static final int keyguard_user_switcher_border_thickness=0x7f0a00de;
        /**  For keyguard, dual clock 
         */
        public static final int kg_status_clock_ampm_font_size=0x7f0a001f;
        public static final int kg_status_clock_font_size=0x7f0a0020;
        public static final int kg_status_dual_first_clock_ampm_font_size=0x7f0a0022;
        public static final int kg_status_dual_first_clock_time_font_size=0x7f0a0021;
        public static final int kg_status_dual_second_clock_ampm_font_size=0x7f0a0024;
        public static final int kg_status_dual_second_clock_localweekday_font_size=0x7f0a0025;
        public static final int kg_status_dual_second_clock_time_font_size=0x7f0a0023;
        /**  Size of the generic status lines keyguard's status view  
 Size of the generic status lines keyguard's status view  
         */
        public static final int kg_status_line_font_size=0x7f0a003f;
        public static final int label_font_size=0x7f0a002c;
        /**  Power-off alarm start 
         */
        public static final int label_margin_big=0x7f0a0026;
        public static final int label_margin_small=0x7f0a0027;
        /**  Padding between icon and text for managed profile toast 
         */
        public static final int managed_profile_toast_padding=0x7f0a0120;
        /**  Width for the notification panel and related windows 
         */
        public static final int match_parent=0x7f0a007f;
        /**  Largest size an avatar might need to be drawn in the user picker, status bar, or
         quick settings header 
         */
        public static final int max_avatar_size=0x7f0a00ef;
        public static final int max_v=0x7f0a013e;
        public static final int medium_font_size=0x7f0a0036;
        /**  bottom_stack_peek_amount + notification_min_height
         + notification_collapse_second_card_padding 
         */
        public static final int min_stack_height=0x7f0a00b9;
        /**  The minimum amount of top overscroll to go to the quick settings. 
         */
        public static final int min_top_overscroll_to_qs=0x7f0a00c0;
        public static final int mmswidget_setting_anim_height=0x7f0a000e;
        /**  Dimemsions for MMSWidget. 
         */
        public static final int mmswidget_utils_hight=0x7f0a0009;
        public static final int mmswidget_utils_photo_inner_paddingleft=0x7f0a000c;
        public static final int mmswidget_utils_photo_inner_paddingtop=0x7f0a000d;
        public static final int mmswidget_utils_photo_outer_padding=0x7f0a000b;
        public static final int mmswidget_utils_width=0x7f0a000a;
        public static final int mmswidget_view_dynamic_p0dy=0x7f0a0013;
        public static final int mmswidget_view_dynamic_p2dy=0x7f0a0014;
        public static final int mmswidget_view_dynamic_p3dy=0x7f0a0015;
        public static final int mmswidget_view_dynamic_p4dy=0x7f0a0016;
        public static final int mmswidget_view_static_p0dy=0x7f0a000f;
        public static final int mmswidget_view_static_p2dy=0x7f0a0010;
        public static final int mmswidget_view_static_p3dy=0x7f0a0011;
        public static final int mmswidget_view_static_p4dy=0x7f0a0012;
        public static final int moon_size=0x7f0a013a;
        /**  The width of user avatar when collapsed 
         */
        public static final int multi_user_avatar_collapsed_size=0x7f0a00e6;
        /**  The width of user avatar when expanded 
         */
        public static final int multi_user_avatar_expanded_size=0x7f0a00e8;
        /**  The width of user avatar when on Keyguard 
 The width of user avatar when on Keyguard 
         */
        public static final int multi_user_avatar_keyguard_size=0x7f0a00e7;
        /**  end margin for multi user switch in collapsed quick settings 
         */
        public static final int multi_user_switch_collapsed_margin=0x7f0a00db;
        /**  end margin for multi user switch in expanded quick settings 
         */
        public static final int multi_user_switch_expanded_margin=0x7f0a00da;
        /**  end margin for multi user switch in collapsed quick settings 
 end margin for multi user switch in collapsed quick settings 
         */
        public static final int multi_user_switch_keyguard_margin=0x7f0a00dc;
        /**  The width of the multi user switch on keyguard and collapsed QS header. 
         */
        public static final int multi_user_switch_width_collapsed=0x7f0a00e3;
        /**  The width of the multi user switch in expanded QS header. 
         */
        public static final int multi_user_switch_width_expanded=0x7f0a00e4;
        /**  The width of user avatar when on Keyguard 
 The width of user avatar when on Keyguard 
         */
        public static final int multi_user_switch_width_keyguard=0x7f0a00e5;
        /**  Diameter of outer shape drawable shown in navbar search
 Diameter of outer shape drawable shown in navbar search
         */
        public static final int navbar_search_outerring_diameter=0x7f0a0077;
        /**  Diameter of outer shape drawable shown in navbar search. Should be 1/2 of above value 
 Diameter of outer shape drawable shown in navbar search. Should be 1/2 of above value. 
         */
        public static final int navbar_search_outerring_radius=0x7f0a0078;
        /**  Height of search panel including navigation bar height 
 Height of search panel including navigation bar height 
         */
        public static final int navbar_search_panel_height=0x7f0a0079;
        /**  Default distance beyond which snaps to the matching target 
         */
        public static final int navbar_search_snap_margin=0x7f0a0076;
        /**  thickness (height) of the dead zone at the top of the navigation bar,
         reducing false presses on navbar buttons; approx 2mm 
         */
        public static final int navigation_bar_deadzone_size=0x7f0a0066;
        /**  size of the dead zone when touches have recently occurred elsewhere on screen 
         */
        public static final int navigation_bar_deadzone_size_max=0x7f0a0067;
        public static final int navigation_bar_height=0x7f0a012a;
        /**  Minimum swipe distance to catch the swipe gestures to invoke assist or switch tasks. 
         */
        public static final int navigation_bar_min_swipe_distance=0x7f0a0065;
        /**  thickness (height) of the navigation bar on phones that require it 
 thickness (width) of the navigation bar on phones that require it 
         */
        public static final int navigation_bar_size=0x7f0a0064;
        /**  The width of the view containing the menu/ime navigation bar icons 
 The width of the view containing the menu/ime navigation bar icons 
 The width of the view containing the menu/ime navigation bar icons 
         */
        public static final int navigation_extra_key_width=0x7f0a0074;
        /**  The width of the view containing navigation buttons 
 The width of the view containing navigation buttons 
 The width of the view containing navigation buttons 
         */
        public static final int navigation_key_width=0x7f0a0073;
        /**  The padding on the side of the navigation bar. Must be greater than or equal to
         navigation_extra_key_width 
 The padding on the side of the navigation bar. Must be greater than or equal to
         navigation_extra_key_width 
 The padding on the side of the navigation bar. Must be greater than or equal to
         navigation_extra_key_width 
         */
        public static final int navigation_side_padding=0x7f0a0075;
        /**  Padding for signal cluster and battery icon when there are not icons in signal cluster 
         */
        public static final int no_signal_cluster_battery_padding=0x7f0a010f;
        /**  The vertical distance from which the notification appear when children are expanded 
         */
        public static final int notification_appear_distance=0x7f0a00d9;
        /**  height of the bottom decor below the notification if present (eg. an expand action) 
         */
        public static final int notification_bottom_decor_height=0x7f0a00d6;
        /**  The height of the divider between the notfication children 
         */
        public static final int notification_children_divider_height=0x7f0a00d8;
        /**  The padding between notification children 
         */
        public static final int notification_children_padding=0x7f0a00d7;
        /**  The padding to the second card when the notifications collapse. 
         */
        public static final int notification_collapse_second_card_padding=0x7f0a00c1;
        /**  half the distance between notifications in the panel 
         */
        public static final int notification_divider_height=0x7f0a0071;
        /**  radius of the corners of the material rounded rect background 
         */
        public static final int notification_material_rounded_rect_radius=0x7f0a00d4;
        /**  radius of the corners of the material rounded rect background but negative
         */
        public static final int notification_material_rounded_rect_radius_negative=0x7f0a00d5;
        /**  Height of a large notification in the status bar 
         */
        public static final int notification_max_height=0x7f0a006b;
        /**  Height of a medium notification in the status bar 
         */
        public static final int notification_mid_height=0x7f0a006c;
        /**  Height of a small notification in the status bar 
         */
        public static final int notification_min_height=0x7f0a006a;
        /**  The padding between the individual notification cards. 
         */
        public static final int notification_padding=0x7f0a00bf;
        /**  The padding between the individual notification cards when dimmed. 
         */
        public static final int notification_padding_dimmed=0x7f0a00be;
        /**  The minimum height of the notification panel window 
         */
        public static final int notification_panel_min_height=0x7f0a0126;
        /**  Minimum fraction of the screen that should be taken up by the notification panel.
         Not used at this screen size. 
 Minimum fraction of the screen that should be taken up by the notification panel. 
         */
        public static final int notification_panel_min_height_frac=0x7f0a0084;
        /**  Minimum margin of the notification panel on the side, when being positioned dynamically 
         */
        public static final int notification_panel_min_side_margin=0x7f0a011b;
        /**  includes notification_side_padding on each side 
 Standard notification width + gravity 
 Standard notification width + gravity 
         */
        public static final int notification_panel_width=0x7f0a0081;
        /**  Distance after which the scrim starts fading in when dragging down the quick settings 
         */
        public static final int notification_scrim_wait_distance=0x7f0a00d1;
        /**  The side padding of the notifications
         */
        public static final int notification_side_padding=0x7f0a00bc;
        /**  Height of a the summary ("more card") notification on keyguard. 
         */
        public static final int notification_summary_height=0x7f0a006d;
        public static final int notifications_top_padding=0x7f0a00c6;
        public static final int obstacle_gap=0x7f0a0132;
        public static final int obstacle_height_min=0x7f0a0133;
        public static final int obstacle_spacing=0x7f0a012b;
        public static final int obstacle_stem_width=0x7f0a0131;
        public static final int obstacle_width=0x7f0a0130;
        public static final int obstacle_z=0x7f0a0140;
        /**  The distance you can pull a notification before it pops open 
         */
        public static final int one_finger_pop_limit=0x7f0a0083;
        /**  Bottom margin (from display edge) for status bar panels 
         */
        public static final int panel_float=0x7f0a0127;
        /**  The padding between chars of the password view. 
         */
        public static final int password_char_padding=0x7f0a0049;
        /**  The size of the dots in the PIN unlock method. 
         */
        public static final int password_dot_size=0x7f0a0048;
        /**  How far to slide the panel out when you touch it 
 On tablets this is just the close_handle_height 
         */
        public static final int peek_height=0x7f0a0125;
        /**  Amount to offset bottom of notification peek window from top of status bar. 
         */
        public static final int peek_window_y_offset=0x7f0a0063;
        public static final int player_hit_size=0x7f0a012e;
        public static final int player_size=0x7f0a012f;
        public static final int player_z=0x7f0a0141;
        public static final int player_z_boost=0x7f0a0142;
        /**  The size of the gesture span needed to activate the "pull" notification expansion 
         */
        public static final int pull_span_min=0x7f0a0086;
        public static final int qs_brightness_padding_top=0x7f0a0096;
        public static final int qs_data_usage_text_size=0x7f0a009c;
        public static final int qs_data_usage_usage_text_size=0x7f0a009d;
        /**  The font size of the date in QS 
         */
        public static final int qs_date_collapsed_size=0x7f0a00ec;
        public static final int qs_detail_button_text_size=0x7f0a0098;
        public static final int qs_detail_empty_text_size=0x7f0a009b;
        public static final int qs_detail_header_text_size=0x7f0a0097;
        public static final int qs_detail_item_height=0x7f0a0095;
        public static final int qs_detail_item_primary_text_size=0x7f0a0099;
        public static final int qs_detail_item_secondary_text_size=0x7f0a009a;
        public static final int qs_dual_tile_height=0x7f0a008c;
        public static final int qs_dual_tile_padding_horizontal=0x7f0a008e;
        public static final int qs_dual_tile_padding_vertical=0x7f0a008d;
        /**  The font size of the "emergency calls only" label in QS 
         */
        public static final int qs_emergency_calls_only_text_size=0x7f0a00eb;
        /**  Lockscreen falsing threshold for quick settings. 
         */
        public static final int qs_falsing_threshold=0x7f0a00c4;
        public static final int qs_panel_padding=0x7f0a008b;
        public static final int qs_panel_padding_bottom=0x7f0a0094;
        /**  How far the expanded QS panel peeks from the header in collapsed state. 
         */
        public static final int qs_peek_height=0x7f0a00a0;
        public static final int qs_tile_divider_height=0x7f0a008a;
        public static final int qs_tile_height=0x7f0a0087;
        public static final int qs_tile_icon_size=0x7f0a0088;
        public static final int qs_tile_padding_below_icon=0x7f0a0091;
        public static final int qs_tile_padding_bottom=0x7f0a0092;
        public static final int qs_tile_padding_top=0x7f0a008f;
        public static final int qs_tile_padding_top_large_text=0x7f0a0090;
        public static final int qs_tile_spacing=0x7f0a0093;
        public static final int qs_tile_text_size=0x7f0a0089;
        /**  The font size of the time when collapsed in QS 
         */
        public static final int qs_time_collapsed_size=0x7f0a00e9;
        /**  The font size of the time when expanded in QS 
         */
        public static final int qs_time_expanded_size=0x7f0a00ea;
        /**  A:DSYYLM-64 guoshuai 20160108(start) 
         */
        public static final int recents_clear_all_bottom=0x7f0a0123;
        /**  The dimesnsions of the dismiss all recents button. 
         */
        public static final int recents_dismiss_all_button_size=0x7f0a00b3;
        /**  The size of the lock-to-app button icon. 
         */
        public static final int recents_lock_to_app_icon_size=0x7f0a00b6;
        /**  The size of the lock-to-app button. 
         */
        public static final int recents_lock_to_app_size=0x7f0a00b5;
        /**  The height of the search bar space. 
 The height of the search bar space. 
         */
        public static final int recents_search_bar_space_height=0x7f0a00af;
        /**  The overscroll percentage allowed on the stack. 
         */
        public static final int recents_stack_overscroll_percentage=0x7f0a00b1;
        /**  The top offset for the task stack. 
         */
        public static final int recents_stack_top_padding=0x7f0a00b2;
        /**  The side padding for the task stack as a percentage of the width. 
 The side padding for the task stack as a percentage of the width. 
 The side padding for the task stack as a percentage of the width. 
 The side padding for the task stack as a percentage of the width. 
         */
        public static final int recents_stack_width_padding_percentage=0x7f0a00b0;
        /**  The min alpha to apply to a task affiliation group color. 
         */
        public static final int recents_task_affiliation_color_min_alpha_percentage=0x7f0a00b4;
        /**  The height of a task view bar. 
         */
        public static final int recents_task_bar_height=0x7f0a00ae;
        /**  The amount to offset when animating into an affiliate group. 
         */
        public static final int recents_task_view_affiliate_group_enter_offset=0x7f0a00ac;
        /**  The size of the application icon in the recents task view. 
         */
        public static final int recents_task_view_application_icon_size=0x7f0a00a6;
        /**  The amount of highlight to make on each task view. 
         */
        public static final int recents_task_view_highlight=0x7f0a00ab;
        /**  The amount to translate when animating the removal of a task. 
         */
        public static final int recents_task_view_remove_anim_translation_x=0x7f0a00aa;
        /**  The radius of the rounded corners on a task view. 
 The radius of the rounded corners on a task view. 
         */
        public static final int recents_task_view_rounded_corners_radius=0x7f0a00a7;
        /**  The alpha to apply to a task thumbnail. 
         */
        public static final int recents_task_view_thumbnail_alpha=0x7f0a00ad;
        /**  The max translation in the Z index for the last task. 
         */
        public static final int recents_task_view_z_max=0x7f0a00a9;
        /**  The min translation in the Z index for the last task. 
         */
        public static final int recents_task_view_z_min=0x7f0a00a8;
        public static final int scenery_z=0x7f0a013f;
        /**  Screen pinning inner nav bar outer circle size 
         */
        public static final int screen_pinning_nav_highlight_outer_size=0x7f0a0119;
        /**  Screen pinning inner nav bar circle size 
         */
        public static final int screen_pinning_nav_highlight_size=0x7f0a0118;
        /**  Screen pinning request nav button circle heights 
         */
        public static final int screen_pinning_request_button_height=0x7f0a0111;
        /**  Screen pinning request nav button circle widths 
 Screen pinning request bottom button circle widths 
 Screen pinning request bottom button circle widths 
         */
        public static final int screen_pinning_request_button_width=0x7f0a0112;
        /**  Screen pinning request controls padding on bigger screens 
 Screen pinning request, controls padding on bigger screens, bigger nav bar 
 Screen pinning request, controls padding on bigger screens, bigger nav bar 
         */
        public static final int screen_pinning_request_frame_padding=0x7f0a0117;
        /**  Screen pinning request padding on top of inner circle 
         */
        public static final int screen_pinning_request_inner_padding=0x7f0a0113;
        /**  Screen pinning request padding on top of icons 
         */
        public static final int screen_pinning_request_nav_icon_padding=0x7f0a0114;
        /**  Screen pinning request padding on side of icons
         (makes the width match the nav bar)
 Screen pinning request padding on side of icons
         (makes the width match the nav bar)
         */
        public static final int screen_pinning_request_nav_side_padding=0x7f0a0115;
        /**  Screen pinning request side views to match nav bar
         navigation_side_padding - 3 / 2 * (screen_pinning_request_button_width
                                                - navigation_key_width) 
 Screen pinning request side views to match nav bar
         navigation_side_padding - 3 / 2 * (screen_pinning_request_button_width
                                                - navigation_key_width) 
 Screen pinning request side views to match nav bar
         In sw600dp we want the buttons centered so this fills the space,
         (screen_pinning_request_width - 3 * screen_pinning_request_button_width) / 2 
 Screen pinning request side views to match nav bar
         In sw600dp we want the buttons centered so this fills the space,
         (screen_pinning_request_width - 3 * screen_pinning_request_button_width) / 2 
         */
        public static final int screen_pinning_request_side_width=0x7f0a0116;
        /**  Screen pinning request width 
 Screen pinning request width 
 Screen pinning request width (just a little bit bigger than the three buttons here 
         */
        public static final int screen_pinning_request_width=0x7f0a0110;
        /**  for SearchDialog. 
         */
        public static final int search_dialog_searen_engine_item=0x7f0a0002;
        /**  Extra padding between multiple phone signal icons. 
         */
        public static final int secondary_telephony_padding=0x7f0a0109;
        public static final int segmented_button_spacing=0x7f0a009e;
        /**  Padding between signal cluster and battery icon 
         */
        public static final int signal_cluster_battery_padding=0x7f0a010e;
        /**  For keyguard, sim card info text max width in SIm card changed dialog 
         */
        public static final int sim_card_infotext_maxwidth=0x7f0a001e;
        /**  For keyguard, sim card name padding in SIMPinUnlock and SIm card changed dialog 
         */
        public static final int sim_card_name_padding=0x7f0a001d;
        public static final int small_font_size=0x7f0a0035;
        /**  The height of the speed bump view. 
         */
        public static final int speed_bump_height=0x7f0a00c2;
        public static final int standard_notification_panel_width=0x7f0a0080;
        public static final int star_size_max=0x7f0a013c;
        public static final int star_size_min=0x7f0a013b;
        /**  The font size for the clock 
         */
        public static final int status_bar_clock_size=0x7f0a0069;
        /**  Height of the status bar header bar 
 Height of the status bar header bar 
         */
        public static final int status_bar_header_height=0x7f0a007c;
        /**  Height of the status bar header bar when expanded 
 Height of the status bar header bar when expanded 
         */
        public static final int status_bar_header_height_expanded=0x7f0a007d;
        /**  Height of the status bar header bar when on Keyguard 
 Height of the status bar header bar when on Keyguard 
         */
        public static final int status_bar_header_height_keyguard=0x7f0a007e;
        public static final int status_bar_height=0x7f0a0129;
        /**  opacity at which Notification icons will be drawn in the status bar 
         */
        public static final int status_bar_icon_drawing_alpha=0x7f0a006f;
        /**  size at which Notification icons will be drawn in the status bar 
         */
        public static final int status_bar_icon_drawing_size=0x7f0a006e;
        /**  gap on either side of status bar notification icons 
 ======================================== 
 The following resources were recently moved from sw600dp; there may
         be situations where they don't sync up perfectly with PhoneStatusBar. 
 ======================================== 
 gap on either side of status bar notification icons 
         */
        public static final int status_bar_icon_padding=0x7f0a0070;
        /**  Height of notification icons in the status bar 
         */
        public static final int status_bar_icon_size=0x7f0a0068;
        /**  Size of application description text 
 Size of application description text 
         */
        public static final int status_bar_recents_app_description_text_size=0x7f0a0057;
        /**  Where to place the app icon over the thumbnail 
 Where to place the app icon over the thumbnail 
 Where to place the app icon over the thumbnail 
         */
        public static final int status_bar_recents_app_icon_left_margin=0x7f0a0061;
        /**  Upper height limit for application icon 
 Upper height limit for application icon 
         */
        public static final int status_bar_recents_app_icon_max_height=0x7f0a0052;
        /**  Recent Applications parameters 
 Upper width limit for application icon 
 Upper width limit for application icon 
         */
        public static final int status_bar_recents_app_icon_max_width=0x7f0a0051;
        public static final int status_bar_recents_app_icon_top_margin=0x7f0a0062;
        /**  When recents first appears, how far the icon and label of the primary activity
         travel 
         */
        public static final int status_bar_recents_app_icon_translate_distance=0x7f0a0060;
        /**  Left margin of application label text 
 Left margin of application label text 
 Left margin for application label 
         */
        public static final int status_bar_recents_app_label_left_margin=0x7f0a005e;
        /**  Size of application label text 
 Size of application label text 
         */
        public static final int status_bar_recents_app_label_text_size=0x7f0a0056;
        /**  Width of application label text 
 Width of application label text 
 Recent Applications parameters 
 Recent Applications parameters 
 Width of application label text 
         */
        public static final int status_bar_recents_app_label_width=0x7f0a005d;
        /**  Padding between recents items 
 Padding between recents items 
         */
        public static final int status_bar_recents_item_padding=0x7f0a005f;
        /**  Margin between recents container and glow on the right 
 Margin between recents container and glow on the right 
         */
        public static final int status_bar_recents_right_glow_margin=0x7f0a005a;
        /**  Size of fading edge for scrolling 
 Size of fading edge for scrolling 
         */
        public static final int status_bar_recents_scroll_fading_edge_length=0x7f0a0059;
        /**  Padding for text descriptions 
 Padding for text descriptions 
 Padding for text descriptions 
         */
        public static final int status_bar_recents_text_description_padding=0x7f0a005c;
        /**  Size of fading edge for text 
 Size of fading edge for text 
         */
        public static final int status_bar_recents_text_fading_edge_length=0x7f0a0058;
        public static final int status_bar_recents_thumbnail_bg_padding=0x7f0a0055;
        public static final int status_bar_recents_thumbnail_height=0x7f0a0054;
        /**  How far the thumbnail for a recent app appears from left edge 
 Recent Applications parameters 
 How far the thumbnail for a recent app appears from left edge 
 Recent Applications parameters 
 How far the thumbnail for a recent app appears from left edge 
         */
        public static final int status_bar_recents_thumbnail_left_margin=0x7f0a005b;
        /**  How far the thumbnail for a recent app appears from top edge 
         */
        public static final int status_bar_recents_thumbnail_top_margin=0x7f0a0124;
        /**  Size of application thumbnail 
 Size of application thumbnail 
 Size of application icon 
         */
        public static final int status_bar_recents_thumbnail_width=0x7f0a0053;
        /**  Width of recents panel 
         */
        public static final int status_bar_recents_width=0x7f0a0128;
        public static final int sun_size=0x7f0a0139;
        /**  Falsing threshold used when dismissing notifications from the lockscreen. 
         */
        public static final int swipe_helper_falsing_threshold=0x7f0a00c5;
        /**  Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
         */
        public static final int system_icons_keyguard_padding_end=0x7f0a00f4;
        /**  end margin for system icons if multi user switch is hidden 
         */
        public static final int system_icons_switcher_hidden_expanded_margin=0x7f0a00dd;
        public static final int time_margin_bottom=0x7f0a002a;
        public static final int time_margin_left=0x7f0a0029;
        public static final int time_margin_right=0x7f0a0028;
        public static final int time_margin_top=0x7f0a002b;
        public static final int timer_label_font_size=0x7f0a003c;
        /**  Space reserved for the cards behind the top card in the top stack 
         */
        public static final int top_stack_peek_amount=0x7f0a00b7;
        /**  The height of the area before the top stack in which the notifications slow down 
         */
        public static final int top_stack_slow_down_length=0x7f0a00bb;
        public static final int translation_per_sec=0x7f0a012c;
        /**  TrustDrawable: Inner radius at the beginning of the enter animation 
         */
        public static final int trust_circle_inner_radius_enter=0x7f0a0105;
        /**  TrustDrawable: Inner radius at the end of the exit animation 
         */
        public static final int trust_circle_inner_radius_exit=0x7f0a0104;
        /**  TrustDrawable: Maximum inner radius of the breathing animation 
         */
        public static final int trust_circle_inner_radius_visible_max=0x7f0a0103;
        /**  TrustDrawable: Minimum inner radius of the breathing animation 
         */
        public static final int trust_circle_inner_radius_visible_min=0x7f0a0102;
        /**  TrustDrawable: Thickness of the circle 
         */
        public static final int trust_circle_thickness=0x7f0a0106;
        /**  Lockscreen unlocking falsing threshold. 
         */
        public static final int unlock_falsing_threshold=0x7f0a00c3;
        /**  Distance the user needs to drag vertically such that a swipe is accepted to unlock the
         device. 
         */
        public static final int unlock_move_distance=0x7f0a00d0;
        /**  Standard image button size for volume dialog buttons 
         */
        public static final int volume_button_size=0x7f0a011e;
        /**  Volume dialog root view bottom margin, at rest 
         */
        public static final int volume_dialog_margin_bottom=0x7f0a011f;
        /**  Volume dialog vertical offset from the top of the screen 
         */
        public static final int volume_offset_top=0x7f0a011d;
        /**  Vertical spacing between multiple volume slider rows 
         */
        public static final int volume_slider_interspacing=0x7f0a011c;
        /**  Extra padding between the mobile data type icon and the strength indicator when the data
         type icon is wide. 
         */
        public static final int wide_type_icon_start_padding=0x7f0a0108;
        /**  Extra padding between the mobile data type icon and the strength indicator when the data
         type icon is wide for the tile in quick settings. 
         */
        public static final int wide_type_icon_start_padding_qs=0x7f0a010a;
        /**  Overload default clock widget parameters 
 Overload default clock widget parameters 
         */
        public static final int widget_big_font_size=0x7f0a0047;
        public static final int widget_label_font_size=0x7f0a0046;
        public static final int widget_medium_font_size=0x7f0a0037;
        /**  Z distance between notifications if they are in the stack 
         */
        public static final int z_distance_between_notifications=0x7f0a00bd;
        /**  Zen mode panel: bottom padding, a bit less than qs_panel_padding 
         */
        public static final int zen_mode_condition_detail_bottom_padding=0x7f0a00a4;
        /**  Zen mode panel: condition item button padding 
         */
        public static final int zen_mode_condition_detail_button_padding=0x7f0a00a1;
        /**  Zen mode panel: spacing between two-line condition upper and lower lines 
         */
        public static final int zen_mode_condition_detail_item_interline_spacing=0x7f0a00a3;
        /**  Zen mode panel: spacing between condition items 
         */
        public static final int zen_mode_condition_detail_item_spacing=0x7f0a00a2;
    }
    public static final class drawable {
        public static final int android=0x7f020000;
        public static final int assist_orb_navbar_scrim=0x7f020001;
        public static final int assist_orb_scrim=0x7f020002;
        public static final int battery_image1=0x7f020003;
        public static final int brightness_mirror_background=0x7f020004;
        public static final int btn_borderless_rect=0x7f020005;
        public static final int cactus1=0x7f020006;
        public static final int cactus2=0x7f020007;
        public static final int cactus3=0x7f020008;
        public static final int cloud=0x7f020009;
        public static final int cloud_off=0x7f02000a;
        public static final int ct_stat_sys_signal_in=0x7f02000b;
        public static final int ct_stat_sys_signal_inout=0x7f02000c;
        public static final int ct_stat_sys_signal_not_inout=0x7f02000d;
        public static final int ct_stat_sys_signal_out=0x7f02000e;
        public static final int dessert_android=0x7f02000f;
        public static final int dessert_cupcake=0x7f020010;
        public static final int dessert_dandroid=0x7f020011;
        public static final int dessert_donut=0x7f020012;
        public static final int dessert_donutburger=0x7f020013;
        public static final int dessert_eclair=0x7f020014;
        public static final int dessert_flan=0x7f020015;
        public static final int dessert_froyo=0x7f020016;
        public static final int dessert_gingerbread=0x7f020017;
        public static final int dessert_honeycomb=0x7f020018;
        public static final int dessert_ics=0x7f020019;
        public static final int dessert_jandycane=0x7f02001a;
        public static final int dessert_jellybean=0x7f02001b;
        public static final int dessert_keylimepie=0x7f02001c;
        public static final int dessert_kitkat=0x7f02001d;
        public static final int dessert_petitfour=0x7f02001e;
        public static final int dessert_zombiegingerbread=0x7f02001f;
        public static final int dismiss_all_shape=0x7f020020;
        public static final int dismiss_all_shape_animation=0x7f020021;
        public static final int error_to_trustedstate=0x7f020022;
        public static final int error_to_trustedstate_animation=0x7f020023;
        public static final int float_panel_background=0x7f020024;
        public static final int heads_up_notification_bg_pressed=0x7f0201cb;
        public static final int heads_up_scrim=0x7f020025;
        public static final int ic_access_alarms_big=0x7f020026;
        public static final int ic_access_alarms_small=0x7f020027;
        public static final int ic_add_circle_qs=0x7f020028;
        public static final int ic_android=0x7f020029;
        public static final int ic_backspace_24dp=0x7f02002a;
        public static final int ic_brightness_thumb=0x7f02002b;
        public static final int ic_bt_cellphone=0x7f02002c;
        public static final int ic_bt_headphones_a2dp=0x7f02002d;
        public static final int ic_bt_headset_hfp=0x7f02002e;
        public static final int ic_bt_misc_hid=0x7f02002f;
        public static final int ic_bt_network_pan=0x7f020030;
        public static final int ic_bt_pointing_hid=0x7f020031;
        public static final int ic_camera_alt_24dp=0x7f020032;
        public static final int ic_chevron_left=0x7f020033;
        public static final int ic_close=0x7f020034;
        public static final int ic_collapse_children=0x7f020035;
        public static final int ic_data_connection=0x7f020036;
        public static final int ic_delete=0x7f020037;
        public static final int ic_dnd=0x7f020038;
        public static final int ic_dnd_disable=0x7f020039;
        public static final int ic_dnd_disable_animation=0x7f02003a;
        public static final int ic_dnd_total_silence=0x7f02003b;
        public static final int ic_dnd_total_silence_disable=0x7f02003c;
        public static final int ic_dnd_total_silence_disable_animation=0x7f02003d;
        public static final int ic_done_wht=0x7f02003e;
        public static final int ic_expand_children=0x7f02003f;
        public static final int ic_expand_less=0x7f020040;
        public static final int ic_expand_more=0x7f020041;
        public static final int ic_fingerprint=0x7f020042;
        public static final int ic_fingerprint_error=0x7f020043;
        public static final int ic_hotspot_disable=0x7f020044;
        public static final int ic_hotspot_disable_animation=0x7f020045;
        public static final int ic_hotspot_enable=0x7f020046;
        public static final int ic_hotspot_enable_animation=0x7f020047;
        public static final int ic_ime_switcher_default=0x7f020048;
        public static final int ic_info=0x7f020049;
        public static final int ic_invert_colors_disable=0x7f02004a;
        public static final int ic_invert_colors_disable_animation=0x7f02004b;
        public static final int ic_invert_colors_enable=0x7f02004c;
        public static final int ic_invert_colors_enable_animation=0x7f02004d;
        public static final int ic_landscape_from_auto_rotate=0x7f02004e;
        public static final int ic_landscape_from_auto_rotate_animation=0x7f02004f;
        public static final int ic_landscape_to_auto_rotate=0x7f020050;
        public static final int ic_landscape_to_auto_rotate_animation=0x7f020051;
        public static final int ic_live_help=0x7f020052;
        public static final int ic_lock_24dp=0x7f020053;
        public static final int ic_lock_open_24dp=0x7f020054;
        public static final int ic_lock_to_app_24dp=0x7f020055;
        public static final int ic_lockscreen_ime=0x7f020056;
        public static final int ic_lockscreen_sim=0x7f020057;
        public static final int ic_mic_26dp=0x7f020058;
        public static final int ic_notification_overlay=0x7f020059;
        public static final int ic_notify_button_bg=0x7f02005a;
        public static final int ic_person=0x7f02005b;
        public static final int ic_phone_24dp=0x7f02005c;
        public static final int ic_portrait_from_auto_rotate=0x7f02005d;
        public static final int ic_portrait_from_auto_rotate_animation=0x7f02005e;
        public static final int ic_portrait_to_auto_rotate=0x7f02005f;
        public static final int ic_portrait_to_auto_rotate_animation=0x7f020060;
        public static final int ic_power_low=0x7f020061;
        public static final int ic_power_saver=0x7f020062;
        public static final int ic_qs_back=0x7f020063;
        public static final int ic_qs_bluetooth_connected=0x7f020064;
        public static final int ic_qs_bluetooth_connecting=0x7f020065;
        public static final int ic_qs_bluetooth_detail_empty=0x7f020066;
        public static final int ic_qs_bluetooth_off=0x7f020067;
        public static final int ic_qs_bluetooth_on=0x7f020068;
        public static final int ic_qs_brightness_auto_off=0x7f020069;
        public static final int ic_qs_brightness_auto_off_alpha=0x7f02006a;
        public static final int ic_qs_brightness_auto_on=0x7f02006b;
        public static final int ic_qs_brightness_auto_on_alpha=0x7f02006c;
        public static final int ic_qs_cancel=0x7f02006d;
        public static final int ic_qs_cast_detail_empty=0x7f02006e;
        public static final int ic_qs_cast_off=0x7f02006f;
        public static final int ic_qs_cast_on=0x7f020070;
        public static final int ic_qs_custom_on=0x7f020071;
        public static final int ic_qs_data_sim_not_set=0x7f020072;
        public static final int ic_qs_data_usage=0x7f020073;
        public static final int ic_qs_dnd_off=0x7f020074;
        public static final int ic_qs_dnd_on=0x7f020075;
        public static final int ic_qs_dnd_on_total_silence=0x7f020076;
        public static final int ic_qs_general_on=0x7f020077;
        public static final int ic_qs_meeting_on=0x7f020078;
        public static final int ic_qs_meeting_profile_enable=0x7f020079;
        public static final int ic_qs_meeting_profile_off=0x7f02007a;
        public static final int ic_qs_minus=0x7f02007b;
        public static final int ic_qs_mobile_off=0x7f02007c;
        public static final int ic_qs_mobile_white=0x7f02007d;
        public static final int ic_qs_mute_profile_enable=0x7f02007e;
        public static final int ic_qs_mute_profile_off=0x7f02007f;
        public static final int ic_qs_no_sim=0x7f020080;
        public static final int ic_qs_normal_off=0x7f020081;
        public static final int ic_qs_normal_profile_enable=0x7f020082;
        public static final int ic_qs_outdoor_off=0x7f020083;
        public static final int ic_qs_outdoor_on=0x7f020084;
        public static final int ic_qs_outdoor_profile_enable=0x7f020085;
        public static final int ic_qs_plus=0x7f020086;
        public static final int ic_qs_ringer_audible=0x7f020087;
        public static final int ic_qs_ringer_silent=0x7f020088;
        public static final int ic_qs_ringer_vibrate=0x7f020089;
        public static final int ic_qs_signal_0=0x7f02008a;
        public static final int ic_qs_signal_1=0x7f02008b;
        public static final int ic_qs_signal_1x=0x7f02008c;
        public static final int ic_qs_signal_2=0x7f02008d;
        public static final int ic_qs_signal_3=0x7f02008e;
        public static final int ic_qs_signal_3g=0x7f02008f;
        public static final int ic_qs_signal_4=0x7f020090;
        public static final int ic_qs_signal_4g=0x7f020091;
        public static final int ic_qs_signal_carrier_network_change=0x7f020092;
        public static final int ic_qs_signal_carrier_network_change_animation=0x7f020093;
        public static final int ic_qs_signal_disabled=0x7f020094;
        public static final int ic_qs_signal_e=0x7f020095;
        public static final int ic_qs_signal_full_0=0x7f020096;
        public static final int ic_qs_signal_full_1=0x7f020097;
        public static final int ic_qs_signal_full_2=0x7f020098;
        public static final int ic_qs_signal_full_3=0x7f020099;
        public static final int ic_qs_signal_full_4=0x7f02009a;
        public static final int ic_qs_signal_g=0x7f02009b;
        public static final int ic_qs_signal_h=0x7f02009c;
        public static final int ic_qs_signal_h_plus=0x7f02009d;
        public static final int ic_qs_signal_in=0x7f02009e;
        public static final int ic_qs_signal_lte=0x7f02009f;
        public static final int ic_qs_signal_no_signal=0x7f0200a0;
        public static final int ic_qs_signal_out=0x7f0200a1;
        public static final int ic_qs_signal_r=0x7f0200a2;
        public static final int ic_qs_silent_on=0x7f0200a3;
        public static final int ic_qs_timeout_max=0x7f0200a4;
        public static final int ic_qs_timeout_med=0x7f0200a5;
        public static final int ic_qs_timeout_min=0x7f0200a6;
        public static final int ic_qs_vpn=0x7f0200a7;
        public static final int ic_qs_wifi_0=0x7f0200a8;
        public static final int ic_qs_wifi_1=0x7f0200a9;
        public static final int ic_qs_wifi_2=0x7f0200aa;
        public static final int ic_qs_wifi_3=0x7f0200ab;
        public static final int ic_qs_wifi_4=0x7f0200ac;
        public static final int ic_qs_wifi_detail_empty=0x7f0200ad;
        public static final int ic_qs_wifi_disabled=0x7f0200ae;
        public static final int ic_qs_wifi_full_0=0x7f0200af;
        public static final int ic_qs_wifi_full_1=0x7f0200b0;
        public static final int ic_qs_wifi_full_2=0x7f0200b1;
        public static final int ic_qs_wifi_full_3=0x7f0200b2;
        public static final int ic_qs_wifi_full_4=0x7f0200b3;
        public static final int ic_qs_wifi_no_network=0x7f0200b4;
        public static final int ic_screenshot_delete=0x7f0200b5;
        public static final int ic_screenshot_share=0x7f0200b6;
        public static final int ic_settings=0x7f0200b7;
        public static final int ic_signal_airplane_disable=0x7f0200b8;
        public static final int ic_signal_airplane_disable_animation=0x7f0200b9;
        public static final int ic_signal_airplane_enable=0x7f0200ba;
        public static final int ic_signal_airplane_enable_animation=0x7f0200bb;
        public static final int ic_signal_airplane_swiching_1=0x7f0200bc;
        public static final int ic_signal_airplane_swiching_2=0x7f0200bd;
        public static final int ic_signal_airplane_swiching_3=0x7f0200be;
        public static final int ic_signal_flashlight_disable=0x7f0200bf;
        public static final int ic_signal_flashlight_disable_animation=0x7f0200c0;
        public static final int ic_signal_flashlight_enable=0x7f0200c1;
        public static final int ic_signal_flashlight_enable_animation=0x7f0200c2;
        public static final int ic_signal_hotknot_disable=0x7f0200c3;
        public static final int ic_signal_hotknot_disable_animation=0x7f0200c4;
        public static final int ic_signal_hotknot_enable=0x7f0200c5;
        public static final int ic_signal_hotknot_enable_animation=0x7f0200c6;
        public static final int ic_signal_location_disable=0x7f0200c7;
        public static final int ic_signal_location_disable_animation=0x7f0200c8;
        public static final int ic_signal_location_enable=0x7f0200c9;
        public static final int ic_signal_location_enable_animation=0x7f0200ca;
        public static final int ic_sysbar_back=0x7f0200cb;
        public static final int ic_sysbar_back_ime=0x7f0200cc;
        public static final int ic_sysbar_back_ime_land=0x7f0200cd;
        public static final int ic_sysbar_back_land=0x7f0200ce;
        public static final int ic_sysbar_down=0x7f0200cf;
        public static final int ic_sysbar_float_mode_off=0x7f0200d0;
        public static final int ic_sysbar_float_mode_on=0x7f0200d1;
        public static final int ic_sysbar_home=0x7f0200d2;
        public static final int ic_sysbar_home_land=0x7f0200d3;
        public static final int ic_sysbar_lights_out_dot_large=0x7f0200d4;
        public static final int ic_sysbar_lights_out_dot_small=0x7f0200d5;
        public static final int ic_sysbar_menu=0x7f0200d6;
        public static final int ic_sysbar_menu_land=0x7f0200d7;
        public static final int ic_sysbar_recent=0x7f0200d8;
        public static final int ic_sysbar_recent_land=0x7f0200d9;
        public static final int ic_sysbar_restore=0x7f0200da;
        public static final int ic_sysbar_split_mode_off=0x7f0200db;
        public static final int ic_sysbar_split_mode_on=0x7f0200dc;
        public static final int ic_sysbar_up=0x7f0200dd;
        public static final int ic_volume_alarm=0x7f0200de;
        public static final int ic_volume_alarm_mute=0x7f0200df;
        public static final int ic_volume_bt_sco=0x7f0200e0;
        public static final int ic_volume_collapse=0x7f0200e1;
        public static final int ic_volume_collapse_animation=0x7f0200e2;
        public static final int ic_volume_expand=0x7f0200e3;
        public static final int ic_volume_expand_animation=0x7f0200e4;
        public static final int ic_volume_media=0x7f0200e5;
        public static final int ic_volume_media_bt=0x7f0200e6;
        public static final int ic_volume_media_bt_mute=0x7f0200e7;
        public static final int ic_volume_media_mute=0x7f0200e8;
        public static final int ic_volume_remote=0x7f0200e9;
        public static final int ic_volume_remote_mute=0x7f0200ea;
        public static final int ic_volume_ringer=0x7f0200eb;
        public static final int ic_volume_ringer_mute=0x7f0200ec;
        public static final int ic_volume_ringer_vibrate=0x7f0200ed;
        public static final int ic_volume_settings=0x7f0200ee;
        public static final int ic_volume_system=0x7f0200ef;
        public static final int ic_volume_system_mute=0x7f0200f0;
        public static final int ic_volume_voice=0x7f0200f1;
        public static final int ic_wfd_cellphone=0x7f0200f2;
        public static final int ic_wfd_laptop=0x7f0200f3;
        public static final int ic_zen_all=0x7f0200f4;
        public static final int ic_zen_important=0x7f0200f5;
        public static final int ic_zen_none=0x7f0200f6;
        public static final int icon=0x7f0200f7;
        public static final int icon_black=0x7f0200f8;
        public static final int icon_blue=0x7f0200f9;
        public static final int icon_green=0x7f0200fa;
        public static final int indeterminate=0x7f0200fb;
        public static final int indeterminate_anim=0x7f0200fc;
        public static final int keyguard_overflow_number_background=0x7f0200fd;
        public static final int kg_security_lock_normal=0x7f0200fe;
        public static final int lockscreen_fingerprint_draw_off=0x7f0200ff;
        public static final int lockscreen_fingerprint_draw_off_animation=0x7f020100;
        public static final int lockscreen_fingerprint_draw_on=0x7f020101;
        public static final int lockscreen_fingerprint_draw_on_animation=0x7f020102;
        public static final int lockscreen_fingerprint_error_state_to_fp=0x7f020103;
        public static final int lockscreen_fingerprint_error_state_to_fp_animation=0x7f020104;
        public static final int lockscreen_fingerprint_fp_to_error_state=0x7f020105;
        public static final int lockscreen_fingerprint_fp_to_error_state_animation=0x7f020106;
        public static final int minus=0x7f020107;
        public static final int mm_antennae=0x7f020108;
        public static final int mm_antennae2=0x7f020109;
        public static final int mm_eyes=0x7f02010a;
        public static final int mm_eyes2=0x7f02010b;
        public static final int mm_head=0x7f02010c;
        public static final int mm_mouth1=0x7f02010d;
        public static final int mm_mouth2=0x7f02010e;
        public static final int mm_mouth3=0x7f02010f;
        public static final int mm_mouth4=0x7f020110;
        public static final int moon=0x7f020111;
        public static final int mountain1=0x7f020112;
        public static final int mountain2=0x7f020113;
        public static final int mountain3=0x7f020114;
        public static final int mtk_ic_alarm_alert_dismiss_pwroff=0x7f020115;
        public static final int mtk_ic_alarm_alert_dismiss_pwron=0x7f020116;
        public static final int mtk_ic_alarm_alert_outerring=0x7f020117;
        public static final int mtk_ic_alarm_alert_snooze=0x7f020118;
        public static final int mtk_ic_alarm_alert_touch_handle=0x7f020119;
        public static final int mtk_ic_lockscreen_alarm=0x7f02011a;
        public static final int mtk_ic_lockscreen_glowdot=0x7f02011b;
        public static final int mtk_ic_lockscreen_handle_pressed=0x7f02011c;
        public static final int mtk_ic_lockscreen_poweroff_activated=0x7f02011d;
        public static final int mtk_ic_lockscreen_poweroff_normal=0x7f02011e;
        public static final int mtk_ic_lockscreen_poweron_activated=0x7f02011f;
        public static final int mtk_ic_lockscreen_poweron_normal=0x7f020120;
        public static final int mtk_ic_lockscreen_snooze_activated=0x7f020121;
        public static final int mtk_ic_lockscreen_snooze_normal=0x7f020122;
        public static final int mtk_ic_voice_unlock_cancel=0x7f020123;
        public static final int mtk_ic_voice_unlock_microphone=0x7f020124;
        public static final int mtk_stat_voice=0x7f020125;
        public static final int mtk_voice_wave=0x7f020126;
        public static final int mtk_voice_wave_0=0x7f020127;
        public static final int mtk_voice_wave_1=0x7f020128;
        public static final int mtk_voice_wave_2=0x7f020129;
        public static final int mtk_voice_wave_3=0x7f02012a;
        public static final int mtk_voice_wave_4=0x7f02012b;
        public static final int mtk_voice_wave_anim=0x7f02012c;
        public static final int nav_background=0x7f02012d;
        public static final int notification_guts_bg=0x7f02012e;
        public static final int notification_header_bg=0x7f02012f;
        public static final int notification_material_bg=0x7f020130;
        public static final int notification_material_bg_dim=0x7f020131;
        public static final int notification_number_text_color=0x7f0201c5;
        public static final int play=0x7f020132;
        public static final int plus=0x7f020133;
        public static final int pop_ball=0x7f020134;
        public static final int pop_belt=0x7f020135;
        public static final int pop_droid=0x7f020136;
        public static final int pop_pizza=0x7f020137;
        public static final int pop_stripes=0x7f020138;
        public static final int pop_swirl=0x7f020139;
        public static final int pop_vortex=0x7f02013a;
        public static final int pop_vortex2=0x7f02013b;
        public static final int qs_background_primary=0x7f02013c;
        public static final int qs_background_secondary=0x7f02013d;
        public static final int qs_detail_background=0x7f02013e;
        public static final int qs_dual_tile_caret=0x7f02013f;
        public static final int qs_ic_wifi_lock=0x7f020140;
        public static final int qs_navbar_scrim=0x7f020141;
        public static final int qs_subhead_caret=0x7f020142;
        public static final int qs_tile_background=0x7f020143;
        public static final int recents_button_bg=0x7f020144;
        public static final int recents_callout_line=0x7f0201ca;
        public static final int recents_clear_all_circle_normal=0x7f020145;
        public static final int recents_clear_all_circle_pressed=0x7f020146;
        public static final int recents_dismiss_dark=0x7f020147;
        public static final int recents_dismiss_light=0x7f020148;
        public static final int recents_lock_to_app_pin=0x7f020149;
        public static final int recents_lock_to_task_button_bg=0x7f02014a;
        public static final int recents_lower_gradient=0x7f02014b;
        public static final int recents_status_gradient=0x7f02014c;
        public static final int recents_task_shadow=0x7f02014d;
        public static final int recents_task_view_header_bg=0x7f02014e;
        public static final int recents_task_view_header_bg_color=0x7f02014f;
        public static final int ripple_drawable=0x7f020150;
        public static final int ripple_drawable_20dp=0x7f020151;
        public static final int ripplebg=0x7f020152;
        public static final int scorecard=0x7f020153;
        public static final int scorecard_gameover=0x7f020154;
        public static final int screen_pinning_bg_circ=0x7f020155;
        public static final int screen_pinning_light_bg_circ=0x7f020156;
        public static final int screenshot_panel=0x7f020157;
        public static final int search_bg_transparent=0x7f020158;
        public static final int search_panel_scrim=0x7f020159;
        public static final int segmented_buttons_background=0x7f02015a;
        public static final int sim_indicator_always_ask=0x7f02015b;
        public static final int sim_indicator_auto=0x7f02015c;
        public static final int sim_indicator_internet_call=0x7f02015d;
        public static final int sim_indicator_others=0x7f02015e;
        public static final int star=0x7f02015f;
        public static final int stat_notify_image=0x7f020160;
        public static final int stat_notify_image_error=0x7f020161;
        public static final int stat_notify_more=0x7f020162;
        public static final int stat_sys_airplane_mode=0x7f020163;
        public static final int stat_sys_alarm=0x7f020164;
        public static final int stat_sys_alarm_dim=0x7f020165;
        public static final int stat_sys_cast=0x7f020166;
        public static final int stat_sys_data_bluetooth=0x7f020167;
        public static final int stat_sys_data_bluetooth_connected=0x7f020168;
        public static final int stat_sys_data_fully_connected_1x=0x7f020169;
        public static final int stat_sys_data_fully_connected_3g=0x7f02016a;
        public static final int stat_sys_data_fully_connected_4g=0x7f02016b;
        public static final int stat_sys_data_fully_connected_4ga=0x7f02016c;
        public static final int stat_sys_data_fully_connected_e=0x7f02016d;
        public static final int stat_sys_data_fully_connected_g=0x7f02016e;
        public static final int stat_sys_data_fully_connected_h=0x7f02016f;
        public static final int stat_sys_data_fully_connected_h_plus=0x7f020170;
        public static final int stat_sys_data_fully_connected_lte=0x7f020171;
        public static final int stat_sys_data_fully_connected_roam=0x7f020172;
        public static final int stat_sys_data_primary_simcard=0x7f020173;
        public static final int stat_sys_data_primary_simcard_roam=0x7f020174;
        public static final int stat_sys_default_sim_indicator=0x7f020175;
        public static final int stat_sys_dnd=0x7f020176;
        public static final int stat_sys_dnd_total_silence=0x7f020177;
        public static final int stat_sys_ethernet=0x7f020178;
        public static final int stat_sys_ethernet_fully=0x7f020179;
        public static final int stat_sys_headset_with_mic=0x7f02017a;
        public static final int stat_sys_headset_without_mic=0x7f02017b;
        public static final int stat_sys_hotspot=0x7f02017c;
        public static final int stat_sys_location=0x7f02017d;
        public static final int stat_sys_managed_profile_status=0x7f02017e;
        public static final int stat_sys_network_type_1x=0x7f02017f;
        public static final int stat_sys_network_type_3g=0x7f020180;
        public static final int stat_sys_network_type_4g=0x7f020181;
        public static final int stat_sys_network_type_e=0x7f020182;
        public static final int stat_sys_network_type_g=0x7f020183;
        public static final int stat_sys_no_sims=0x7f020184;
        public static final int stat_sys_ringer_silent=0x7f020185;
        public static final int stat_sys_ringer_vibrate=0x7f020186;
        public static final int stat_sys_signal_0=0x7f020187;
        public static final int stat_sys_signal_0_fully=0x7f020188;
        public static final int stat_sys_signal_1=0x7f020189;
        public static final int stat_sys_signal_1_fully=0x7f02018a;
        public static final int stat_sys_signal_2=0x7f02018b;
        public static final int stat_sys_signal_2_fully=0x7f02018c;
        public static final int stat_sys_signal_3=0x7f02018d;
        public static final int stat_sys_signal_3_fully=0x7f02018e;
        public static final int stat_sys_signal_4=0x7f02018f;
        public static final int stat_sys_signal_4_fully=0x7f020190;
        public static final int stat_sys_signal_carrier_network_change=0x7f020191;
        public static final int stat_sys_signal_carrier_network_change_animation=0x7f020192;
        public static final int stat_sys_signal_in=0x7f020193;
        public static final int stat_sys_signal_null=0x7f020194;
        public static final int stat_sys_signal_out=0x7f020195;
        public static final int stat_sys_tty_mode=0x7f020196;
        public static final int stat_sys_volte=0x7f020197;
        public static final int stat_sys_volte1=0x7f020198;
        public static final int stat_sys_volte2=0x7f020199;
        public static final int stat_sys_vpn_ic=0x7f02019a;
        public static final int stat_sys_wifi_signal_0=0x7f02019b;
        public static final int stat_sys_wifi_signal_0_fully=0x7f02019c;
        public static final int stat_sys_wifi_signal_1=0x7f02019d;
        public static final int stat_sys_wifi_signal_1_fully=0x7f02019e;
        public static final int stat_sys_wifi_signal_1_fully_in=0x7f02019f;
        public static final int stat_sys_wifi_signal_1_fully_inout=0x7f0201a0;
        public static final int stat_sys_wifi_signal_1_fully_out=0x7f0201a1;
        public static final int stat_sys_wifi_signal_2=0x7f0201a2;
        public static final int stat_sys_wifi_signal_2_fully=0x7f0201a3;
        public static final int stat_sys_wifi_signal_2_fully_in=0x7f0201a4;
        public static final int stat_sys_wifi_signal_2_fully_inout=0x7f0201a5;
        public static final int stat_sys_wifi_signal_2_fully_out=0x7f0201a6;
        public static final int stat_sys_wifi_signal_3=0x7f0201a7;
        public static final int stat_sys_wifi_signal_3_fully=0x7f0201a8;
        public static final int stat_sys_wifi_signal_3_fully_in=0x7f0201a9;
        public static final int stat_sys_wifi_signal_3_fully_inout=0x7f0201aa;
        public static final int stat_sys_wifi_signal_3_fully_out=0x7f0201ab;
        public static final int stat_sys_wifi_signal_4=0x7f0201ac;
        public static final int stat_sys_wifi_signal_4_fully=0x7f0201ad;
        public static final int stat_sys_wifi_signal_4_fully_in=0x7f0201ae;
        public static final int stat_sys_wifi_signal_4_fully_inout=0x7f0201af;
        public static final int stat_sys_wifi_signal_4_fully_out=0x7f0201b0;
        public static final int stat_sys_wifi_signal_null=0x7f0201b1;
        public static final int stat_sys_zen_important=0x7f0201b2;
        public static final int stat_sys_zen_none=0x7f0201b3;
        public static final int status_background=0x7f0201b4;
        public static final int status_bar_notification_row_background_color=0x7f0201c9;
        public static final int status_bar_recents_app_thumbnail_background=0x7f0201c8;
        public static final int sun=0x7f0201b5;
        public static final int sun2=0x7f0201b6;
        public static final int system_bar_background=0x7f0201c7;
        public static final int ticker_background_color=0x7f0201c6;
        public static final int trusted_state_to_error=0x7f0201b7;
        public static final int trusted_state_to_error_animation=0x7f0201b8;
        public static final int tuner=0x7f0201b9;
        public static final int vector_drawable_place_bottom=0x7f0201ba;
        public static final int vector_drawable_place_bottom_left=0x7f0201bb;
        public static final int vector_drawable_place_bottom_right=0x7f0201bc;
        public static final int vector_drawable_place_fullscreen=0x7f0201bd;
        public static final int vector_drawable_place_left=0x7f0201be;
        public static final int vector_drawable_place_right=0x7f0201bf;
        public static final int vector_drawable_place_top=0x7f0201c0;
        public static final int vector_drawable_place_top_left=0x7f0201c1;
        public static final int vector_drawable_place_top_right=0x7f0201c2;
        public static final int volume_dialog_background=0x7f0201c3;
        public static final int zen_introduction_message_background=0x7f0201c4;
    }
    public static final class fraction {
        /**  Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
         */
        public static final int battery_button_height_fraction=0x7f100002;
        /**  Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
     fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
         */
        public static final int battery_subpixel_smoothing_left=0x7f100003;
        public static final int battery_subpixel_smoothing_right=0x7f100004;
        /**  The fraction of the screen height where the clock on the Keyguard has its center. The
         max value is used when no notifications are displaying, and the min value is when the
         highest possible number of notifications are showing. 
 The fraction of the screen height where the clock on the Keyguard has its center. The
         max value is used when no notifications are displaying, and the min value is when the
         highest possible number of notifications are showing. 
 The fraction of the screen height where the clock on the Keyguard has its center. The
     max value is used when no notifications are displaying, and the min value is when the
     highest possible number of notifications are showing. 
 The fraction of the screen height where the clock on the Keyguard has its center. The
         min value is used when no notifications are displaying, and the max value is when the
         highest possible number of notifications are showing. 
         */
        public static final int keyguard_clock_y_fraction_max=0x7f100000;
        public static final int keyguard_clock_y_fraction_min=0x7f100001;
    }
    public static final class id {
        public static final int ScrollView01=0x7f1100a2;
        public static final int activity_description=0x7f110104;
        public static final int add_target=0x7f11016b;
        public static final int airplane=0x7f11012a;
        public static final int alarm_status=0x7f110070;
        public static final int alertTitle=0x7f11009b;
        public static final int all_details=0x7f110169;
        public static final int alpha_animator_end_value_tag=0x7f110009;
        public static final int alpha_animator_start_value_tag=0x7f11000f;
        public static final int alpha_animator_tag=0x7f110003;
        public static final int am_pm=0x7f110064;
        public static final int am_pm_view=0x7f11012c;
        public static final int antiTheftPinEntry=0x7f110095;
        public static final int app_name=0x7f110032;
        public static final int application_icon=0x7f110103;
        public static final int assist_orb=0x7f110025;
        public static final int assist_orb_navbar_scrim=0x7f110027;
        public static final int assist_orb_scrim=0x7f110024;
        public static final int back=0x7f1100bd;
        public static final int backdrop=0x7f11015b;
        public static final int backdrop_back=0x7f11015c;
        public static final int backdrop_front=0x7f11015d;
        public static final int backgroundDimmed=0x7f11014a;
        public static final int backgroundNormal=0x7f110149;
        public static final int battery=0x7f110167;
        public static final int battery_image1=0x7f110166;
        public static final int battery_level=0x7f110076;
        public static final int battery_save_image=0x7f110168;
        public static final int brightness_icon=0x7f1100dc;
        public static final int brightness_mirror=0x7f110160;
        public static final int brightness_slider=0x7f1100dd;
        public static final int button_line=0x7f1100c7;
        public static final int camera_button=0x7f11003a;
        public static final int carrier=0x7f110093;
        public static final int carrier_text=0x7f11003d;
        public static final int child_container_stub=0x7f110152;
        public static final int clock=0x7f110061;
        public static final int clock_container=0x7f11007c;
        public static final int clock_text=0x7f110063;
        public static final int clock_view=0x7f110062;
        public static final int container=0x7f11004a;
        public static final int content=0x7f11014b;
        public static final int data=0x7f1100b2;
        public static final int data_opr=0x7f1100b3;
        public static final int date_collapsed=0x7f110143;
        public static final int date_expanded=0x7f110144;
        public static final int date_group=0x7f110142;
        public static final int date_view=0x7f11006f;
        public static final int deadzone=0x7f1100c1;
        public static final int debug_info=0x7f1100d0;
        public static final int debug_overlay_stub=0x7f1100f0;
        public static final int debug_seek_bar_1=0x7f1100f3;
        public static final int debug_seek_bar_2=0x7f1100f4;
        public static final int default_sim_type=0x7f110124;
        public static final int delete_button=0x7f11004f;
        public static final int digit_text=0x7f110043;
        public static final int digitalClock=0x7f11009c;
        public static final int dismiss_task=0x7f110106;
        public static final int dismiss_text=0x7f1100f5;
        public static final int divider=0x7f110050;
        public static final int doze_saved_filter_tag=0x7f110012;
        public static final int editText1=0x7f110081;
        public static final int emergency_call_button=0x7f11003e;
        public static final int empty_time_view=0x7f11012d;
        public static final int empty_view_stub=0x7f1100ef;
        public static final int ethernet=0x7f11011c;
        public static final int ethernet_combo=0x7f11011b;
        public static final int ethernet_dark=0x7f11011d;
        public static final int expanded=0x7f11014f;
        public static final int expandedPublic=0x7f110150;
        public static final int extent_grid=0x7f11002f;
        public static final int extent_panel=0x7f11002e;
        public static final int first_sim_name=0x7f1100a4;
        public static final int float_mode=0x7f1100c6;
        public static final int footer_icon=0x7f1100df;
        public static final int footer_text=0x7f1100de;
        public static final int for_text=0x7f110068;
        public static final int fourth_sim_name=0x7f1100a7;
        public static final int global_screenshot=0x7f110034;
        public static final int global_screenshot_background=0x7f110033;
        public static final int global_screenshot_flash=0x7f110035;
        public static final int glow_pad_view=0x7f1100a1;
        public static final int gone=0x7f11001f;
        public static final int hd_voice_icon=0x7f110122;
        public static final int header=0x7f11013d;
        public static final int header_debug_info=0x7f110147;
        public static final int header_emergency_calls_only=0x7f110141;
        public static final int heads_up_scrim=0x7f11015f;
        public static final int height_animator_end_value_tag=0x7f11000b;
        public static final int height_animator_start_value_tag=0x7f110011;
        public static final int height_animator_tag=0x7f110005;
        public static final int home=0x7f1100bc;
        public static final int horizontal=0x7f110022;
        public static final int hun_scrim_alpha_end=0x7f110017;
        public static final int hun_scrim_alpha_start=0x7f110016;
        public static final int icon=0x7f1100d4;
        /**  For notification icons for which targetSdk < L, this caches whether the icon is grayscale 
         */
        public static final int icon_is_grayscale=0x7f11001d;
        /**  Whether the icon is from a notification for which targetSdk < L 
         */
        public static final int icon_is_pre_L=0x7f11001c;
        public static final int ime_menu_id=0x7f1100c4;
        public static final int ime_switcher=0x7f1100bf;
        public static final int is_clicked_heads_up_tag=0x7f11001e;
        public static final int key0=0x7f11005e;
        public static final int key1=0x7f110052;
        public static final int key10=0x7f11010c;
        public static final int key11=0x7f11010b;
        public static final int key2=0x7f110053;
        public static final int key3=0x7f110054;
        public static final int key4=0x7f110056;
        public static final int key5=0x7f110057;
        public static final int key6=0x7f110058;
        public static final int key7=0x7f11005a;
        public static final int key8=0x7f11005b;
        public static final int key9=0x7f11005c;
        public static final int key_dismiss=0x7f110099;
        public static final int key_enter=0x7f11005f;
        public static final int keyguard_antitheft_lock_view=0x7f110094;
        public static final int keyguard_bottom_area=0x7f110036;
        public static final int keyguard_bouncer_frame=0x7f11006b;
        public static final int keyguard_carrier_text=0x7f110077;
        public static final int keyguard_clock_container=0x7f110079;
        public static final int keyguard_header=0x7f110071;
        public static final int keyguard_host_view=0x7f11003f;
        public static final int keyguard_indication_text=0x7f110037;
        public static final int keyguard_me_view=0x7f11010a;
        public static final int keyguard_message_area=0x7f110042;
        public static final int keyguard_password_view=0x7f110045;
        public static final int keyguard_pattern_view=0x7f110049;
        public static final int keyguard_pin_view=0x7f11004c;
        public static final int keyguard_security_container=0x7f110040;
        public static final int keyguard_selector_fade_container=0x7f110048;
        public static final int keyguard_sim=0x7f110066;
        public static final int keyguard_sim_pin_puk_me_view=0x7f110096;
        public static final int keyguard_sim_pin_view=0x7f110065;
        public static final int keyguard_sim_puk_view=0x7f11006d;
        public static final int keyguard_status_area_id=0x7f11007d;
        public static final int keyguard_status_view=0x7f110078;
        public static final int keyguard_user_switcher=0x7f11013b;
        public static final int keyguard_user_switcher_inner=0x7f11007e;
        public static final int klondike_text=0x7f110044;
        public static final int label=0x7f11015a;
        public static final int left_button=0x7f11003b;
        public static final int lights_out=0x7f1100c0;
        public static final int lockPatternView=0x7f11004b;
        public static final int lock_icon=0x7f11003c;
        public static final int lock_to_app_fab=0x7f110101;
        public static final int meeting_profile=0x7f1100e7;
        public static final int meeting_profile_icon=0x7f1100e8;
        public static final int meeting_profile_text=0x7f1100e9;
        public static final int menu=0x7f1100be;
        public static final int min_height_spacer=0x7f1100d9;
        public static final int mobile_combo=0x7f11008c;
        public static final int mobile_signal=0x7f11008d;
        public static final int mobile_signal_dark=0x7f11008e;
        public static final int mobile_signal_group=0x7f110125;
        public static final int mobile_signal_in=0x7f110090;
        public static final int mobile_signal_out=0x7f110091;
        public static final int mobile_type=0x7f11008f;
        public static final int more=0x7f1100c3;
        public static final int moreIcon=0x7f110133;
        public static final int more_button_stub=0x7f110154;
        public static final int more_icon_overflow=0x7f11014d;
        public static final int more_text=0x7f11014c;
        public static final int move_task=0x7f110105;
        public static final int mtk_keyguard_clock_container=0x7f11007b;
        public static final int multi_float=0x7f1100c5;
        public static final int multi_user_avatar=0x7f110073;
        public static final int multi_user_switch=0x7f110072;
        public static final int mute_profile=0x7f1100e4;
        public static final int mute_profile_icon=0x7f1100e5;
        public static final int mute_profile_text=0x7f1100e6;
        public static final int nav_bar_scrim=0x7f1100f1;
        public static final int nav_buttons=0x7f1100ba;
        public static final int network_type=0x7f110092;
        public static final int no_notifications=0x7f110148;
        public static final int no_sims=0x7f110127;
        public static final int no_sims_combo=0x7f110126;
        public static final int no_sims_dark=0x7f110128;
        public static final int normal=0x7f110020;
        public static final int normal_profile=0x7f1100e1;
        public static final int normal_profile_icon=0x7f1100e2;
        public static final int normal_profile_text=0x7f1100e3;
        public static final int notificationIcons=0x7f110134;
        public static final int notification_children_container=0x7f110153;
        public static final int notification_container_parent=0x7f110137;
        public static final int notification_expand_button=0x7f1100cb;
        public static final int notification_expand_divider=0x7f1100cc;
        public static final int notification_guts=0x7f1100cd;
        public static final int notification_guts_stub=0x7f110156;
        public static final int notification_hidden=0x7f11001a;
        public static final int notification_icon_area=0x7f110131;
        public static final int notification_icon_area_inner=0x7f110132;
        public static final int notification_inspect_app_provided_settings=0x7f1100d1;
        public static final int notification_inspect_item=0x7f1100d2;
        public static final int notification_keyguard_emergency_call_button=0x7f110038;
        public static final int notification_lights_out=0x7f11012f;
        public static final int notification_more_button_container=0x7f110155;
        public static final int notification_more_divider=0x7f1100ca;
        public static final int notification_panel=0x7f110136;
        public static final int notification_power=0x7f110018;
        public static final int notification_screenshot=0x7f110019;
        public static final int notification_stack_scroller=0x7f11013a;
        public static final int notification_volumeui=0x7f11001b;
        public static final int outdoor_profile=0x7f1100ea;
        public static final int outdoor_profile_icon=0x7f1100eb;
        public static final int outdoor_profile_text=0x7f1100ec;
        public static final int overflow_icons_view=0x7f11014e;
        public static final int owner_info=0x7f11007a;
        public static final int panel_holder=0x7f110161;
        public static final int passwordEntry=0x7f110046;
        public static final int pinEntry=0x7f11004e;
        public static final int pkgname=0x7f1100ce;
        public static final int place_bottom=0x7f1100f7;
        public static final int place_bottom_left=0x7f1100fd;
        public static final int place_bottom_right=0x7f1100fe;
        public static final int place_full=0x7f1100f8;
        public static final int place_left=0x7f1100f9;
        public static final int place_right=0x7f1100fa;
        public static final int place_top=0x7f1100f6;
        public static final int place_top_left=0x7f1100fb;
        public static final int place_top_right=0x7f1100fc;
        public static final int play_button=0x7f110084;
        public static final int play_button_image=0x7f110085;
        public static final int play_button_text=0x7f110086;
        public static final int player_minus_button=0x7f110088;
        public static final int player_plus_button=0x7f11008a;
        public static final int player_setup=0x7f110087;
        public static final int power_off_alarm_view=0x7f11009a;
        public static final int presentation=0x7f110060;
        public static final int preview_container=0x7f110039;
        public static final int profile_badge_line3=0x7f1100d7;
        public static final int profile_switch_dialog_view=0x7f1100e0;
        public static final int prompt=0x7f1100a3;
        public static final int pukEntry=0x7f11006e;
        public static final int qs_detail_header=0x7f110145;
        public static final int qs_detail_header_progress=0x7f110146;
        public static final int qs_icon_tag=0x7f110013;
        public static final int qs_navbar_scrim=0x7f11013c;
        public static final int quick_settings_container=0x7f1100da;
        public static final int quick_settings_panel=0x7f1100db;
        public static final int recent_apps=0x7f1100bb;
        public static final int recents_clear_all=0x7f1100f2;
        public static final int recents_view=0x7f1100ee;
        public static final int remember=0x7f110107;
        public static final int remote_input_progress=0x7f110109;
        public static final int remote_input_text=0x7f110108;
        public static final int remove_target=0x7f11016a;
        public static final int reserve_notification_space=0x7f110139;
        public static final int resident_container=0x7f110030;
        public static final int resident_grid=0x7f110031;
        public static final int restore=0x7f1100c9;
        public static final int rot0=0x7f1100b9;
        public static final int rot90=0x7f1100c2;
        public static final int row0=0x7f11004d;
        public static final int row1=0x7f110051;
        public static final int row2=0x7f110055;
        public static final int row3=0x7f110059;
        public static final int row4=0x7f11005d;
        public static final int scale_animator_end_value_tag=0x7f110008;
        public static final int scale_animator_start_value_tag=0x7f11000e;
        public static final int scale_animator_tag=0x7f110002;
        public static final int score=0x7f11008b;
        public static final int scores=0x7f110089;
        public static final int screen_pinning_back_bg=0x7f110111;
        public static final int screen_pinning_back_bg_light=0x7f110110;
        public static final int screen_pinning_back_group=0x7f11010f;
        public static final int screen_pinning_buttons=0x7f11010e;
        public static final int screen_pinning_cancel_button=0x7f110118;
        public static final int screen_pinning_description=0x7f110116;
        public static final int screen_pinning_home_group=0x7f110112;
        public static final int screen_pinning_ok_button=0x7f110117;
        public static final int screen_pinning_recents_group=0x7f110113;
        public static final int screen_pinning_text_area=0x7f110114;
        public static final int screen_pinning_title=0x7f110115;
        public static final int scrim=0x7f110014;
        public static final int scrim_behind=0x7f11015e;
        public static final int scrim_in_front=0x7f110162;
        public static final int scrim_target=0x7f110015;
        public static final int scroll_view=0x7f110138;
        public static final int search_logo=0x7f110026;
        public static final int second_sim_name=0x7f1100a5;
        public static final int settings_button=0x7f11013f;
        public static final int settings_button_container=0x7f11013e;
        public static final int signal_cluster=0x7f110165;
        public static final int simPinEntry=0x7f11006c;
        public static final int simPinPukMeEntry=0x7f110098;
        public static final int sim_card_name=0x7f11006a;
        public static final int sim_info_message=0x7f110067;
        public static final int sim_setting_prompt=0x7f1100a8;
        public static final int slider=0x7f110159;
        public static final int slot_num_text=0x7f110097;
        public static final int small=0x7f110021;
        public static final int sms=0x7f1100b0;
        public static final int sms_item=0x7f1100af;
        public static final int sms_opr=0x7f1100b1;
        public static final int spacer=0x7f11010d;
        public static final int speedbump_line=0x7f110157;
        public static final int split_mode=0x7f1100c8;
        public static final int statusIcons=0x7f110164;
        public static final int status_bar=0x7f11012e;
        public static final int status_bar_contents=0x7f110130;
        public static final int status_bar_latest_event_content=0x7f1100d3;
        public static final int status_bar_scrim=0x7f1100ed;
        public static final int sub_icon=0x7f110069;
        public static final int summary=0x7f110119;
        public static final int switch_ime_button=0x7f110047;
        public static final int system_icon_area=0x7f110135;
        public static final int system_icons=0x7f110163;
        public static final int system_icons_container=0x7f110075;
        public static final int system_icons_super_container=0x7f110074;
        public static final int task_view_bar=0x7f110102;
        public static final int task_view_content=0x7f1100ff;
        public static final int task_view_thumbnail=0x7f110100;
        public static final int text=0x7f1100d8;
        public static final int third_sim_name=0x7f1100a6;
        public static final int time=0x7f1100d5;
        public static final int timeDisplayHours=0x7f11009d;
        public static final int timeDisplayMinutes=0x7f11009e;
        public static final int time_view=0x7f11012b;
        public static final int timestamp=0x7f1100cf;
        public static final int tips=0x7f1100a0;
        public static final int tips_container=0x7f11009f;
        public static final int title=0x7f1100d6;
        public static final int toggle=0x7f110158;
        public static final int top_inset_animator_end_value_tag=0x7f11000a;
        public static final int top_inset_animator_start_value_tag=0x7f110010;
        public static final int top_inset_animator_tag=0x7f110004;
        public static final int translation_y_animator_end_value_tag=0x7f110006;
        public static final int translation_y_animator_start_value_tag=0x7f11000c;
        public static final int translation_y_animator_tag=0x7f110000;
        public static final int translation_z_animator_end_value_tag=0x7f110007;
        public static final int translation_z_animator_start_value_tag=0x7f11000d;
        public static final int translation_z_animator_tag=0x7f110001;
        public static final int tuner_icon=0x7f110140;
        public static final int usage_carrier_text=0x7f11002a;
        public static final int usage_graph=0x7f110029;
        public static final int usage_info_bottom_text=0x7f11002d;
        public static final int usage_info_top_text=0x7f11002b;
        public static final int usage_period_text=0x7f11002c;
        public static final int usage_text=0x7f110028;
        public static final int user_name=0x7f11007f;
        public static final int user_picture=0x7f110080;
        public static final int vertical=0x7f110023;
        public static final int veto=0x7f110151;
        public static final int video_call=0x7f1100ad;
        public static final int video_call_item=0x7f1100ac;
        public static final int video_call_opr=0x7f1100ae;
        public static final int view_flipper=0x7f110041;
        public static final int voiceLockCancel=0x7f1100b8;
        public static final int voiceLockMic=0x7f1100b6;
        public static final int voiceLockWave=0x7f1100b7;
        public static final int voice_call=0x7f1100aa;
        public static final int voice_call_item=0x7f1100a9;
        public static final int voice_call_opr=0x7f1100ab;
        public static final int voice_unlock_area_view=0x7f1100b5;
        public static final int voice_unlock_view=0x7f1100b4;
        public static final int volte_indicator=0x7f110123;
        public static final int volume_dialog=0x7f11016c;
        public static final int volume_dialog_content=0x7f11016e;
        public static final int volume_dialog_row=0x7f11016f;
        public static final int volume_expand_button=0x7f11016d;
        public static final int volume_row_header=0x7f110170;
        public static final int volume_row_icon=0x7f110171;
        public static final int volume_row_slider=0x7f110172;
        public static final int volume_settings_button=0x7f110173;
        public static final int volume_zen_end_now=0x7f110179;
        public static final int volume_zen_footer=0x7f110174;
        public static final int volume_zen_icon=0x7f110176;
        public static final int volume_zen_summary_line_1=0x7f110177;
        public static final int volume_zen_summary_line_2=0x7f110178;
        public static final int vpn=0x7f11011a;
        public static final int welcome=0x7f110083;
        public static final int wifi_airplane_spacer=0x7f110129;
        public static final int wifi_combo=0x7f11011e;
        public static final int wifi_signal=0x7f11011f;
        public static final int wifi_signal_dark=0x7f110120;
        public static final int wifi_signal_spacer=0x7f110121;
        public static final int world=0x7f110082;
        public static final int zen_alarm_warning=0x7f110181;
        public static final int zen_buttons=0x7f11017b;
        public static final int zen_conditions=0x7f110180;
        public static final int zen_embedded_divider=0x7f110175;
        public static final int zen_introduction=0x7f11017c;
        public static final int zen_introduction_confirm=0x7f11017d;
        public static final int zen_introduction_customize=0x7f11017f;
        public static final int zen_introduction_message=0x7f11017e;
        public static final int zen_mode_panel=0x7f11017a;
    }
    public static final class integer {
        /**  Duration of the full carrier network change icon animation. 
         */
        public static final int carrier_network_change_anim_time=0x7f0e0034;
        /**  Alias used to reference framework activity duration.  
         */
        public static final int config_activityDefaultDur=0x7f0e0000;
        /**  How many icons may be shown at once in the system bar. Includes any
         slots that may be reused for things like IME control. 
         */
        public static final int config_maxNotificationIcons=0x7f0e0005;
        /**  Min alpha % that recent items will fade to while being dismissed 
 Min alpha % that recent items will fade to while being dismissed 
         */
        public static final int config_recent_item_min_alpha=0x7f0e000c;
        /**  The number of app icons we keep in memory 
         */
        public static final int config_recents_max_icon_count=0x7f0e0004;
        /**  The number of app thumbnails we keep in memory 
         */
        public static final int config_recents_max_thumbnail_count=0x7f0e0003;
        /**  Vibration duration for GlowPadView used in SearchPanelView 
         */
        public static final int config_search_panel_view_vibration_duration=0x7f0e0007;
        /**  Vibration duration for GlowPadView used in SearchPanelView 
         */
        public static final int config_vibration_duration=0x7f0e0006;
        /**  Color inversion tile: number of days to show after feature is used. 
         */
        public static final int days_to_show_color_inversion_tile=0x7f0e0031;
        /**  87% of 0xff 
 Hotspot tile: number of days to show after feature is used. 
         */
        public static final int days_to_show_hotspot_tile=0x7f0e0030;
        /**  Doze: duration to avoid false pickup gestures triggered by notification vibrations 
         */
        public static final int doze_pickup_vibration_threshold=0x7f0e002a;
        /**  Doze: pulse parameter - how long does it take to fade in? 
         */
        public static final int doze_pulse_duration_in=0x7f0e002b;
        /**  Doze: pulse parameter - how long does it take to fade in after a pickup? 
         */
        public static final int doze_pulse_duration_in_pickup=0x7f0e002c;
        /**  Doze: pulse parameter - how long does it take to fade out? 
         */
        public static final int doze_pulse_duration_out=0x7f0e002e;
        /**  Doze: pulse parameter - once faded in, how long does it stay visible? 
         */
        public static final int doze_pulse_duration_visible=0x7f0e002d;
        /**  Doze: maximum number of times the notification pulse schedule can be reset 
         */
        public static final int doze_pulse_schedule_resets=0x7f0e0029;
        /**  Doze: alpha to apply to small icons when dozing 
         */
        public static final int doze_small_icon_alpha=0x7f0e002f;
        /**  M: Add for multi-window , The number of columns in float panel. 
         */
        public static final int float_panel_num_columns=0x7f0e0002;
        /**  milliseconds after a heads up notification is pushed back
     before the app can interrupt again. 
         */
        public static final int heads_up_default_snooze_length_ms=0x7f0e0015;
        /**  milliseconds before the heads up notification auto-dismisses. 
         */
        public static final int heads_up_notification_decay=0x7f0e0014;
        /**  Minimum display time for a heads up notification, in milliseconds. 
         */
        public static final int heads_up_notification_minimum_time=0x7f0e0016;
        /**  The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 We have only space for one notification on phone landscape layouts. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
         card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
         card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
         card. 
         */
        public static final int keyguard_max_notification_count=0x7f0e0028;
        /**  Gravity to make KeyguardSelectorView work in multiple orientations
        0x31 == "top|center_horizontal" 
 Gravity to make KeyguardSelectorView work in multiple orientations
        0x13 == "left|center_vertical" 
         */
        public static final int kg_selector_gravity=0x7f0e0001;
        public static final int navigation_bar_deadzone_decay=0x7f0e000b;
        /**  decay duration (from size_max -> size), in ms 
         */
        public static final int navigation_bar_deadzone_hold=0x7f0e000a;
        /**  top|center_horizontal 
         */
        public static final int notification_panel_layout_gravity=0x7f0e0038;
        /**  The length of the vibration when the notification pops open. 
         */
        public static final int one_finger_pop_duration_ms=0x7f0e0008;
        public static final int quick_settings_brightness_dialog_long_timeout=0x7f0e0012;
        /**  Timeouts for brightness dialog to disappear 
         */
        public static final int quick_settings_brightness_dialog_short_timeout=0x7f0e0011;
        /**  The maximum number of items to be displayed in quick settings 
 The maximum number of items to be displayed in quick settings 
         */
        public static final int quick_settings_detail_max_item_count=0x7f0e0013;
        /**  The maximum number of rows in the QuickSettings 
 The maximum number of rows in the QuickSettings 
 The maximum number of rows in the QuickSettings 
         */
        public static final int quick_settings_max_rows=0x7f0e000e;
        /**  The maximum number of rows in the QuickSettings when on the keyguard 
         */
        public static final int quick_settings_max_rows_keyguard=0x7f0e000f;
        /**  The number of columns in the QuickSettings 
         */
        public static final int quick_settings_num_columns=0x7f0e000d;
        /**  The number of columns that the top level tiles span in the QuickSettings 
 The number of columns that the top level tiles span in the QuickSettings 
 The number of columns that the top level tiles span in the QuickSettings 
         */
        public static final int quick_settings_user_time_settings_tile_span=0x7f0e0010;
        /**  The delay to enforce between each alt-tab key press. 
         */
        public static final int recents_alt_tab_key_delay=0x7f0e0026;
        /**  The animation duration for scrolling the stack to a particular item. 
         */
        public static final int recents_animate_task_stack_scroll_duration=0x7f0e0024;
        /**  The animation duration for animating the removal of a task view. 
         */
        public static final int recents_animate_task_view_remove_duration=0x7f0e0023;
        /**  The duration of the window transition when coming to Recents from an app.
         In order to defer the in-app animations until after the transition is complete,
         we also need to use this value as the starting delay when animating the first
         task decorations in. 
         */
        public static final int recents_enter_from_app_transition_duration=0x7f0e001b;
        /**  The duration of the window transition when coming to Recents from the Launcher.
         In order to defer the in-app animations until after the transition is complete,
         we also need to use this value as the starting delay when animating the task views
         in from the bottom of the screen. 
         */
        public static final int recents_enter_from_home_transition_duration=0x7f0e001e;
        /**  The min animation duration for animating views that are currently visible. 
         */
        public static final int recents_filter_animate_current_views_duration=0x7f0e0019;
        /**  The min animation duration for animating views that are newly visible. 
         */
        public static final int recents_filter_animate_new_views_duration=0x7f0e001a;
        /**  The minimum alpha for the dim applied to cards that go deeper into the stack. 
         */
        public static final int recents_max_task_stack_view_dim=0x7f0e0025;
        /**  The min animation duration for animating the nav bar scrim in. 
         */
        public static final int recents_nav_bar_scrim_enter_duration=0x7f0e0022;
        /**  Svelte specific logic, see RecentsConfiguration.SVELTE_* constants. 
         */
        public static final int recents_svelte_level=0x7f0e0027;
        /**  The duration in seconds to wait before the dismiss buttons are shown. 
         */
        public static final int recents_task_bar_dismiss_delay_seconds=0x7f0e0018;
        /**  The duration for animating the task decorations in after transitioning from an app. 
         */
        public static final int recents_task_enter_from_app_duration=0x7f0e001c;
        /**  The duration for animating the task from the bottom of the screen when transitioning
     from home. 
         */
        public static final int recents_task_enter_from_home_duration=0x7f0e001f;
        /**  The stagger for each task when animating the task from the bottom of the screen when 
     transitioning from home. 
         */
        public static final int recents_task_enter_from_home_stagger_delay=0x7f0e0020;
        /**  The duration for animating the task decorations out before transitioning to an app. 
         */
        public static final int recents_task_exit_to_app_duration=0x7f0e001d;
        /**  The duration of the animation of the tasks to the bottom of the screen when leaving
     Recents to go back to the Launcher. 
         */
        public static final int recents_task_exit_to_home_duration=0x7f0e0021;
        /**  Gravity for the notification panel 
         */
        public static final int standard_notification_panel_layout_gravity=0x7f0e0037;
        public static final int status_bar_config_maxNotificationIcons=0x7f0e0036;
        /**  Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
 Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
         */
        public static final int status_bar_recents_bg_gradient_degrees=0x7f0e0009;
        /**  milliseconds before the heads up notification accepts touches. 
         */
        public static final int touch_acceptance_delay=0x7f0e0017;
        /**  Duration of the expansion animation in the volume dialog 
         */
        public static final int volume_expand_animation_duration=0x7f0e0035;
        /**  Number of times to show the strong alarm warning text in the volume dialog 
         */
        public static final int zen_mode_alarm_warning_threshold=0x7f0e0032;
        /**  Maximum number of total conditions to display in the zen mode selection panel 
         */
        public static final int zen_mode_max_conditions=0x7f0e0033;
    }
    public static final class interpolator {
        public static final int assist_disclosure_trace=0x7f060000;
        public static final int error_to_trustedstate_animation_interpolator_0=0x7f060001;
        public static final int error_to_trustedstate_animation_interpolator_1=0x7f060002;
        public static final int error_to_trustedstate_animation_interpolator_2=0x7f060003;
        public static final int error_to_trustedstate_animation_interpolator_3=0x7f060004;
        public static final int error_to_trustedstate_animation_interpolator_4=0x7f060005;
        public static final int ic_hotspot_disable_cross_1_pathdata_interpolator=0x7f060006;
        public static final int ic_hotspot_disable_ic_hotspot_alpha_interpolator=0x7f060007;
        public static final int ic_hotspot_disable_mask_pathdata_interpolator_1=0x7f060008;
        public static final int ic_hotspot_disable_mask_pathdata_interpolator_2=0x7f060009;
        public static final int ic_hotspot_enable_cross_1_pathdata_interpolator=0x7f06000a;
        public static final int ic_hotspot_enable_mask_pathdata_interpolator_1=0x7f06000b;
        public static final int ic_hotspot_enable_mask_pathdata_interpolator_2=0x7f06000c;
        public static final int ic_invert_colors_disable_cross_1_pathdata_interpolator=0x7f06000d;
        public static final int ic_invert_colors_enable_cross_1_pathdata_interpolator=0x7f06000e;
        public static final int ic_invert_colors_enable_mask_pathdata_interpolator=0x7f06000f;
        public static final int ic_landscape_from_auto_rotate_arrows_rotation_interpolator=0x7f060010;
        public static final int ic_landscape_to_auto_rotate_arrows_rotation_interpolator=0x7f060011;
        public static final int ic_signal_airplane_disable_cross_1_pathdata_interpolator=0x7f060012;
        public static final int ic_signal_airplane_enable_cross_1_pathdata_interpolator=0x7f060013;
        public static final int ic_signal_airplane_enable_mask_pathdata_interpolator=0x7f060014;
        public static final int ic_signal_flashlight_enable_cross_1_pathdata_interpolator=0x7f060015;
        public static final int ic_signal_flashlight_enable_mask_pathdata_interpolator=0x7f060016;
        public static final int ic_signal_location_enable_cross_1_pathdata_interpolator=0x7f060017;
        public static final int ic_signal_location_enable_mask_pathdata_interpolator=0x7f060018;
        public static final int ic_volume_collapse_animation_interpolator_0=0x7f060019;
        public static final int ic_volume_expand_animation_interpolator_0=0x7f06001a;
        public static final int lockscreen_fingerprint_draw_off_animation_interpolator_0=0x7f06001b;
        public static final int lockscreen_fingerprint_draw_off_animation_interpolator_1=0x7f06001c;
        public static final int lockscreen_fingerprint_draw_on_animation_interpolator_0=0x7f06001d;
        public static final int lockscreen_fingerprint_draw_on_animation_interpolator_1=0x7f06001e;
        public static final int lockscreen_fingerprint_error_state_to_fp_animation_interpolator_0=0x7f06001f;
        public static final int lockscreen_fingerprint_error_state_to_fp_animation_interpolator_1=0x7f060020;
        public static final int lockscreen_fingerprint_error_state_to_fp_animation_interpolator_2=0x7f060021;
        public static final int lockscreen_fingerprint_error_state_to_fp_animation_interpolator_3=0x7f060022;
        public static final int lockscreen_fingerprint_error_state_to_fp_animation_interpolator_4=0x7f060023;
        public static final int lockscreen_fingerprint_error_state_to_fp_animation_interpolator_5=0x7f060024;
        public static final int lockscreen_fingerprint_fp_to_error_state_animation_interpolator_0=0x7f060025;
        public static final int lockscreen_fingerprint_fp_to_error_state_animation_interpolator_1=0x7f060026;
        public static final int lockscreen_fingerprint_fp_to_error_state_animation_interpolator_2=0x7f060027;
        public static final int lockscreen_fingerprint_fp_to_error_state_animation_interpolator_3=0x7f060028;
        public static final int lockscreen_fingerprint_fp_to_error_state_animation_interpolator_4=0x7f060029;
        public static final int lockscreen_fingerprint_fp_to_error_state_animation_interpolator_5=0x7f06002a;
        public static final int recents_launch_next_affiliated_task_bounce_scale=0x7f06002b;
        public static final int recents_launch_prev_affiliated_task_bounce_ydelta=0x7f06002c;
        public static final int trusted_state_to_error_animation_interpolator_0=0x7f06002d;
        public static final int trusted_state_to_error_animation_interpolator_1=0x7f06002e;
        public static final int trusted_state_to_error_animation_interpolator_2=0x7f06002f;
        public static final int trusted_state_to_error_animation_interpolator_3=0x7f060030;
    }
    public static final class layout {
        public static final int assist_orb=0x7f040000;
        public static final int data_usage=0x7f040001;
        public static final int float_control_panel=0x7f040002;
        public static final int float_panel_item=0x7f040003;
        public static final int global_screenshot=0x7f040004;
        public static final int keyguard_bottom_area=0x7f040005;
        public static final int keyguard_bouncer=0x7f040006;
        /**  Alias used to reference one of two possible layouts in keyguard.  
 Alias used to reference one of two possible layouts in keyguard.  
         */
        public static final int keyguard_eca=0x7f04005d;
        public static final int keyguard_emergency_carrier_area=0x7f040007;
        public static final int keyguard_host_view=0x7f040008;
        public static final int keyguard_message_area=0x7f040009;
        public static final int keyguard_message_area_large=0x7f04000a;
        public static final int keyguard_num_pad_key=0x7f04000b;
        public static final int keyguard_password_view=0x7f04000c;
        public static final int keyguard_pattern_view=0x7f04000d;
        public static final int keyguard_pin_view=0x7f04000e;
        public static final int keyguard_presentation=0x7f04000f;
        public static final int keyguard_sim_pin_view=0x7f040010;
        public static final int keyguard_sim_puk_view=0x7f040011;
        public static final int keyguard_status_area=0x7f040012;
        public static final int keyguard_status_bar=0x7f040013;
        public static final int keyguard_status_view=0x7f040014;
        public static final int keyguard_user_switcher=0x7f040015;
        public static final int keyguard_user_switcher_item=0x7f040016;
        public static final int main=0x7f040017;
        public static final int mland=0x7f040018;
        public static final int mland_scorefield=0x7f040019;
        public static final int mobile_signal_group=0x7f04001a;
        public static final int mobile_signal_group_ext=0x7f04001b;
        public static final int mtk_carrier_view=0x7f04001c;
        public static final int mtk_keyguard_anti_theft_lock_view=0x7f04001d;
        public static final int mtk_keyguard_sim_pin_puk_me_view=0x7f04001e;
        public static final int mtk_power_off_alarm_view=0x7f04001f;
        public static final int mtk_prompt=0x7f040020;
        public static final int mtk_voice_unlock_view=0x7f040021;
        public static final int navigation_bar=0x7f040022;
        public static final int navigation_bar_float_window=0x7f040023;
        public static final int notification_children_container=0x7f040024;
        public static final int notification_children_divider=0x7f040025;
        public static final int notification_collapse_button=0x7f040026;
        public static final int notification_expand_button=0x7f040027;
        public static final int notification_guts=0x7f040028;
        public static final int notification_public_default=0x7f040029;
        public static final int qs_detail=0x7f04002a;
        public static final int qs_detail_header=0x7f04002b;
        public static final int qs_detail_item=0x7f04002c;
        public static final int qs_detail_items=0x7f04002d;
        public static final int qs_panel=0x7f04002e;
        public static final int qs_user_detail=0x7f04002f;
        public static final int qs_user_detail_item=0x7f040030;
        public static final int qs_wfd_prefrence_material=0x7f040031;
        public static final int qs_wfd_widget_switch=0x7f040032;
        public static final int quick_settings_brightness_dialog=0x7f040033;
        public static final int quick_settings_footer=0x7f040034;
        public static final int quick_settings_profile_switch_dialog=0x7f040035;
        public static final int recents=0x7f040036;
        public static final int recents_debug_overlay=0x7f040037;
        public static final int recents_dismiss_button=0x7f040038;
        public static final int recents_empty=0x7f040039;
        public static final int recents_search_bar=0x7f04003a;
        public static final int recents_task_resize_dialog=0x7f04003b;
        public static final int recents_task_view=0x7f04003c;
        public static final int recents_task_view_header=0x7f04003d;
        public static final int remember_permission_checkbox=0x7f04003e;
        public static final int remote_input=0x7f04003f;
        public static final int rgk_keyguard_2d1_me_view=0x7f040040;
        public static final int rgk_keyguard_sim_pin_puk_me_view=0x7f040041;
        public static final int screen_pinning_request=0x7f040042;
        public static final int screen_pinning_request_buttons=0x7f040043;
        public static final int screen_pinning_request_buttons_land=0x7f040044;
        public static final int screen_pinning_request_land_phone=0x7f040045;
        public static final int screen_pinning_request_text_area=0x7f040046;
        public static final int segmented_button=0x7f040047;
        public static final int select_account_list_item=0x7f040048;
        public static final int signal_cluster_view=0x7f040049;
        public static final int split_clock_view=0x7f04004a;
        public static final int status_bar=0x7f04004b;
        public static final int status_bar_expanded=0x7f04004c;
        public static final int status_bar_expanded_header=0x7f04004d;
        public static final int status_bar_no_notifications=0x7f04004e;
        public static final int status_bar_no_recent_apps=0x7f04004f;
        public static final int status_bar_notification_dismiss_all=0x7f040050;
        public static final int status_bar_notification_keyguard_overflow=0x7f040051;
        public static final int status_bar_notification_row=0x7f040052;
        public static final int status_bar_notification_speed_bump=0x7f040053;
        public static final int status_bar_toggle_slider=0x7f040054;
        public static final int super_status_bar=0x7f040055;
        public static final int system_icons=0x7f040056;
        public static final int tuner_qs=0x7f040057;
        public static final int volume_dialog=0x7f040058;
        public static final int volume_dialog_row=0x7f040059;
        public static final int volume_zen_footer=0x7f04005a;
        public static final int zen_mode_condition=0x7f04005b;
        public static final int zen_mode_panel=0x7f04005c;
    }
    public static final class mipmap {
        public static final int ic_daydreams=0x7f030000;
        public static final int ic_launcher_dreams=0x7f030001;
    }
    public static final class plurals {
        /**  Instructions telling the user that they entered the wrong SIM PIN while trying
         to unlock the keyguard.  Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_pin_code=0x7f0f0000;
        /**  Instructions telling the user that they entered the wrong puk while trying
         to unlock the keyguard.  Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_puk_code=0x7f0f0001;
        /**  An explanation text that the password needs to be entered since it hasn't been entered in a while. [CHAR LIMIT=80]
         */
        public static final int kg_prompt_reason_time_password=0x7f0f0004;
        /**  An explanation text that the pattern needs to be solved since it hasn't been solved in a while. [CHAR LIMIT=80]
         */
        public static final int kg_prompt_reason_time_pattern=0x7f0f0002;
        /**  An explanation text that the pin needs to be entered since it hasn't been entered in a while. [CHAR LIMIT=80]
         */
        public static final int kg_prompt_reason_time_pin=0x7f0f0003;
        /**  Message that is read when you enter recent apps in TalkBack 
         */
        public static final int status_bar_accessibility_recent_apps=0x7f0f0005;
    }
    public static final class string {
        /**  Skeleton string format for displaying the date. 
         */
        public static final int abbrev_wday_month_day_no_year=0x7f09009c;
        /**  Skeleton string format for displaying the date when an alarm is set. 
         */
        public static final int abbrev_wday_month_day_no_year_alarm=0x7f09009d;
        /**  Content description of the airplane mode icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_airplane_mode=0x7f090185;
        /**  Content description of the back button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_back=0x7f090140;
        /**  Content description of the battery when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_full=0x7f090159;
        /**  Content description of the battery level icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
 String.format failed for translation 
 no translation found for accessibility_battery_level (7451474187113371965) 
         */
        public static final int accessibility_battery_level=0x7f090188;
        /**  Content description of the battery when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_one_bar=0x7f090156;
        /**  Content description of the battery when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_three_bars=0x7f090158;
        /**  Content description of the battery when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_two_bars=0x7f090157;
        /**  Content description of the bluetooth icon when connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_connected=0x7f090153;
        /**  Content description of the bluetooth icon when connecting for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_disconnected=0x7f090154;
        /**  Content description of the bluetooth label showing what we are connected to. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_name=0x7f090165;
        /**  Content description of the bluetooth tethering icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_tether=0x7f090184;
        /**  Content description of the display brightness slider (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_brightness=0x7f0901c5;
        /**  Content description of the camera button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_camera_button=0x7f090145;
        /**  Content description of the carrier network changing icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_carrier_network_change_mode=0x7f090187;
        /**  Content description of the cast icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_casting=0x7f090191;
        /**  Announcement made when the screen stopped casting (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_casting_turned_off=0x7f0901c4;
        /**  Content description of the clear button in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_clear_all=0x7f0901d1;
        /**  Content description of the compatibility zoom button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_compatibility_zoom_button=0x7f090151;
        /**  Content description of picture of the compatibility zoom example for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_compatibility_zoom_example=0x7f090152;
        /**  Content description of the data connection type 1x for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_1x=0x7f090179;
        /**  Content description of the data connection type 3.5G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_3_5g=0x7f09017c;
        /**  Content description of the data connection type 3G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_3g=0x7f09017b;
        /**  Content description of the data connection type 4G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_4g=0x7f09017d;
        /**  M: Content description of the data connection type 4G+ for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_4ga=0x7f0900ff;
        /**  Content description of the data connection type CDMA for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_cdma=0x7f09017f;
        /**  Content description of the data connection type Edge for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_edge=0x7f090181;
        /**  Content description of the data connection type GPRS for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_gprs=0x7f090178;
        /**  Content description of the data connection type HSPA and its variants for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_hspa=0x7f09017a;
        /**  Content description of the data connection type LTE for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_lte=0x7f09017e;
        /**  Content description of the roaming data connection type for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_roaming=0x7f090180;
        /**  Content description of the data connection type WiFi for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_wifi=0x7f090182;
        /**  Content description of the data signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_one_bar=0x7f090160;
        /**  Content description of the data signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_signal_full=0x7f090163;
        /**  Content description of the data signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_three_bars=0x7f090162;
        /**  Content description of the data signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_two_bars=0x7f090161;
        /**  Content description for the close button in the zen mode panel introduction message. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_close=0x7f09019d;
        /**  Content description of an item that is connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_connected=0x7f090176;
        /**  Content description of an item that is connecting for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_connecting=0x7f090177;
        /**  Content description for the lock screen (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_lock_screen=0x7f09019a;
        /**  Content description for the notification shade panel (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_notification_shade=0x7f090198;
        /**  Content description of an item that is turned off for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_off=0x7f090175;
        /**  Content description of an item that is turned on for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_on=0x7f090174;
        /**  Content description for the quick settings panel (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_quick_settings=0x7f090199;
        /**  Content description for the recent apps panel (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_recent_apps=0x7f09019c;
        /**  Content description for the settings button in the status bar header. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_settings=0x7f09019b;
        /**  Content description of the Ethernet connection when connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ethernet_connected=0x7f09016c;
        /**  Content description of the Ethernet connection when disconnected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ethernet_disconnected=0x7f09016b;
        /**  Content description of the acquiring GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_gps_acquiring=0x7f09018d;
        /**  Content description of the enabled GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_gps_enabled=0x7f09018c;
        /**  Content description of the home button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_home=0x7f090141;
        /**  Content description of the switch input method button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ime_switch_button=0x7f0900e8;
        /**  Accessibility text describing the presence of active location requests by one or more apps 
         */
        public static final int accessibility_location_active=0x7f0901d0;
        /**  Accessibility label for managed profile icon (not shown on screen) [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_managed_profile=0x7f09029a;
        /**  Content description of the menu button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_menu=0x7f090142;
        /**  Accessibility label for the user icon on the lock screen. 
         */
        public static final int accessibility_multi_user_switch_inactive=0x7f090238;
        /**  Accessibility label for the button that opens the quick contact of the user. 
         */
        public static final int accessibility_multi_user_switch_quick_contact=0x7f090239;
        /**  Accessibility label for the button that opens the user switcher. 
         */
        public static final int accessibility_multi_user_switch_switcher=0x7f090236;
        /**  Accessibility label for the button that opens the user switcher and announces the current user. 
         */
        public static final int accessibility_multi_user_switch_switcher_with_current=0x7f090237;
        /**  Content description of the battery when no battery for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_battery=0x7f090155;
        /**  Content description of the data signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_data=0x7f09015f;
        /**  Content description of the phone signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_phone=0x7f09015a;
        /**  Content description of an item with no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_signal=0x7f09016d;
        /**  Content description of the data connection with no SIM for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_sim=0x7f090183;
        /**  Content description of the no sim icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_sims=0x7f090186;
        /**  Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_wifi=0x7f09003c;
        /**  Content description of the WiMAX signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_wimax=0x7f090166;
        /**  Content description of an item with no signal and no connection for accessibility (not shown on the screen) [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_not_connected=0x7f09016e;
        /**  Content description to tell the user a notification has been removed from the notification shade 
         */
        public static final int accessibility_notification_dismissed=0x7f090197;
        /**  Content description of the button for showing a notifications panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_notifications_button=0x7f09018a;
        /**  Content description of an item with one signal bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_one_bar=0x7f090170;
        /**  Content description of the phone button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_button=0x7f090146;
        /**  Content description of the phone signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_one_bar=0x7f09015b;
        /**  Content description of the phone signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_signal_full=0x7f09015e;
        /**  Content description of the phone signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_three_bars=0x7f09015d;
        /**  Content description of the phone signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_two_bars=0x7f09015c;
        /**  Announcement made when the airplane mode changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_changed_off=0x7f0901a6;
        /**  Announcement made when the airplane mode changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_changed_on=0x7f0901a7;
        /**  Content description of the airplane mode tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_off=0x7f0901a4;
        /**  Content description of the airplane mode tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_on=0x7f0901a5;
        /**  Content description of the alarm tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_alarm=0x7f0901b8;
        /**  Content description of the battery tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_battery=0x7f0901a3;
        /**  Announcement made when the bluetooth is turned off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_changed_off=0x7f0901b2;
        /**  Announcement made when the bluetooth is turned on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_changed_on=0x7f0901b3;
        /**  Content description of the bluetooth tile in quick settings when connected (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_connected=0x7f0901b1;
        /**  Content description of the bluetooth tile in quick settings when connecting (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_connecting=0x7f0901b0;
        /**  Content description of the bluetooth tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_off=0x7f0901ae;
        /**  Content description of the bluetooth tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_on=0x7f0901af;
        /**  Content description of quick settings detail panel close button (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_close=0x7f0901b9;
        /**  Announcement made when the color inversion state changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_color_inversion_changed_off=0x7f0901c0;
        /**  Announcement made when the color inversion state changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_color_inversion_changed_on=0x7f0901c1;
        /**  Accessibility label for Quick Settings detail screens [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_detail=0x7f090298;
        /**  Content description of the do not disturb tile in quick settings when on in alarms only (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_dnd_alarms_on=0x7f0901aa;
        /**  Announcement made when do not disturb changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_dnd_changed_off=0x7f0901ac;
        /**  Announcement made when do not disturb changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_dnd_changed_on=0x7f0901ad;
        /**  Content description of the do not disturb tile in quick settings when on in none (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_dnd_none_on=0x7f0901a9;
        /**  Content description of the do not disturb tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_dnd_off=0x7f0901ab;
        /**  Content description of the do not disturb tile in quick settings when on in priority (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_dnd_priority_on=0x7f0901a8;
        /**  Announcement made when the flashlight state changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_changed_off=0x7f0901be;
        /**  Announcement made when the flashlight state changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_changed_on=0x7f0901bf;
        /**  Content description of the flashlight tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_off=0x7f0901bc;
        /**  Content description of the flashlight tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_on=0x7f0901bd;
        /**  Announcement made when the hotspot state changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_hotspot_changed_off=0x7f0901c2;
        /**  Announcement made when the hotspot state changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_hotspot_changed_on=0x7f0901c3;
        /**  Content description of zen mode time condition minus button (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_less_time=0x7f0901bb;
        /**  Announcement made when the location tile changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_changed_off=0x7f0901b6;
        /**  Announcement made when the location tile changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_changed_on=0x7f0901b7;
        /**  Content description of the location tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_off=0x7f0901b4;
        /**  Content description of the location tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_on=0x7f0901b5;
        /**  Content description of the mobile data tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_mobile=0x7f0901a2;
        /**  Content description of zen mode time condition plus button (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_more_time=0x7f0901ba;
        /**  Content description of the user tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_user=0x7f09019e;
        /**  Content description of the wifi tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_wifi=0x7f09019f;
        /**  Announcement made when the wifi is turned off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_wifi_changed_off=0x7f0901a0;
        /**  Announcement made when the wifi is turned on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_wifi_changed_on=0x7f0901a1;
        /**  Content description of the recents button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_recent=0x7f090143;
        /**  Content description to tell the user all applications has been removed from recents 
         */
        public static final int accessibility_recents_all_items_dismissed=0x7f090194;
        /**  Content description to tell the user an application has been removed from recents 
         */
        public static final int accessibility_recents_item_dismissed=0x7f090193;
        /**  Content description to tell the user an application has been launched from recents 
         */
        public static final int accessibility_recents_item_launched=0x7f090195;
        /**  Content description to tell the user that this button will remove an application from recents 
         */
        public static final int accessibility_recents_item_will_be_dismissed=0x7f090192;
        /**  Content description of individual recents task. 
         */
        public static final int accessibility_recents_task_header=0x7f090196;
        /**  Content description of the button for removing a notification in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_remove_notification=0x7f09018b;
        /**  Content description of the ringer silent icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ringer_silent=0x7f090190;
        /**  Content description of the ringer vibrate icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ringer_vibrate=0x7f09018f;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is on. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_off=0x7f0901d4;
        /**  Announcement made when the screen is rotating automatically again (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_off_changed=0x7f0901d7;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_landscape=0x7f0901d5;
        /**  Announcement made when the rotation lock state changes to landscape only (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_landscape_changed=0x7f0901d8;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_portrait=0x7f0901d6;
        /**  Announcement made when the rotation lock state changes to portrait only (not shown on the screen).  [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_portrait_changed=0x7f0901d9;
        /**  Content description of the search button for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_search_light=0x7f090144;
        /**  Content description of the button for showing a settings panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_settings_button=0x7f090189;
        /**  Content description of an item with full signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_signal_full=0x7f090173;
        /**  Accessibility label for hotspot icon [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_status_bar_hotspot=0x7f090299;
        /**  Content description of an item with three signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_three_bars=0x7f090172;
        /**  Content description of the TeleTypewriter(TTY) enabled icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_tty_enabled=0x7f09018e;
        /**  Content description of an item with two signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_two_bars=0x7f090171;
        /**  Content description of the unlock button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_unlock_button=0x7f090148;
        /**  Content description of the unlock button when fingerpint is on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_unlock_button_fingerprint=0x7f090149;
        /**  Accessibility action of the unlock button when fingerpint is on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_unlock_without_fingerprint=0x7f09014a;
        /**  Content description of the phone button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_voice_assist_button=0x7f090147;
        /**  Content description for accessibility (not shown on the screen): volume dialog collapse button. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_volume_collapse=0x7f090270;
        /**  Content description for accessibility (not shown on the screen): volume dialog expand button. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_volume_expand=0x7f09026f;
        /**  Content description of the wifi label showing what we are connected to. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_name=0x7f090164;
        /**  Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_off=0x7f09003b;
        /**  Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_one_bar=0x7f09003d;
        /**  Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_signal_full=0x7f090040;
        /**  Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_three_bars=0x7f09003f;
        /**  Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_two_bars=0x7f09003e;
        /**  Content description of the WiMAX signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_one_bar=0x7f090167;
        /**  Content description of the WiMAX signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_signal_full=0x7f09016a;
        /**  Content description of the WiMAX signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_three_bars=0x7f090169;
        /**  Content description of the WiMAX signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_two_bars=0x7f090168;
        /**  Content description of an item with zero signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_zero_bars=0x7f09016f;
        /**  Description for adding  a quick settings tile 
         */
        public static final int add_tile=0x7f090291;
        /**  Description of airplane mode 
         */
        public static final int airplane_mode=0x7f0900e9;
        public static final int alarm_alert_dismiss_text=0x7f09005d;
        public static final int alarm_alert_snooze_text=0x7f09005e;
        /**  Alarm template for near alarms [CHAR LIMIT=25] 
         */
        public static final int alarm_template=0x7f090296;
        /**  Alarm template for far alarms [CHAR LIMIT=25] 
         */
        public static final int alarm_template_far=0x7f090297;
        /**  Checkbox label for USB accessory dialogs.  [CHAR LIMIT=50] 
         */
        public static final int always_use_accessory=0x7f09012d;
        /**  Checkbox label for USB device dialogs.  [CHAR LIMIT=50] 
         */
        public static final int always_use_device=0x7f09012c;
        /**  Name of the status bar as seen in the applications info settings page. [CHAR LIMIT=12] 
         */
        public static final int app_label=0x7f090108;
        /**  App label in the manifest  
         */
        public static final int app_name=0x7f0900a0;
        /**  M: Audio profile 
         */
        public static final int audio_profile=0x7f0900f5;
        /**  Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] 
         */
        public static final int available_via_passpoint=0x7f09000e;
        public static final int battery_charged=0x7f0902a3;
        /**  DELSLM-160 huangerhui 20160129 { 
 DELSLM-160 huangerhui 20160129 { 
 A: DELSLM-160 huangerhui 20160129 { 
         */
        public static final int battery_charged_title=0x7f0902a2;
        /**  A message that appears when the battery level is getting low in a dialog.  This is
        appened to the subtitle of the low battery alert.  "percentage" is the percentage of battery
        remaining [CHAR LIMIT=none]
         */
        public static final int battery_low_percent_format=0x7f090112;
        /**  Same as battery_low_percent_format, with a notice about battery saver if on. [CHAR LIMIT=none]
         */
        public static final int battery_low_percent_format_saver_started=0x7f090113;
        /**  When the battery is low, this is displayed to the user in a dialog.  The title of the low battery alert.  [CHAR LIMIT=NONE]
         */
        public static final int battery_low_title=0x7f090111;
        /**  When the battery is low, this is the label of the button to go to the
         power usage activity to find out what drained the battery.  [CHAR LIMIT=30] 
         */
        public static final int battery_low_why=0x7f090117;
        /**  Glyph to be overlaid atop the battery when the level is extremely low. Do not translate. 
         */
        public static final int battery_meter_very_low_overlay_symbol=0x7f09021f;
        /**  Battery saver confirmation dialog ok text [CHAR LIMIT=40]
         */
        public static final int battery_saver_confirmation_ok=0x7f090119;
        /**  Battery saver confirmation dialog title [CHAR LIMIT=NONE]
         */
        public static final int battery_saver_confirmation_title=0x7f090118;
        /**  Battery saver notification action text. [CHAR LIMIT=60] 
         */
        public static final int battery_saver_notification_action_text=0x7f09024d;
        /**  Battery saver notification text. [CHAR LIMIT=60] 
         */
        public static final int battery_saver_notification_text=0x7f09024c;
        /**  Battery saver notification title. [CHAR LIMIT=60]
         */
        public static final int battery_saver_notification_title=0x7f09024b;
        /**  Battery saver notification action [CHAR LIMIT=NONE]
         */
        public static final int battery_saver_start_action=0x7f09011a;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
         */
        public static final int bluetooth_a2dp_profile_summary_connected=0x7f090023;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
         */
        public static final int bluetooth_a2dp_profile_summary_use_for=0x7f09002f;
        /**  Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected=0x7f090013;
        /**  Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_a2dp=0x7f090016;
        /**  Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset=0x7f090015;
        /**  Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset_no_a2dp=0x7f090018;
        /**  Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_map=0x7f090017;
        /**  Bluetooth settings.  Message when connecting to a device 
         */
        public static final int bluetooth_connecting=0x7f090012;
        /**  Bluetooth settings.  Message when a device is disconnected 
         */
        public static final int bluetooth_disconnected=0x7f090010;
        /**  Bluetooth settings.  Message when disconnecting from a device 
         */
        public static final int bluetooth_disconnecting=0x7f090011;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
         */
        public static final int bluetooth_headset_profile_summary_connected=0x7f090024;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
         */
        public static final int bluetooth_headset_profile_summary_use_for=0x7f090030;
        /**  Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
         */
        public static final int bluetooth_hid_profile_summary_connected=0x7f090029;
        /**  Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
         */
        public static final int bluetooth_hid_profile_summary_use_for=0x7f090032;
        /**  Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
         */
        public static final int bluetooth_map_profile_summary_connected=0x7f090026;
        /**  Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
         */
        public static final int bluetooth_map_profile_summary_use_for=0x7f09002d;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
         */
        public static final int bluetooth_opp_profile_summary_connected=0x7f090025;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
         */
        public static final int bluetooth_opp_profile_summary_not_connected=0x7f090028;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
         */
        public static final int bluetooth_opp_profile_summary_use_for=0x7f090031;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
         */
        public static final int bluetooth_pairing=0x7f090014;
        /**  Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_accept=0x7f090033;
        /**  Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_accept_all_caps=0x7f090034;
        /**  Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_decline=0x7f090035;
        /**  Message for the error dialog when BT pairing fails because the other device is down. 
         */
        public static final int bluetooth_pairing_device_down_error_message=0x7f090039;
        /**  Message for the error dialog when BT pairing fails generically. 
         */
        public static final int bluetooth_pairing_error_message=0x7f090037;
        /**  Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
         */
        public static final int bluetooth_pairing_pin_error_message=0x7f090038;
        /**  Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
         */
        public static final int bluetooth_pairing_rejected_error_message=0x7f09003a;
        /**  Message in pairing dialogs.  [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_pairing_will_share_phonebook=0x7f090036;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_nap_profile_summary_connected=0x7f09002b;
        /**  Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
         */
        public static final int bluetooth_pan_profile_summary_use_for=0x7f09002c;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_user_profile_summary_connected=0x7f09002a;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
         */
        public static final int bluetooth_profile_a2dp=0x7f090019;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
         */
        public static final int bluetooth_profile_headset=0x7f09001a;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
         */
        public static final int bluetooth_profile_hid=0x7f09001c;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the map profile. 
         */
        public static final int bluetooth_profile_map=0x7f090021;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
         */
        public static final int bluetooth_profile_opp=0x7f09001b;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pan=0x7f09001d;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pan_nap=0x7f090020;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pbap=0x7f09001e;
        /**  Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] 
         */
        public static final int bluetooth_profile_pbap_summary=0x7f09001f;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). 
         */
        public static final int bluetooth_profile_sap=0x7f090022;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. 
         */
        public static final int bluetooth_sap_profile_summary_connected=0x7f090027;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. 
         */
        public static final int bluetooth_sap_profile_summary_use_for=0x7f09002e;
        /**  Network connection string for Bluetooth Reverse Tethering 
         */
        public static final int bluetooth_tethered=0x7f090122;
        /**  Name of a quick settings tile controlled by broadcast 
         */
        public static final int broadcast_tile=0x7f090292;
        /**  Shows when people have clicked on the camera icon [CHAR LIMIT=60] 
         */
        public static final int camera_hint=0x7f09022d;
        /**  Click action label for accessibility for the phone button. [CHAR LIMIT=NONE] 
         */
        public static final int camera_label=0x7f09014e;
        /**  Button name for "Cancel". [CHAR LIMIT=NONE] 
         */
        public static final int cancel=0x7f090150;
        /**  Package name for Certinstaller app
         */
        public static final int certinstaller_package=0x7f09004f;
        public static final int change_setting_for_onenewsim=0x7f09006e;
        public static final int change_setting_for_twonewsim=0x7f09006f;
        public static final int change_settings=0x7f090072;
        /**  The text to clear all notifications. [CHAR LIMIT=60] 
         */
        public static final int clear_all_notifications_text=0x7f090251;
        /**  Skeleton string format for displaying the time in 12-hour format. 
         */
        public static final int clock_12hr_format=0x7f09009e;
        /**  Skeleton string format for displaying the time in 24-hour format. 
         */
        public static final int clock_24hr_format=0x7f09009f;
        /**  Checkbox label for application compatibility mode OFF (normal mode on tablets).
         [CHAR LIMIT=25] 
         */
        public static final int compat_mode_off=0x7f090134;
        /**  Checkbox label for application compatibility mode ON (zooming app to look like it's running
         on a phone).  [CHAR LIMIT=25] 
         */
        public static final int compat_mode_on=0x7f090133;
        /**  Component to be used as the status bar service.  Must implement the IStatusBar
     interface.  This name is in the ComponentName flattened format (package/class)  
         */
        public static final int config_statusBarComponent=0x7f090101;
        /**  Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] 
         */
        public static final int connected_via_passpoint=0x7f09000d;
        /**  Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] 
         */
        public static final int connected_via_wfa=0x7f09000c;
        public static final int data_closed=0x7f0902a8;
        public static final int data_switch_started=0x7f0902a7;
        /**  M: Add for CellularTile 
 M: Add for CellularTile 
 M: Add for CellularTile 
 M: Add for CellularTile 
         */
        public static final int data_usage=0x7f0900fd;
        /**  Body of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_disabled_dialog=0x7f0901ca;
        /**  Title of dialog shown when 2G-3G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_3g_title=0x7f0901c6;
        /**  Title of dialog shown when 4G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_4g_title=0x7f0901c7;
        /**  Dialog button indicating that data connection should be re-enabled. [CHAR LIMIT=28] 
         */
        public static final int data_usage_disabled_dialog_enable=0x7f0901cb;
        /**  Title of dialog shown when mobile data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_mobile_title=0x7f0901c8;
        /**  Title of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_title=0x7f0901c9;
        public static final int day_concat=0x7f090054;
        /** A:DWYQLSS-77 guoshuai 20160229(end)
 A: DWYQLSS-97 杜帅辉 20160307{
 A } 
 A: DWYQLSS-97 杜帅辉 20160307 {
         */
        public static final int default_data_switch_err_msg1=0x7f0902a6;
        public static final int default_label=0x7f090055;
        public static final int default_sim_setting_prompt=0x7f09007d;
        /**  Name of demo mode (mode with preset icons for screenshots) 
         */
        public static final int demo_mode=0x7f09028a;
        /**  Description of the left direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
 Misc 
 Misc 
 Description of the left direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_left=0x7f09005f;
        /**  Description of the right direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_right=0x7f090060;
        /**  Description of the up direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_up=0x7f090222;
        /**  Description of the unlock target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_search=0x7f090221;
        /**  Name of the K-release easter egg: a display case for all our tastiest desserts. [CHAR LIMIT=30] 
         */
        public static final int dessert_case=0x7f0901da;
        /**  Footer device owned text [CHAR LIMIT=50] 
         */
        public static final int device_owned_footer=0x7f090254;
        /**  Monitoring dialog disable vpn button [CHAR LIMIT=30] 
         */
        public static final int disable_vpn=0x7f09025a;
        /**  Monitoring dialog disconnect vpn button [CHAR LIMIT=30] 
         */
        public static final int disconnect_vpn=0x7f09025b;
        public static final int dismiss=0x7f090076;
        /**  DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
 DM Lock 
         */
        public static final int dm_prompt=0x7f09008f;
        /**  Doze: when to pulse after a buzzworthy notification arrives 
         */
        public static final int doze_pulse_schedule=0x7f090105;
        /**  Text which is shown in the notification shade when there are no notifications. [CHAR LIMIT=30] 
         */
        public static final int empty_shade_text=0x7f090253;
        /**  Enable demo mode 
         */
        public static final int enable_demo_mode=0x7f09028b;
        /**  Textual description of Ethernet connections 
         */
        public static final int ethernet_label=0x7f0901dc;
        /**  GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
 GlowPadView 
 PowerOffAlarm 
         */
        public static final int every_day=0x7f090052;
        /**  Expanded Status Bar Header: Battery Charged [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_charged=0x7f09021b;
        /**  Expanded Status Bar Header: Charging, no known time [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_charging=0x7f09021c;
        /**  Expanded Status Bar Header: Charging, showing time left until charged [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_charging_with_time=0x7f09021d;
        /**  Expanded Status Bar Header: Not charging [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_not_charging=0x7f09021e;
        /**  Fingerprint hint message when finger was not recognized.
         */
        public static final int fingerprint_not_recognized=0x7f0900f3;
        /**  Generic "got it" acceptance of dialog or cling [CHAR LIMIT=NONE] 
         */
        public static final int got_it=0x7f09029e;
        /**  Notification text: when GPS has found a fix [CHAR LIMIT=50] 
         */
        public static final int gps_notification_found_text=0x7f0901cf;
        /**  Notification text: when GPS is getting a fix [CHAR LIMIT=50] 
         */
        public static final int gps_notification_searching_text=0x7f0901ce;
        /**  Label for exiting and removing the  guest session in the user switcher [CHAR LIMIT=35] 
         */
        public static final int guest_exit_guest=0x7f09023e;
        /**  Message of the confirmation dialog when exiting guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_exit_guest_dialog_message=0x7f090240;
        /**  Label for button in confirmation dialog when exiting guest session [CHAR LIMIT=35] 
         */
        public static final int guest_exit_guest_dialog_remove=0x7f090241;
        /**  Title of the confirmation dialog when exiting guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_exit_guest_dialog_title=0x7f09023f;
        /**  Label for adding a new guest in the user switcher [CHAR LIMIT=35] 
         */
        public static final int guest_new_guest=0x7f09023d;
        /**  Name for the guest user [CHAR LIMIT=35] 
         */
        public static final int guest_nickname=0x7f09023c;
        /**  Remove action in the notification shown to a new guest user [CHAR LIMIT=30] 
         */
        public static final int guest_notification_remove_action=0x7f090248;
        /**  Text of the notification shown to a new guest user [CHAR LIMIT=60] 
         */
        public static final int guest_notification_text=0x7f090247;
        /**  Title of the notification shown to a new guest user [CHAR LIMIT=60] 
         */
        public static final int guest_notification_title=0x7f090246;
        /**  Notification when resuming an existing guest session: Action that continues with the current session [CHAR LIMIT=35] 
         */
        public static final int guest_wipe_session_dontwipe=0x7f090245;
        /**  Message of the notification when resuming an existing guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_wipe_session_message=0x7f090243;
        /**  Title of the notification when resuming an existing guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_wipe_session_title=0x7f090242;
        /**  Notification when resuming an existing guest session: Action that starts a new session [CHAR LIMIT=35] 
         */
        public static final int guest_wipe_session_wipe=0x7f090244;
        /**  Cancel action for notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=20] 
         */
        public static final int hidden_notifications_cancel=0x7f090269;
        /**  continue action for notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=20] 
         */
        public static final int hidden_notifications_setup=0x7f09026a;
        /**  Body of notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=60] 
         */
        public static final int hidden_notifications_text=0x7f090268;
        /**  Title of notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=40] 
         */
        public static final int hidden_notifications_title=0x7f090267;
        /**  Label for the installer CD image option in UsbPreferenceActivity. [CHAR LIMIT=50] 
         */
        public static final int installer_cd_button_title=0x7f09013f;
        /**  Interruption level: Alarms only. [CHAR LIMIT=40] 
         */
        public static final int interruption_level_alarms=0x7f090231;
        /**  Interruption level: Alarms only.  Optimized for narrow two-line display. [CHAR LIMIT=40] 
         */
        public static final int interruption_level_alarms_twoline=0x7f090234;
        /**  Interruption level: None. [CHAR LIMIT=40] 
         */
        public static final int interruption_level_none=0x7f09022f;
        /**  Interruption level: None.  Optimized for narrow two-line display. [CHAR LIMIT=40] 
         */
        public static final int interruption_level_none_twoline=0x7f090232;
        /**  Accessibility content description for Interruption level: None. [CHAR LIMIT=NONE] 
         */
        public static final int interruption_level_none_with_warning=0x7f09022e;
        /**  Interruption level: Priority. [CHAR LIMIT=40] 
         */
        public static final int interruption_level_priority=0x7f090230;
        /**  Interruption level: Priority.  Optimized for narrow two-line display. [CHAR LIMIT=40] 
         */
        public static final int interruption_level_priority_twoline=0x7f090233;
        public static final int invalidPuk=0x7f090063;
        /**  A message that appears when a USB charger is plugged in and the device does not
    support charging on it.  That is, a charger that fits into the USB port and goes into
    a wall socket, not into a computer. (This happens because some devices require more
    current than the USB spec allows.  [CHAR LIMIT=NONE] 
         */
        public static final int invalid_charger=0x7f090114;
        /**  Second line of invalid_charger, used in the notification form.  [CHAR LIMIT=NONE]
         */
        public static final int invalid_charger_text=0x7f090116;
        /**  First line of invalid_charger, used in the notification form.  [CHAR LIMIT=NONE]
         */
        public static final int invalid_charger_title=0x7f090115;
        public static final int invalid_sim_message=0x7f090081;
        public static final int invalid_sim_title=0x7f090080;
        /**  Description of the Delete button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_delete=0x7f0900c2;
        /**  Description of the Enter button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_enter=0x7f0900c3;
        public static final int keyguard_accessibility_alarm_unlock=0x7f09005c;
        /**  Accessibility description for the text view that indicates when the next alarm is set (not shown on screen). [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_next_alarm=0x7f0900c1;
        /**  Accessibility description of the password lock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_password_unlock=0x7f0900bb;
        /**  Accessibility description of the unlock pattern area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pattern_area=0x7f0900bc;
        public static final int keyguard_accessibility_pattern_unlock=0x7f0900b9;
        /**  Accessibility description of the PIN password view. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pin_area=0x7f0900be;
        /**  Accessibility description of the pin lock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pin_unlock=0x7f0900ba;
        /**  Accessibility description of the SIM PIN password view. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_sim_pin_area=0x7f0900bf;
        /**  Accessibility description of the SIM PUK password view. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_sim_puk_area=0x7f0900c0;
        /**  Accessibility description of the unlock slide area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_slide_area=0x7f0900bd;
        /**  UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
 UnreadEvent 
 Utils 
         */
        public static final int keyguard_alwaysask=0x7f090083;
        /**  On the keyguard screen, it shows the carrier the phone is connected to.
        This is displayed if the phone is not connected to a carrier.
         */
        public static final int keyguard_carrier_default=0x7f0900e7;
        /**  When the lock screen is showing, the phone is plugged in and the battery is fully
         charged, say that it is charged. 
         */
        public static final int keyguard_charged=0x7f0900a9;
        public static final int keyguard_close=0x7f09007c;
        public static final int keyguard_code_donnot_mismatch=0x7f090079;
        public static final int keyguard_code_length_prompt=0x7f090078;
        public static final int keyguard_data=0x7f090075;
        public static final int keyguard_data_none=0x7f090084;
        /**  Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
 Clock 
         */
        public static final int keyguard_domestic_zone_name=0x7f090051;
        /**  Indication on the keyguard that is shown when the device is charging. [CHAR LIMIT=40]
         */
        public static final int keyguard_indication_charging_time=0x7f090235;
        /**  Indication on the keyguard that appears when the user disables trust agents until the next time they unlock manually. [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_indication_trust_disabled=0x7f090266;
        /**  On the keyguard screen, when pattern lock is disabled, only tell them to press menu to unlock.  This is shown in small font at the bottom. 
         */
        public static final int keyguard_instructions_when_pattern_disabled=0x7f0900ac;
        public static final int keyguard_internal_call=0x7f090086;
        /**  When the lock screen is showing and the battery is low, warn user to plug
         in the phone soon. 
         */
        public static final int keyguard_low_battery=0x7f0900ab;
        /**  Shown to ask the user to insert a SIM card. 
         */
        public static final int keyguard_missing_sim_instructions=0x7f0900b0;
        /**  Shown to ask the user to insert a SIM card when sim is missing or not readable. 
         */
        public static final int keyguard_missing_sim_instructions_long=0x7f0900b1;
        /**  Shown when there is no SIM card. 
         */
        public static final int keyguard_missing_sim_message=0x7f0900af;
        /**  Shown when there is no SIM card. 
         */
        public static final int keyguard_missing_sim_message_short=0x7f0900ae;
        /**  Text for overflow card on Keyguard when there is not enough space for all notifications on Keyguard. [CHAR LIMIT=1] 
         */
        public static final int keyguard_more_overflow_text=0x7f090227;
        /**  When the user inserts a sim card from an unsupported network, it becomes network locked 
         */
        public static final int keyguard_network_locked_message=0x7f0900ad;
        public static final int keyguard_not_set=0x7f090087;
        public static final int keyguard_password_Confirm_pin_code=0x7f090065;
        public static final int keyguard_password_enter_new_pin_code=0x7f090064;
        /**  Instructions telling the user to enter their text password to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_password_code=0x7f0900a6;
        /**  Instructions telling the user to enter their SIM PIN to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_pin_code=0x7f0900a1;
        /**  Instructions telling the user to enter their PIN password to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_pin_password_code=0x7f0900a7;
        /**  Prompt to enter New SIM PIN in Edit Text Box in unlock screen 
         */
        public static final int keyguard_password_enter_pin_prompt=0x7f0900a4;
        /**  Instructions telling the user to enter their SIM PUK to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_puk_code=0x7f0900a2;
        /**  Prompt to enter SIM PUK in Edit Text Box in unlock screen 
         */
        public static final int keyguard_password_enter_puk_prompt=0x7f0900a3;
        /**  Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
 Telephony 
         */
        public static final int keyguard_password_entering_puk_code=0x7f090061;
        /**  Displayed as hint in passwordEntry EditText on PasswordUnlockScreen [CHAR LIMIT=30]
         */
        public static final int keyguard_password_entry_touch_hint=0x7f0900a5;
        /**  Instructions telling the user that they entered the wrong pin while trying
         to unlock the keyguard.  Displayed in one line in a large font.  
         */
        public static final int keyguard_password_wrong_pin_code=0x7f0900a8;
        public static final int keyguard_password_wrong_puk_code=0x7f090062;
        /**  Shown to inform the user to SIM card is permanently disabled. 
         */
        public static final int keyguard_permanent_disabled_sim_instructions=0x7f0900b3;
        /**  Shown when SIM card is permanently disabled. 
         */
        public static final int keyguard_permanent_disabled_sim_message_short=0x7f0900b2;
        /**  When the lock screen is showing and the phone plugged in, and the battery
         is not fully charged, say that it's charging.  
         */
        public static final int keyguard_plugged_in=0x7f0900aa;
        /**  Process name for keyguard [DO NOT TRANSLATE] 
         */
        public static final int keyguard_process_name=0x7f090050;
        public static final int keyguard_sim_auto=0x7f090085;
        /**  Shown to tell the user that their SIM is locked and they must unlock it. 
         */
        public static final int keyguard_sim_locked_message=0x7f0900b4;
        /**  When the user enters a wrong sim pin too many times, it becomes PUK locked (Pin Unlock Kode) 
         */
        public static final int keyguard_sim_puk_locked_message=0x7f0900b5;
        /**  For the unlock screen, When the user enters a sim unlock code, it takes a little while to check
         whether it is valid, and to unlock the sim if it is valid.  we display a
         progress dialog in the meantime.  this is the emssage. 
         */
        public static final int keyguard_sim_unlock_progress_dialog_message=0x7f0900b6;
        public static final int keyguard_sms=0x7f090074;
        /**  Shows when people have pressed the unlock icon to explain how to unlock. [CHAR LIMIT=60] 
         */
        public static final int keyguard_unlock=0x7f09022a;
        public static final int keyguard_video_call=0x7f09007e;
        public static final int keyguard_voice_call=0x7f090073;
        /**  Time format strings for fall-back clock widget 
         */
        public static final int keyguard_widget_12_hours_format=0x7f0900b7;
        /**  Time format strings for fall-back clock widget 
         */
        public static final int keyguard_widget_24_hours_format=0x7f0900b8;
        public static final int keyguard_wrong_code_input=0x7f090077;
        public static final int kg_detecting_simcard=0x7f090095;
        /**  Label shown on emergency call button in keyguard 
         */
        public static final int kg_emergency_call_label=0x7f090093;
        /**  Message shown when the user needs to confirm the PIN they just entered in the PUK screen 
         */
        public static final int kg_enter_confirm_pin_hint=0x7f0900d1;
        /**  Message shown when user is almost at the limit of password attempts where the profile will be removed. [CHAR LIMIT=none] 
         */
        public static final int kg_failed_attempts_almost_at_erase_profile=0x7f0900df;
        /**  Message shown when user is almost at the limit of password attempts where the user will be removed. [CHAR LIMIT=none] 
         */
        public static final int kg_failed_attempts_almost_at_erase_user=0x7f0900dd;
        /**  Message shown in dialog when user is almost at the limit where they will be
    locked out and may have to enter an alternate username/password to unlock the phone 
         */
        public static final int kg_failed_attempts_almost_at_login=0x7f0900e1;
        /**  Message shown when user is almost at the limit of password attempts where the device will be wiped. [CHAR LIMIT=none] 
         */
        public static final int kg_failed_attempts_almost_at_wipe=0x7f0900db;
        /**  Message shown in dialog when user has exceeded the maximum attempts and the profile will be removed. [CHAR LIMIT=none] 
         */
        public static final int kg_failed_attempts_now_erasing_profile=0x7f0900e0;
        /**  Message shown in dialog when user has exceeded the maximum attempts and the user will be removed. [CHAR LIMIT=none] 
         */
        public static final int kg_failed_attempts_now_erasing_user=0x7f0900de;
        /**  Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped [CHAR LIMIT=none] 
         */
        public static final int kg_failed_attempts_now_wiping=0x7f0900dc;
        /**  Message shown in pattern unlock after some number of unsuccessful attempts 
         */
        public static final int kg_forgot_pattern_button_text=0x7f0900c4;
        /**  String shown in PUK screen when PIN codes don't match 
         */
        public static final int kg_invalid_confirm_pin_hint=0x7f0900d6;
        /**  Message shown when the user enters an invalid PUK code 
         */
        public static final int kg_invalid_puk=0x7f0900d5;
        /**  Message shown when the user enters an invalid SIM pin password in PUK screen 
         */
        public static final int kg_invalid_sim_pin_hint=0x7f0900d3;
        /**  Message shown when the user enters an invalid PUK code in the PUK screen 
         */
        public static final int kg_invalid_sim_puk_hint=0x7f0900d4;
        /**  Message shown when the user exceeds the maximum number of pattern attempts 
         */
        public static final int kg_login_too_many_attempts=0x7f0900d7;
        public static final int kg_new_simcard=0x7f090096;
        /**  Instructions for using the password unlock screen 
         */
        public static final int kg_password_instructions=0x7f0900cd;
        /**  Instructions telling the user that the operation to unlock the keyguard
         with SIM PIN failed. Displayed in one line in a large font.  
         */
        public static final int kg_password_pin_failed=0x7f0900e4;
        /**  Instructions telling the user that the operation to unlock the keyguard
         with PUK failed. Displayed in one line in a large font.  
         */
        public static final int kg_password_puk_failed=0x7f0900e5;
        /**  Instructions telling the user that they entered the wrong SIM PIN for the last time.
         Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_pin_code_pukked=0x7f0900e2;
        /**  Instructions telling the user that they have exhausted SIM PUK retries and the SIM is now unusable.
         Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_puk_code_dead=0x7f0900e3;
        /**  Instructions for using the pattern unlock screen 
         */
        public static final int kg_pattern_instructions=0x7f0900c9;
        /**  Notification telling the user that the PIN1 they entered is valid 
         */
        public static final int kg_pin_accepted=0x7f0900e6;
        /**  Instructions for using the PIN unlock screen 
         */
        public static final int kg_pin_instructions=0x7f0900cc;
        /**  An explanation text that the password needs to be entered since the device has just been restarted. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_restart_password=0x7f0900ec;
        /**  An explanation text that the pattern needs to be solved since the device has just been restarted. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_restart_pattern=0x7f0900ea;
        /**  An explanation text that the pin needs to be entered since the device has just been restarted. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_restart_pin=0x7f0900eb;
        /**  An explanation text that the password needs to be entered since profiles have just been switched. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_switch_profiles_password=0x7f0900f2;
        /**  An explanation text that the pattern needs to be solved since profiles have just been switched. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_switch_profiles_pattern=0x7f0900f0;
        /**  An explanation text that the pin needs to be entered since profiles have just been switched. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_switch_profiles_pin=0x7f0900f1;
        /**  An explanation text that the password needs to be entered since the user hasn't used strong authentication since quite some time. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_timeout_password=0x7f0900ef;
        /**  An explanation text that the pattern needs to be solved since the user hasn't used strong authentication since quite some time. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_timeout_pattern=0x7f0900ed;
        /**  An explanation text that the pin needs to be entered since the user hasn't used strong authentication since quite some time. [CHAR LIMIT=80] 
         */
        public static final int kg_prompt_reason_timeout_pin=0x7f0900ee;
        /**  Hint shown in the PUK unlock screen PIN TextView 
         */
        public static final int kg_puk_enter_pin_hint=0x7f0900d0;
        /**  Hint shown in the PUK screen that asks the user to enter the PUK code given to them by their provider 
         */
        public static final int kg_puk_enter_puk_hint=0x7f0900ce;
        /**  Hint shown when there are multiple SIMs in the device to ask the user to enter the PUK code given to them by their provider 
         */
        public static final int kg_puk_enter_puk_hint_multi=0x7f0900cf;
        /**  Instructions for using the SIM PIN unlock screen 
         */
        public static final int kg_sim_pin_instructions=0x7f0900ca;
        /**  Instructions for using the SIM PIN unlock screen when there's more than one SIM 
         */
        public static final int kg_sim_pin_instructions_multi=0x7f0900cb;
        /**  Message shown in dialog while the device is unlocking the SIM card 
         */
        public static final int kg_sim_unlock_progress_dialog_message=0x7f0900d2;
        public static final int kg_slot_id=0x7f090094;
        /**  Countdown message shown after too many failed unlock attempts 
         */
        public static final int kg_too_many_failed_attempts_countdown=0x7f0900c8;
        /**  Message shown in dialog when max number of attempts are reached for password screen of keyguard 
         */
        public static final int kg_too_many_failed_password_attempts_dialog_message=0x7f0900d9;
        public static final int kg_too_many_failed_pattern_attempts_dialog_message=0x7f0900da;
        /**  Message shown in dialog when max number of attempts are reached for PIN screen of keyguard 
         */
        public static final int kg_too_many_failed_pin_attempts_dialog_message=0x7f0900d8;
        /**  Message shown when user enters wrong password 
         */
        public static final int kg_wrong_password=0x7f0900c6;
        /**  Message shown when user enters wrong pattern 
         */
        public static final int kg_wrong_pattern=0x7f0900c5;
        /**  Message shown when user enters wrong PIN 
         */
        public static final int kg_wrong_pin=0x7f0900c7;
        /**  View button label for USB dialogs.  [CHAR LIMIT=15] 
         */
        public static final int label_view=0x7f09012b;
        /**  Name for a generic legacy VPN connection [CHAR LIMIT=20] 
         */
        public static final int legacy_vpn_name=0x7f090260;
        public static final int lockscreen_missing_sim_dialog_message=0x7f09006c;
        /**  Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
 Misc 
         */
        public static final int lockscreen_pattern_wrong=0x7f09007f;
        public static final int lockscreen_sim_locked_message_short=0x7f090082;
        /**  Toast shown when user unlocks screen and managed profile activity is in the foreground 
         */
        public static final int managed_profile_foreground_toast=0x7f09027e;
        /**  Media projection permission dialog action text. [CHAR LIMIT=60] 
         */
        public static final int media_projection_action_text=0x7f090252;
        /**  Media projection permission dialog warning text. [CHAR LIMIT=NONE] 
         */
        public static final int media_projection_dialog_text=0x7f09024f;
        /**  Media projection permission dialog permanent grant check box. [CHAR LIMIT=NONE] 
         */
        public static final int media_projection_remember_text=0x7f090250;
        public static final int meeting=0x7f0900f7;
        /**  Name of the easter egg. DO NOT TRANSLATE 
         */
        public static final int mland=0x7f090107;
        /**  M: Add for MobileDataTile 
 M: Add for MobileDataTile 
 M: Add for MobileDataTile 
 M: Add for MobileDataTile 
         */
        public static final int mobile=0x7f0900fc;
        /**  Monitoring dialog text for single app (no profile or device owner) [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_app=0x7f090261;
        /**  Monitoring dialog text for single app (inside personal profile) [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_app_personal=0x7f090262;
        /**  Monitoring dialog text for multiple apps (in personal and work profiles) [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_app_personal_work=0x7f090264;
        /**  Monitoring dialog text for single app (inside work profile) [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_app_work=0x7f090263;
        /**  Monitoring dialog device owner body text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_device_owned=0x7f09025c;
        /**  Monitoring dialog VPN text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn=0x7f09025d;
        /**  Monitoring dialog text for single app (with device owner) [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn_app_device_owned=0x7f090265;
        /**  Monitoring dialog VPN with device owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn_device_owned=0x7f09025e;
        /**  Monitoring dialog VPN with profile owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn_profile_owned=0x7f09025f;
        /**  Monitoring dialog title for normal devices  [CHAR LIMIT=35]
         */
        public static final int monitoring_title=0x7f090259;
        /**  Monitoring dialog title for device owned devices [CHAR LIMIT=35] 
         */
        public static final int monitoring_title_device_owned=0x7f090257;
        /**  Monitoring dialog title for profile owned devices [CHAR LIMIT=35] 
         */
        public static final int monitoring_title_profile_owned=0x7f090258;
        public static final int mute=0x7f0900f8;
        public static final int network_searching=0x7f09007a;
        public static final int never=0x7f090053;
        public static final int new_simcard=0x7f09006b;
        public static final int normal=0x7f0900f6;
        /**  Text for the button to expand the notifications to hide notification children [CHAR LIMIT=20] 
         */
        public static final int notification_collapse_button_text=0x7f09026c;
        /**  Text for the button to expand the notifications to show notification children [CHAR LIMIT=20] 
         */
        public static final int notification_expand_button_text=0x7f09026b;
        /**  Text shown in place of notification contents when the notification is hidden on a secure lockscreen 
         */
        public static final int notification_hidden_text=0x7f09024e;
        /**  Shows to explain the double tap interaction with notifications: After tapping a notification on Keyguard, this will explain users to tap again to launch a notification. [CHAR LIMIT=60] 
         */
        public static final int notification_tap_again=0x7f090229;
        /**  Alias used to reference framework "OK" string in keyguard.  
         */
        public static final int ok=0x7f09009a;
        public static final int outdoor=0x7f0900f9;
        /**  Shows when people have clicked on the phone icon [CHAR LIMIT=60] 
         */
        public static final int phone_hint=0x7f09022b;
        /**  Click action label for accessibility for the phone button. [CHAR LIMIT=NONE] 
         */
        public static final int phone_label=0x7f09014c;
        public static final int ppl_prompt=0x7f090090;
        /**  Footer profile owned text [CHAR LIMIT=50] 
         */
        public static final int profile_owned_footer=0x7f090255;
        /**  Name of quick settings 
         */
        public static final int quick_settings=0x7f090288;
        /**  QuickSettings: Bluetooth detail panel, text when there are no items [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_detail_empty_text=0x7f0901e4;
        /**  QuickSettings: Bluetooth [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_label=0x7f0901e1;
        /**  QuickSettings: Bluetooth (Multiple) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_multiple_devices_label=0x7f0901e2;
        /**  QuickSettings: Bluetooth (Off) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_off_label=0x7f0901e3;
        /**  QuickSettings: Brightness dialog auto brightness button [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_brightness_dialog_auto_brightness_label=0x7f090200;
        /**  QuickSettings: Brightness dialog title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_brightness_dialog_title=0x7f0901ff;
        /**  QuickSettings: Brightness [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_brightness_label=0x7f0901e5;
        /**  QuickSettings: Cast detail panel, text when there are no items [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_detail_empty_text=0x7f0901fe;
        /**  QuickSettings: Cast detail panel, default device description [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_device_default_description=0x7f0901fd;
        /**  QuickSettings: Cast detail panel, default device name [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_device_default_name=0x7f0901fc;
        /**  QuickSettings: Cast title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_title=0x7f0901fa;
        /**  QuickSettings: Cast detail panel, status text when casting [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_casting=0x7f0901fb;
        /**  QuickSettings: Cellular detail panel, data limit format string [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_limit=0x7f090210;
        /**  QuickSettings: Cellular detail panel, data usage title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_usage=0x7f09020c;
        /**  QuickSettings: Cellular detail panel, data used format string [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_used=0x7f09020f;
        /**  QuickSettings: Cellular detail panel, data warning format string [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_warning=0x7f090211;
        /**  QuickSettings: Cellular detail panel, over limit title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_over_limit=0x7f09020e;
        /**  QuickSettings: Cellular detail panel, remaining data title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_remaining_data=0x7f09020d;
        /**  QuickSettings: Cellular detail panel title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_title=0x7f09020b;
        /**  QuickSettings: Label for the toggle that controls whether display color correction is enabled. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_color_space_label=0x7f090202;
        /**  QuickSettings: Control panel: Label for connected device. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_connected=0x7f090205;
        /**  QuickSettings: Control panel: Label for connecting device. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_connecting=0x7f090206;
        public static final int quick_settings_data_sim_notset=0x7f0900fe;
        /**  QuickSettings: Do not disturb - Alarms only [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_dnd_alarms_label=0x7f0901df;
        /**  QuickSettings: Do not disturb [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_dnd_label=0x7f0901dd;
        /**  QuickSettings: Do not disturb - Total silence [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_dnd_none_label=0x7f0901e0;
        /**  QuickSettings: Do not disturb - Priority only [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_dnd_priority_label=0x7f0901de;
        /**  QuickSettings: Control panel: Label for button that dismisses control panel. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_done=0x7f090204;
        /**  QuickSettings: Flashlight [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_flashlight_label=0x7f09020a;
        /**  M: HotKnot 
         */
        public static final int quick_settings_hotknot_label=0x7f0900fa;
        /**  QuickSettings: Hotspot. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_hotspot_label=0x7f090208;
        /**  QuickSettings: IME [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_ime_label=0x7f0901ea;
        /**  QuickSettings: Label for the toggle that controls whether display inversion is enabled. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_inversion_label=0x7f090201;
        /**  QuickSettings: Location [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_location_label=0x7f0901eb;
        /**  QuickSettings: Location (Off) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_location_off_label=0x7f0901ec;
        /**  QuickSettings: Media device [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_media_device_label=0x7f0901ed;
        /**  QuickSettings: Control panel: Label for button that navigates to settings. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_more_settings=0x7f090203;
        /**  QuickSettings: Notifications [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_notifications_label=0x7f090209;
        /**  Hide quick settings tile confirmation button 
         */
        public static final int quick_settings_reset_confirmation_button=0x7f090278;
        /**  Hide quick settings tile confirmation message 
         */
        public static final int quick_settings_reset_confirmation_message=0x7f090277;
        /**  Hide quick settings tile confirmation title 
         */
        public static final int quick_settings_reset_confirmation_title=0x7f090276;
        /**  QuickSettings: Rotation Locked [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_locked_label=0x7f0901e7;
        /**  QuickSettings: Locked to Landscape [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_locked_landscape_label=0x7f0901e9;
        /**  QuickSettings: Locked to Portrait [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_locked_portrait_label=0x7f0901e8;
        /**  QuickSettings: Rotation Unlocked [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_unlocked_label=0x7f0901e6;
        /**  QuickSettings: RSSI (No network) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rssi_emergency_only=0x7f0901ef;
        /**  QuickSettings: RSSI [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rssi_label=0x7f0901ee;
        /**  QuickSettings: Settings [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_settings_label=0x7f0901f0;
        /**  QuickSettings: Tethering. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_tethering_label=0x7f090207;
        /**  The tiles to display in QuickSettings 
         */
        public static final int quick_settings_tiles=0x7f090103;
        /**  The default tiles to display in QuickSettings 
         */
        public static final int quick_settings_tiles_default=0x7f090102;
        /** M: Add extra tiles
         */
        public static final int quick_settings_tiles_extra=0x7f0900f4;
        /**  QuickSettings: Time [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_time_label=0x7f0901f1;
        /**  QuickSettings: User [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_user_label=0x7f0901f2;
        /**  QuickSettings: Label on the item for adding a new user [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_user_new_user=0x7f0901f4;
        /**  QuickSettings: Title of the user detail panel [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_user_title=0x7f0901f3;
        /**  QuickSettings: Wifi detail panel, text when there are no items [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_detail_empty_text=0x7f0901f9;
        /**  QuickSettings: Wifi [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_label=0x7f0901f5;
        /**  QuickSettings: Wifi (No network) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_no_network=0x7f0901f7;
        /**  QuickSettings: Wifi (Not connected) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_not_connected=0x7f0901f6;
        /**  QuickSettings: Wifi (Off) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_off_label=0x7f0901f8;
        /**  Recents: The info panel app info button string. [CHAR LIMIT=NONE] 
         */
        public static final int recents_app_info_button_label=0x7f090213;
        /**  Caption for "Recents resize" developer debug feature. [CHAR LIMIT=NONE] 
         */
        public static final int recents_caption_resize=0x7f09014f;
        /**  Recents: Dismiss all button. [CHAR LIMIT=NONE] 
         */
        public static final int recents_dismiss_all_message=0x7f090217;
        /**  Recents: The empty recents string. [CHAR LIMIT=NONE] 
         */
        public static final int recents_empty_message=0x7f090212;
        /**  Recents: Launch error string. [CHAR LIMIT=NONE] 
         */
        public static final int recents_launch_error_message=0x7f090216;
        /**  Recents: The screen pinning button. [CHAR LIMIT=NONE] 
         */
        public static final int recents_lock_to_app_button_label=0x7f090214;
        /**  Recents: MultiStack add stack split custom radio button. [CHAR LIMIT=NONE] 
         */
        public static final int recents_multistack_add_stack_dialog_split_custom=0x7f09021a;
        /**  Recents: MultiStack add stack split horizontal radio button. [CHAR LIMIT=NONE] 
         */
        public static final int recents_multistack_add_stack_dialog_split_horizontal=0x7f090218;
        /**  Recents: MultiStack add stack split vertical radio button. [CHAR LIMIT=NONE] 
         */
        public static final int recents_multistack_add_stack_dialog_split_vertical=0x7f090219;
        /**  Recents: Temporary string for the button in the recents search bar. [CHAR LIMIT=NONE] 
         */
        public static final int recents_search_bar_label=0x7f090215;
        /**  For preview release. DO NOT TRANSLATE 
         */
        public static final int regrettable_lack_of_easter_egg=0x7f090293;
        /**  Option to remove the tuner from settings [CHAR LIMIT=NONE] 
         */
        public static final int remove_from_settings=0x7f0902a0;
        /**  Dialog asking if the tuner should really be removed from settings [CHAR LIMIT=NONE]
         */
        public static final int remove_from_settings_prompt=0x7f0902a1;
        public static final int retries_left=0x7f090067;
        /**  Summary for saved networks 
         */
        public static final int saved_network=0x7f09000b;
        /**  Screen pinning dialog description. 
         */
        public static final int screen_pinning_description=0x7f090272;
        /**  Screen pinning dialog description when in accessibility mode. 
         */
        public static final int screen_pinning_description_accessible=0x7f090273;
        /**  M: Screen unpin for physical key. 
 M: Screen unpin for physical key. 
 M: Screen unpin for physical key. 
 M: Screen unpin for physical key. 
         */
        public static final int screen_pinning_description_physical_key=0x7f090100;
        /**  Screen pinning negative response. 
         */
        public static final int screen_pinning_negative=0x7f090275;
        /**  Screen pinning positive response. 
         */
        public static final int screen_pinning_positive=0x7f090274;
        /**  Screen pinning dialog title. 
         */
        public static final int screen_pinning_title=0x7f090271;
        /**  Notification text displayed when we fail to take a screenshot. [CHAR LIMIT=100] 
         */
        public static final int screenshot_failed_text=0x7f09013b;
        /**  Notification title displayed when we fail to take a screenshot. [CHAR LIMIT=50] 
         */
        public static final int screenshot_failed_title=0x7f09013a;
        /**  Notification text displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=100] 
         */
        public static final int screenshot_saved_text=0x7f090139;
        /**  Notification title displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=50] 
         */
        public static final int screenshot_saved_title=0x7f090138;
        /**  Notification text displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=100] 
         */
        public static final int screenshot_saving_text=0x7f090137;
        /**  Notification ticker displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=30] 
         */
        public static final int screenshot_saving_ticker=0x7f090135;
        /**  Notification title displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=50] 
         */
        public static final int screenshot_saving_title=0x7f090136;
        public static final int sd_accessing_swtich_user_message=0x7f090092;
        /**  Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
 Tablet 
         */
        public static final int sd_accessing_swtich_user_title=0x7f090091;
        public static final int searching_simcard=0x7f09007b;
        /**  Package name for Settings app
         */
        public static final int settings_package=0x7f09004e;
        /**  Preference to show/hide embedded battery percentage [CHAR LIMIT=50] 
         */
        public static final int show_battery_percentage=0x7f090286;
        /**  Summary for battery percentage preference [CHAR LIMIT=NONE] 
         */
        public static final int show_battery_percentage_summary=0x7f090287;
        /**  Show demo mode icons 
         */
        public static final int show_demo_mode=0x7f09028c;
        public static final int sim_card_changed_dialog_title=0x7f09006d;
        public static final int sim_card_removed=0x7f090070;
        public static final int sim_card_swapped=0x7f090071;
        public static final int sim_permanently_locked=0x7f090066;
        public static final int simlock_entersimmelock=0x7f090069;
        public static final int simlock_slot_locked_message=0x7f090068;
        public static final int slot_id=0x7f09006a;
        /**  An explanation for the visual speed bump in the notifications, which will appear when you click on it. [CHAR LIMIT=50] 
         */
        public static final int speed_bump_explanation=0x7f090228;
        /**  Shows up when there is a user SSL CA Cert installed on the
         device.  Indicates to the user that SSL traffic can be intercepted.
         If the text fits on one line (~14 chars), it should start with a
         linebreak to position it correctly.  [CHAR LIMIT=45] 
         */
        public static final int ssl_ca_cert_warning=0x7f090220;
        /**  Name of the launcher shortcut icon that allows dreams to be started immediately [CHAR LIMIT=20] 
         */
        public static final int start_dreams=0x7f0901db;
        /**  Name of status bar 
         */
        public static final int status_bar=0x7f090289;
        /**  Content description for the button to dismiss Recent Apps (only present on large
         devices) 
         */
        public static final int status_bar_accessibility_dismiss_recents=0x7f09010d;
        /**  Name of the airplane status bar icon. 
         */
        public static final int status_bar_airplane=0x7f090290;
        /**  Name of the alarm status bar icon. 
         */
        public static final int status_bar_alarm=0x7f09028e;
        /**  The text for the button in the notification window-shade that clears
         all of the currently visible notifications. [CHAR LIMIT=10]
         */
        public static final int status_bar_clear_all_button=0x7f090109;
        /**  For formatting day of week and date in DateView.  %1$s is DOW, %2$s is date.
         We show both (DOW on one line, then the date) but this can be overridden for locales as
         necessary.
         
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
         */
        public static final int status_bar_date_formatter=0x7f090106;
        /**  Name of the ethernet status bar icon. 
         */
        public static final int status_bar_ethernet=0x7f09028d;
        /**  Title of a button to open the settings for input methods [CHAR LIMIT=30] 
         */
        public static final int status_bar_input_method_settings_configure_input_methods=0x7f090123;
        /**  The label for the group of notifications for recent events in the opened version of
         the status bar.  Recently received text messsages (SMS), emails, calendar alerts, etc.
         [CHAR LIMIT=40] 
         */
        public static final int status_bar_latest_events_title=0x7f090110;
        /**  Separator for PLMN and SPN in network name. 
         */
        public static final int status_bar_network_name_separator=0x7f090121;
        /**  The label in the bar at the top of the status bar when there are no notifications
         showing.  [CHAR LIMIT=40]
 String.format failed for translation 
 no translation found for status_bar_accessibility_recent_apps (9138535907802238759) 
         */
        public static final int status_bar_no_notifications_title=0x7f09010e;
        /**  Message shown in the middle of the screen after clicking on the recent apps button
         when there are no recent apps to show. Also used for accessibility. [CHAR LIMIT=45]
         */
        public static final int status_bar_no_recent_apps=0x7f09010c;
        /**  Content description of button in notification inspetor for application-provided settings
         for its own notifications [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_notification_app_settings_title=0x7f0901d3;
        /**  Content description of button in notification inspector for system settings relating to
         notifications from this application [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_notification_inspect_item_title=0x7f0901d2;
        /**  The label for the group of notifications for ongoing events in the opened version of
         the status bar.  An ongoing call is the prime example of this.  The MP3 music player
         might be another example.   [CHAR LIMIT=40] 
         */
        public static final int status_bar_ongoing_events_title=0x7f09010f;
        /**  Title shown in recents popup for inspecting an application's properties 
         */
        public static final int status_bar_recent_inspect_item_title=0x7f09010b;
        /**  Title shown in recents popup for removing an application from the list 
         */
        public static final int status_bar_recent_remove_item_title=0x7f09010a;
        /**  Abbreviation / label for automatic brightness mode button. Should be all caps. [CHAR LIMIT=6] 
         */
        public static final int status_bar_settings_auto_brightness_label=0x7f09011f;
        /**  Label in system panel saying the device will use the orientation sensor to rotate [CHAR LIMIT=30] 
         */
        public static final int status_bar_settings_auto_rotation=0x7f09011d;
        /**  Abbreviation / label for mute brightness mode button. Should be all caps. [CHAR LIMIT=6] 
         */
        public static final int status_bar_settings_mute_label=0x7f09011e;
        /**  Label in system panel saying the device will show notifications [CHAR LIMIT=30] 
         */
        public static final int status_bar_settings_notifications=0x7f090120;
        /**  Name of the button that links to the Settings app. [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_settings_settings_button=0x7f09011b;
        /**  Text to display underneath the graphical signal strength meter when
         no connection is available. [CHAR LIMIT=20] 
         */
        public static final int status_bar_settings_signal_meter_disconnected=0x7f0901cc;
        /**  Text to display underneath the graphical signal strength meter when
         it is displaying Wi-Fi status and Wi-Fi is connected to a network
         whose SSID is not available.
         [CHAR LIMIT=20] 
         */
        public static final int status_bar_settings_signal_meter_wifi_nossid=0x7f0901cd;
        /**  Name of the button that links to the Wifi settings screen. [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_settings_wifi_button=0x7f09011c;
        /**  Label of a toggle switch to disable use of the physical keyboard in favor of the IME. [CHAR LIMIT=25] 
         */
        public static final int status_bar_use_physical_keyboard=0x7f090124;
        /**  Name of the work status bar icon. 
         */
        public static final int status_bar_work=0x7f09028f;
        /**  A: } 
A BUG_ID:NONE by zyn 20150106 { 
 A: } 
A BUG_ID:NONE by zyn 20150106 { 
         */
        public static final int super_power_saving_mode=0x7f0902a4;
        /**  Alias used to reference framework "OK" string in keyguard.  
 Date format for display: should match the lockscreen in /policy.  
         */
        public static final int system_ui_date_pattern=0x7f09009b;
        /**  Name of special SystemUI debug settings 
         */
        public static final int system_ui_tuner=0x7f090285;
        /**  A } 
A:DWYQLSS-77 guoshuai 20160229(start)
         */
        public static final int timeout=0x7f0902a5;
        /**  Title for USB accessory dialog.  Used when the name of the accessory cannot be determined.  [CHAR LIMIT=50] 
         */
        public static final int title_usb_accessory=0x7f09012a;
        /**  Rotation lock toast text: shown when rotation lock is turned on in landscape orientation.
         
         */
        public static final int toast_rotation_locked=0x7f0902a9;
        /**  Warning for users entering the System UI tuner [CHAR LIMIT=NONE]
         */
        public static final int tuner_persistent_warning=0x7f09029d;
        /**  Toast describing tuner has been enabled [CHAR LIMIT=NONE] 
         */
        public static final int tuner_toast=0x7f09029f;
        /**  Warning for users entering the System UI tuner for the first time [CHAR LIMIT=NONE]
         */
        public static final int tuner_warning=0x7f09029c;
        /**  Title of warning when entering System UI tuner for first time [CHAR LIMIT=NONE] 
         */
        public static final int tuner_warning_title=0x7f09029b;
        /**  Click action label for accessibility for the unlock button. [CHAR LIMIT=NONE] 
         */
        public static final int unlock_label=0x7f09014b;
        /**  Prompt for the USB accessory confirm dialog [CHAR LIMIT=80] 
         */
        public static final int usb_accessory_confirm_prompt=0x7f090128;
        /**  Prompt for the USB accessory permission dialog [CHAR LIMIT=80] 
         */
        public static final int usb_accessory_permission_prompt=0x7f090126;
        /**  Prompt for the USB accessory URI dialog [CHAR LIMIT=80] 
         */
        public static final int usb_accessory_uri_prompt=0x7f090129;
        /**  Option to always allow USB debugging from the attached computer 
         */
        public static final int usb_debugging_always=0x7f090130;
        /**  Message of confirmation dialog for USB debugging 
         */
        public static final int usb_debugging_message=0x7f09012f;
        /**  Message of notification shown when trying to enable USB debugging but a secondary user is the current foreground user. 
         */
        public static final int usb_debugging_secondary_user_message=0x7f090132;
        /**  Title of notification shown when trying to enable USB debugging but a secondary user is the current foreground user. 
         */
        public static final int usb_debugging_secondary_user_title=0x7f090131;
        /**  Title of confirmation dialog for USB debugging 
         */
        public static final int usb_debugging_title=0x7f09012e;
        /**  Prompt for the USB device confirm dialog [CHAR LIMIT=80] 
         */
        public static final int usb_device_confirm_prompt=0x7f090127;
        /**  Prompt for the USB device permission dialog [CHAR LIMIT=80] 
         */
        public static final int usb_device_permission_prompt=0x7f090125;
        /**  Title for the USB function chooser in UsbPreferenceActivity. [CHAR LIMIT=30] 
         */
        public static final int usb_preference_title=0x7f09013c;
        /**  Label for the MTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50] 
         */
        public static final int use_mtp_button_title=0x7f09013d;
        /**  Label for the PTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50] 
         */
        public static final int use_ptp_button_title=0x7f09013e;
        /**  Label for the adding a new user in the user switcher [CHAR LIMIT=35] 
         */
        public static final int user_add_user=0x7f09023a;
        /**  Message for add user confirmation dialog - short version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_short=0x7f09024a;
        /**  Title for add user confirmation dialog [CHAR LIMIT=30] 
         */
        public static final int user_add_user_title=0x7f090249;
        /**  Name for a freshly added user [CHAR LIMIT=30] 
         */
        public static final int user_new_user_name=0x7f09023b;
        /**  Defines the implementation of the velocity tracker to be used for the panel expansion. Can
         be 'platform' or 'noisy' (i.e. for noisy touch screens). 
         */
        public static final int velocity_tracker_impl=0x7f090104;
        /**  Click action label for accessibility for the voice assist button. This is not shown on-screen and is an accessibility label for the icon which launches the voice assist from the lock screen.[CHAR LIMIT=NONE] 
         */
        public static final int voice_assist_label=0x7f09014d;
        /**  Shows when people have clicked on the voice assist icon [CHAR LIMIT=60] 
         */
        public static final int voice_hint=0x7f09022c;
        public static final int voice_unlock_media_playing=0x7f09008c;
        public static final int voice_unlock_noisy=0x7f09008a;
        public static final int voice_unlock_password_wrong=0x7f090089;
        /**  VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
 VoiceUnlock 
         */
        public static final int voice_unlock_service_error=0x7f090088;
        public static final int voice_unlock_weak=0x7f09008b;
        public static final int voiceui_comma=0x7f090058;
        public static final int voiceui_control_poweroff_alarm=0x7f090057;
        public static final int voiceui_notify_string=0x7f090056;
        public static final int voiceui_or=0x7f09005b;
        public static final int voiceui_quota_end=0x7f09005a;
        public static final int voiceui_quota_start=0x7f090059;
        public static final int voiceunlock_accessibility_voice_unlock=0x7f09008e;
        public static final int voiceunlock_multiple_failures=0x7f09008d;
        public static final int volume_stream_limited_dnd=0x7f090283;
        public static final int volume_stream_muted=0x7f09027f;
        public static final int volume_stream_muted_dnd=0x7f090282;
        public static final int volume_stream_suppressed=0x7f090281;
        public static final int volume_stream_vibrate=0x7f090280;
        public static final int volume_stream_vibrate_dnd=0x7f090284;
        /**  Button label for ending zen mode in the volume dialog 
         */
        public static final int volume_zen_end_now=0x7f09026e;
        /**  VolumeUI restoration notification: text 
         */
        public static final int volumeui_notification_text=0x7f09027d;
        /**  VolumeUI restoration notification: title 
         */
        public static final int volumeui_notification_title=0x7f09027c;
        /**  VolumeUI activation dialog: allow button label 
         */
        public static final int volumeui_prompt_allow=0x7f09027a;
        /**  VolumeUI activation dialog: deny button label 
         */
        public static final int volumeui_prompt_deny=0x7f09027b;
        /**  VolumeUI activation dialog: warning message 
         */
        public static final int volumeui_prompt_message=0x7f090279;
        /**  Footer vpn present text [CHAR LIMIT=50] 
         */
        public static final int vpn_footer=0x7f090256;
        /**  M: WFD Sink 
         */
        public static final int wfd_sink_summary=0x7f0900fb;
        /**  Summary for Connected wifi network without internet 
         */
        public static final int wifi_connected_no_internet=0x7f09000f;
        /**  Status for networks disabled for unknown reason 
         */
        public static final int wifi_disabled_generic=0x7f090005;
        /**  Status for networked disabled from a DNS or DHCP failure 
         */
        public static final int wifi_disabled_network_failure=0x7f090006;
        /**  Status for networks disabled from authentication failure (wrong password
         or certificate). 
         */
        public static final int wifi_disabled_password_failure=0x7f090008;
        /**  Status for networked disabled from a wifi association failure 
         */
        public static final int wifi_disabled_wifi_failure=0x7f090007;
        /**  Toast message when Wi-Fi cannot scan for networks 
         */
        public static final int wifi_fail_to_scan=0x7f090002;
        /**  Summary for the remembered network but no internet connection was detected. 
         */
        public static final int wifi_no_internet=0x7f09000a;
        /**  Summary for the remembered network but currently not in range. 
         */
        public static final int wifi_not_in_range=0x7f090009;
        /**  Summary for the remembered network. 
         */
        public static final int wifi_remembered=0x7f090004;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_eap=0x7f09004c;
        /**  Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
         */
        public static final int wifi_security_none=0x7f090003;
        /**  Do not translate.  Concise terminology for Passpoint network 
         */
        public static final int wifi_security_passpoint=0x7f09004d;
        /**  Do not translate.  Terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_psk_generic=0x7f09004b;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_short_eap=0x7f090046;
        /**  Do not translate.  Concise terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_short_psk_generic=0x7f090045;
        /**  Do not translate.  Concise terminology for wifi with WEP security 
         */
        public static final int wifi_security_short_wep=0x7f090041;
        /**  Do not translate.  Concise terminology for wifi with WPA security 
         */
        public static final int wifi_security_short_wpa=0x7f090042;
        /**  Do not translate.  Concise terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_short_wpa2=0x7f090043;
        /**  Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
         */
        public static final int wifi_security_short_wpa_wpa2=0x7f090044;
        public static final int wifi_security_wapi_certificate=0x7f090001;
        public static final int wifi_security_wapi_psk=0x7f090000;
        /**  Do not translate.  Terminology for wifi with WEP security 
         */
        public static final int wifi_security_wep=0x7f090047;
        /**  Do not translate.  Terminology for wifi with WPA security 
         */
        public static final int wifi_security_wpa=0x7f090048;
        /**  Do not translate.  Terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_wpa2=0x7f090049;
        /**  Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
         */
        public static final int wifi_security_wpa_wpa2=0x7f09004a;
        /**  Warning text when an alarm might be silenced by Do Not Disturb due to a time-based condition [CHAR LIMIT=NONE] 
         */
        public static final int zen_alarm_warning=0x7f090295;
        /**  Warning text when an alarm might be silenced by Do Not Disturb [CHAR LIMIT=NONE] 
         */
        public static final int zen_alarm_warning_indef=0x7f090294;
        /**  Accessibility string for current zen mode and selected exit condition. A template that simply concatenates existing mode string and the current condition description. [CHAR LIMIT=20] 
         */
        public static final int zen_mode_and_condition=0x7f09026d;
        /**  Zen mode: Priority only customization button label 
         */
        public static final int zen_priority_customize_button=0x7f090224;
        /**  Zen mode: Priority only introduction message on first use 
         */
        public static final int zen_priority_introduction=0x7f090223;
        /**  Zen mode: Total silence introduction message on first use (non-voice capable devices) 
         */
        public static final int zen_silence_introduction=0x7f090226;
        /**  Zen mode: Total silence introduction message on first use (voice capable devices) 
         */
        public static final int zen_silence_introduction_voice=0x7f090225;
    }
    public static final class style {
        public static final int Animation=0x7f0c0031;
        public static final int Animation_NavigationBarFadeIn=0x7f0c0034;
        public static final int Animation_RecentPanel=0x7f0c0033;
        /**  Animations for a non-full-screen window or activity. 
         */
        public static final int Animation_RecentsActivity=0x7f0c0013;
        public static final int Animation_ShirtPocketPanel=0x7f0c0032;
        /**  Standard animations for hiding and showing the status bar. 
         */
        public static final int Animation_StatusBar=0x7f0c0035;
        public static final int BaseBrightnessDialogContainer=0x7f0c002f;
        public static final int BouncerSecurityContainer=0x7f0c000b;
        public static final int BrightnessDialogContainer=0x7f0c0030;
        /**  power off alrm end 
 Keyguard PIN dimsiss button styles 
         */
        public static final int DismissPadKey=0x7f0c0005;
        public static final int DualToneDarkTheme=0x7f0c0040;
        public static final int DualToneLightTheme=0x7f0c003f;
        public static final int PasswordTheme=0x7f0c000c;
        public static final int QSBorderlessButton=0x7f0c003a;
        public static final int RecentsStyle=0x7f0c000f;
        public static final int RecentsTheme=0x7f0c0010;
        /**  Performance optimized alternate Recents theme (no wallpaper) 
         */
        public static final int RecentsTheme_NoWallpaper=0x7f0c0012;
        /**  Alternate Recents theme 
         */
        public static final int RecentsTheme_Wallpaper=0x7f0c0011;
        public static final int SearchPanelCircle=0x7f0c003c;
        public static final int TextAppearance=0x7f0c0020;
        public static final int TextAppearance_Material_Notification_Parenthetical=0x7f0c003b;
        public static final int TextAppearance_QS=0x7f0c0021;
        public static final int TextAppearance_QS_DataUsage=0x7f0c002c;
        public static final int TextAppearance_QS_DataUsage_Secondary=0x7f0c002e;
        public static final int TextAppearance_QS_DataUsage_Usage=0x7f0c002d;
        public static final int TextAppearance_QS_DetailButton=0x7f0c0027;
        public static final int TextAppearance_QS_DetailButton_White=0x7f0c0028;
        public static final int TextAppearance_QS_DetailEmpty=0x7f0c0029;
        public static final int TextAppearance_QS_DetailHeader=0x7f0c0022;
        public static final int TextAppearance_QS_DetailItemPrimary=0x7f0c0023;
        public static final int TextAppearance_QS_DetailItemSecondary=0x7f0c0024;
        public static final int TextAppearance_QS_Introduction=0x7f0c0025;
        public static final int TextAppearance_QS_SegmentedButton=0x7f0c002b;
        public static final int TextAppearance_QS_Subhead=0x7f0c002a;
        public static final int TextAppearance_QS_Warning=0x7f0c0026;
        public static final int TextAppearance_StatusBar_Clock=0x7f0c0017;
        public static final int TextAppearance_StatusBar_Expanded=0x7f0c0018;
        public static final int TextAppearance_StatusBar_Expanded_AboveDateTime=0x7f0c001b;
        public static final int TextAppearance_StatusBar_Expanded_ChargingInfo=0x7f0c001d;
        public static final int TextAppearance_StatusBar_Expanded_Clock=0x7f0c0019;
        public static final int TextAppearance_StatusBar_Expanded_Date=0x7f0c001a;
        public static final int TextAppearance_StatusBar_Expanded_EmergencyCallsOnly=0x7f0c001c;
        public static final int TextAppearance_StatusBar_Expanded_UserSwitcher=0x7f0c001e;
        public static final int TextAppearance_StatusBar_Expanded_UserSwitcher_UserName=0x7f0c001f;
        public static final int TextAppearance_StatusBar_HeadsUp=0x7f0c0014;
        public static final int TextAppearance_StatusBar_SystemPanel=0x7f0c0015;
        public static final int TextAppearance_StatusBar_TextButton=0x7f0c0016;
        public static final int TextAppearance_Volume=0x7f0c0041;
        public static final int TextAppearance_Volume_Header=0x7f0c0042;
        public static final int TextAppearance_Volume_ZenDetail=0x7f0c0044;
        public static final int TextAppearance_Volume_ZenSummary=0x7f0c0043;
        public static final int Theme_AlertDialogHost=0x7f0c003e;
        public static final int Theme_SystemUI_Dialog=0x7f0c0038;
        public static final int Theme_SystemUI_Dialog_Alert=0x7f0c0039;
        public static final int UserDetailView=0x7f0c003d;
        public static final int VolumeButtons=0x7f0c0045;
        /**  Keyguard PIN pad styles 
         */
        public static final int Widget_TextView_NumPadKey=0x7f0c0007;
        public static final int Widget_TextView_NumPadKey_Klondike=0x7f0c0008;
        public static final int big_bold=0x7f0c0003;
        /**  Clock 
         */
        public static final int big_thin=0x7f0c0006;
        /**  The theme to use for RecentsActivity. 
         */
        public static final int config_recents_activity_theme=0x7f0c000e;
        public static final int header=0x7f0c0001;
        public static final int header_not_caps=0x7f0c0002;
        public static final int keyguard_presentation_theme=0x7f0c000d;
        /**  power off alrm start
         */
        public static final int label=0x7f0c0000;
        public static final int systemui_theme=0x7f0c0036;
        public static final int systemui_theme_light=0x7f0c0037;
        public static final int widget_big_bold=0x7f0c0004;
        public static final int widget_big_thin=0x7f0c000a;
        /**  Built-in clock widget stuff 
         */
        public static final int widget_label=0x7f0c0009;
    }
    public static final class xml {
        public static final int default_residentpackage=0x7f070000;
        public static final int timezones=0x7f070001;
        public static final int tuner_prefs=0x7f070002;
    }
    public static final class styleable {
        /** Attributes that can be used with a AlphaOptimizedImageView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AlphaOptimizedImageView_hasOverlappingRendering com.android.systemui.tests:hasOverlappingRendering}</code></td><td></td></tr>
           </table>
           @see #AlphaOptimizedImageView_hasOverlappingRendering
         */
        public static final int[] AlphaOptimizedImageView = {
            0x7f010032
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#hasOverlappingRendering}
          attribute's value can be found in the {@link #AlphaOptimizedImageView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:hasOverlappingRendering
        */
        public static final int AlphaOptimizedImageView_hasOverlappingRendering = 0;
        /** Attributes that can be used with a BatteryMeterView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BatteryMeterView_frameColor com.android.systemui.tests:frameColor}</code></td><td></td></tr>
           </table>
           @see #BatteryMeterView_frameColor
         */
        public static final int[] BatteryMeterView = {
            0x7f010022
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#frameColor}
          attribute's value can be found in the {@link #BatteryMeterView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:frameColor
        */
        public static final int BatteryMeterView_frameColor = 0;
        /** Attributes that can be used with a CarrierText.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CarrierText_allCaps com.android.systemui.tests:allCaps}</code></td><td></td></tr>
           </table>
           @see #CarrierText_allCaps
         */
        public static final int[] CarrierText = {
            0x7f010014
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#allCaps}
          attribute's value can be found in the {@link #CarrierText} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:allCaps
        */
        public static final int CarrierText_allCaps = 0;
        /**  A:DSYYLM-64 guoshuai 20160108(start) 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CircleProgressBar_circleProgressColor com.android.systemui.tests:circleProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_circleProgressNormalColor com.android.systemui.tests:circleProgressNormalColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_circleWidth com.android.systemui.tests:circleWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_innerCircleSpace com.android.systemui.tests:innerCircleSpace}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_normalBackground com.android.systemui.tests:normalBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_percentTextColor com.android.systemui.tests:percentTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_percentTextLargeSize com.android.systemui.tests:percentTextLargeSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_percentTextSize com.android.systemui.tests:percentTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_pressedBackground com.android.systemui.tests:pressedBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_scaleTextForeColor com.android.systemui.tests:scaleTextForeColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_scaleTextSize com.android.systemui.tests:scaleTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_scaleTextbehindColor com.android.systemui.tests:scaleTextbehindColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_startAngle com.android.systemui.tests:startAngle}</code></td><td></td></tr>
           <tr><td><code>{@link #CircleProgressBar_sweepAngle com.android.systemui.tests:sweepAngle}</code></td><td></td></tr>
           </table>
           @see #CircleProgressBar_circleProgressColor
           @see #CircleProgressBar_circleProgressNormalColor
           @see #CircleProgressBar_circleWidth
           @see #CircleProgressBar_innerCircleSpace
           @see #CircleProgressBar_normalBackground
           @see #CircleProgressBar_percentTextColor
           @see #CircleProgressBar_percentTextLargeSize
           @see #CircleProgressBar_percentTextSize
           @see #CircleProgressBar_pressedBackground
           @see #CircleProgressBar_scaleTextForeColor
           @see #CircleProgressBar_scaleTextSize
           @see #CircleProgressBar_scaleTextbehindColor
           @see #CircleProgressBar_startAngle
           @see #CircleProgressBar_sweepAngle
         */
        public static final int[] CircleProgressBar = {
            0x7f010033, 0x7f010034, 0x7f010035, 0x7f010036,
            0x7f010037, 0x7f010038, 0x7f010039, 0x7f01003a,
            0x7f01003b, 0x7f01003c, 0x7f01003d, 0x7f01003e,
            0x7f01003f, 0x7f010040
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#circleProgressColor}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:circleProgressColor
        */
        public static final int CircleProgressBar_circleProgressColor = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#circleProgressNormalColor}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:circleProgressNormalColor
        */
        public static final int CircleProgressBar_circleProgressNormalColor = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#circleWidth}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:circleWidth
        */
        public static final int CircleProgressBar_circleWidth = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#innerCircleSpace}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:innerCircleSpace
        */
        public static final int CircleProgressBar_innerCircleSpace = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#normalBackground}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.systemui.tests:normalBackground
        */
        public static final int CircleProgressBar_normalBackground = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#percentTextColor}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:percentTextColor
        */
        public static final int CircleProgressBar_percentTextColor = 10;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#percentTextLargeSize}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:percentTextLargeSize
        */
        public static final int CircleProgressBar_percentTextLargeSize = 9;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#percentTextSize}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:percentTextSize
        */
        public static final int CircleProgressBar_percentTextSize = 8;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#pressedBackground}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.systemui.tests:pressedBackground
        */
        public static final int CircleProgressBar_pressedBackground = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#scaleTextForeColor}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:scaleTextForeColor
        */
        public static final int CircleProgressBar_scaleTextForeColor = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#scaleTextSize}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:scaleTextSize
        */
        public static final int CircleProgressBar_scaleTextSize = 11;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#scaleTextbehindColor}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:scaleTextbehindColor
        */
        public static final int CircleProgressBar_scaleTextbehindColor = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#startAngle}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:startAngle
        */
        public static final int CircleProgressBar_startAngle = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#sweepAngle}
          attribute's value can be found in the {@link #CircleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:sweepAngle
        */
        public static final int CircleProgressBar_sweepAngle = 7;
        /** Attributes that can be used with a Clock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Clock_amPmStyle com.android.systemui.tests:amPmStyle}</code></td><td></td></tr>
           </table>
           @see #Clock_amPmStyle
         */
        public static final int[] Clock = {
            0x7f010023
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#amPmStyle}
          attribute's value can be found in the {@link #Clock} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>small</code></td><td>1</td><td></td></tr>
<tr><td><code>gone</code></td><td>2</td><td></td></tr>
</table>
          @attr name com.android.systemui.tests:amPmStyle
        */
        public static final int Clock_amPmStyle = 0;
        /** Attributes that can be used with a DateView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DateView_datePattern com.android.systemui.tests:datePattern}</code></td><td></td></tr>
           </table>
           @see #DateView_datePattern
         */
        public static final int[] DateView = {
            0x7f01002a
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#datePattern}
          attribute's value can be found in the {@link #DateView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:datePattern
        */
        public static final int DateView_datePattern = 0;
        /** Attributes that can be used with a DeadZone.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DeadZone_decayTime com.android.systemui.tests:decayTime}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_holdTime com.android.systemui.tests:holdTime}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_maxSize com.android.systemui.tests:maxSize}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_minSize com.android.systemui.tests:minSize}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_orientation com.android.systemui.tests:orientation}</code></td><td></td></tr>
           </table>
           @see #DeadZone_decayTime
           @see #DeadZone_holdTime
           @see #DeadZone_maxSize
           @see #DeadZone_minSize
           @see #DeadZone_orientation
         */
        public static final int[] DeadZone = {
            0x7f01001e, 0x7f01001f, 0x7f010020, 0x7f010021,
            0x7f010024
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#decayTime}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:decayTime
        */
        public static final int DeadZone_decayTime = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#holdTime}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:holdTime
        */
        public static final int DeadZone_holdTime = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#maxSize}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:maxSize
        */
        public static final int DeadZone_maxSize = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#minSize}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:minSize
        */
        public static final int DeadZone_minSize = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#orientation}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.android.systemui.tests:orientation
        */
        public static final int DeadZone_orientation = 4;
        /**  Show on Notification Keygaurd(for operator) start 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ECCButtonAttr_locateAtNonSecureView com.android.systemui.tests:locateAtNonSecureView}</code></td><td></td></tr>
           </table>
           @see #ECCButtonAttr_locateAtNonSecureView
         */
        public static final int[] ECCButtonAttr = {
            0x7f010000
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#locateAtNonSecureView}
          attribute's value can be found in the {@link #ECCButtonAttr} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:locateAtNonSecureView
        */
        public static final int ECCButtonAttr_locateAtNonSecureView = 0;
        /**   Show on Notification Keygaurd(for operator) end 
  Power off alarm start 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GlowPadView_allowScaling com.android.systemui.tests:allowScaling}</code></td><td> Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent.</td></tr>
           <tr><td><code>{@link #GlowPadView_alwaysTrackFinger com.android.systemui.tests:alwaysTrackFinger}</code></td><td> Used when the handle shouldn't wait to be hit before following the finger </td></tr>
           <tr><td><code>{@link #GlowPadView_android_gravity android:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #GlowPadView_directionDescriptions com.android.systemui.tests:directionDescriptions}</code></td><td> Reference to an array resource that be used to announce the directions with targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_feedbackCount com.android.systemui.tests:feedbackCount}</code></td><td> Number of waves/chevrons to show in animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_glowRadius com.android.systemui.tests:glowRadius}</code></td><td> Size of target radius.</td></tr>
           <tr><td><code>{@link #GlowPadView_handleDrawable com.android.systemui.tests:handleDrawable}</code></td><td> Sets a drawable as the center.</td></tr>
           <tr><td><code>{@link #GlowPadView_innerRadius com.android.systemui.tests:innerRadius}</code></td><td> Inner radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRadius com.android.systemui.tests:outerRadius}</code></td><td> Outer radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRingDrawable com.android.systemui.tests:outerRingDrawable}</code></td><td> Drawable to use for wave ripple animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_pointDrawable com.android.systemui.tests:pointDrawable}</code></td><td> Drawble used for drawing points </td></tr>
           <tr><td><code>{@link #GlowPadView_snapMargin com.android.systemui.tests:snapMargin}</code></td><td> How close we need to be before snapping to a target.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDescriptions com.android.systemui.tests:targetDescriptions}</code></td><td> Reference to an array resource that be used as description for the targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDrawables com.android.systemui.tests:targetDrawables}</code></td><td> Reference to an array resource that be shown as targets around a circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_vibrationDuration com.android.systemui.tests:vibrationDuration}</code></td><td> Tactile feedback duration for actions.</td></tr>
           </table>
           @see #GlowPadView_allowScaling
           @see #GlowPadView_alwaysTrackFinger
           @see #GlowPadView_android_gravity
           @see #GlowPadView_directionDescriptions
           @see #GlowPadView_feedbackCount
           @see #GlowPadView_glowRadius
           @see #GlowPadView_handleDrawable
           @see #GlowPadView_innerRadius
           @see #GlowPadView_outerRadius
           @see #GlowPadView_outerRingDrawable
           @see #GlowPadView_pointDrawable
           @see #GlowPadView_snapMargin
           @see #GlowPadView_targetDescriptions
           @see #GlowPadView_targetDrawables
           @see #GlowPadView_vibrationDuration
         */
        public static final int[] GlowPadView = {
            0x010100af, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
            0x7f01000c, 0x7f01000d, 0x7f01000e
        };
        /**
          <p>
          @attr description
           Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent. If this is set to false, no scaling will occur. If this is set to true
            scaling will occur to fit for any axis in which gravity is set to center. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:allowScaling
        */
        public static final int GlowPadView_allowScaling = 14;
        /**
          <p>
          @attr description
           Used when the handle shouldn't wait to be hit before following the finger 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:alwaysTrackFinger
        */
        public static final int GlowPadView_alwaysTrackFinger = 13;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gravity}
          attribute's value can be found in the {@link #GlowPadView} array.
          @attr name android:gravity
        */
        public static final int GlowPadView_android_gravity = 0;
        /**
          <p>
          @attr description
           Reference to an array resource that be used to announce the directions with targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:directionDescriptions
        */
        public static final int GlowPadView_directionDescriptions = 3;
        /**
          <p>
          @attr description
           Number of waves/chevrons to show in animation. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:feedbackCount
        */
        public static final int GlowPadView_feedbackCount = 12;
        /**
          <p>
          @attr description
           Size of target radius. Points within this distance of target center is a "hit". 

        <attr name="hitRadius" format="dimension"/>
        
 Radius of glow under finger. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:glowRadius
        */
        public static final int GlowPadView_glowRadius = 9;
        /**
          <p>
          @attr description
           Sets a drawable as the center. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:handleDrawable
        */
        public static final int GlowPadView_handleDrawable = 4;
        /**
          <p>
          @attr description
           Inner radius of glow area. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:innerRadius
        */
        public static final int GlowPadView_innerRadius = 7;
        /**
          <p>
          @attr description
           Outer radius of glow area. Target icons will be drawn on this circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:outerRadius
        */
        public static final int GlowPadView_outerRadius = 8;
        /**
          <p>
          @attr description
           Drawable to use for wave ripple animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:outerRingDrawable
        */
        public static final int GlowPadView_outerRingDrawable = 5;
        /**
          <p>
          @attr description
           Drawble used for drawing points 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:pointDrawable
        */
        public static final int GlowPadView_pointDrawable = 6;
        /**
          <p>
          @attr description
           How close we need to be before snapping to a target. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:snapMargin
        */
        public static final int GlowPadView_snapMargin = 11;
        /**
          <p>
          @attr description
           Reference to an array resource that be used as description for the targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:targetDescriptions
        */
        public static final int GlowPadView_targetDescriptions = 2;
        /**
          <p>
          @attr description
           Reference to an array resource that be shown as targets around a circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:targetDrawables
        */
        public static final int GlowPadView_targetDrawables = 1;
        /**
          <p>
          @attr description
           Tactile feedback duration for actions. Set to '0' for no vibration. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:vibrationDuration
        */
        public static final int GlowPadView_vibrationDuration = 10;
        /** Attributes that can be used with a KeyButtonView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyButtonView_keyCode com.android.systemui.tests:keyCode}</code></td><td> key code to send when pressed; if absent or 0, no key is sent </td></tr>
           <tr><td><code>{@link #KeyButtonView_keyRepeat com.android.systemui.tests:keyRepeat}</code></td><td> does this button generate longpress / repeat events? </td></tr>
           </table>
           @see #KeyButtonView_keyCode
           @see #KeyButtonView_keyRepeat
         */
        public static final int[] KeyButtonView = {
            0x7f010018, 0x7f010019
        };
        /**
          <p>
          @attr description
           key code to send when pressed; if absent or 0, no key is sent 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:keyCode
        */
        public static final int KeyButtonView_keyCode = 0;
        /**
          <p>
          @attr description
           does this button generate longpress / repeat events? 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui.tests:keyRepeat
        */
        public static final int KeyButtonView_keyRepeat = 1;
        /** Attributes that can be used with a KeyguardSecurityViewFlipper_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxHeight com.android.systemui.tests:layout_maxHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxWidth com.android.systemui.tests:layout_maxWidth}</code></td><td></td></tr>
           </table>
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxHeight
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxWidth
         */
        public static final int[] KeyguardSecurityViewFlipper_Layout = {
            0x7f01000f, 0x7f010010
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#layout_maxHeight}
          attribute's value can be found in the {@link #KeyguardSecurityViewFlipper_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:layout_maxHeight
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxHeight = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#layout_maxWidth}
          attribute's value can be found in the {@link #KeyguardSecurityViewFlipper_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:layout_maxWidth
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxWidth = 0;
        /** Attributes that can be used with a NotificationLinearLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NotificationLinearLayout_insetLeft com.android.systemui.tests:insetLeft}</code></td><td></td></tr>
           </table>
           @see #NotificationLinearLayout_insetLeft
         */
        public static final int[] NotificationLinearLayout = {
            0x7f01001b
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#insetLeft}
          attribute's value can be found in the {@link #NotificationLinearLayout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:insetLeft
        */
        public static final int NotificationLinearLayout_insetLeft = 0;
        /** Attributes that can be used with a NotificationRowLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NotificationRowLayout_rowHeight com.android.systemui.tests:rowHeight}</code></td><td></td></tr>
           </table>
           @see #NotificationRowLayout_rowHeight
         */
        public static final int[] NotificationRowLayout = {
            0x7f01001c
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#rowHeight}
          attribute's value can be found in the {@link #NotificationRowLayout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:rowHeight
        */
        public static final int NotificationRowLayout_rowHeight = 0;
        /** Attributes that can be used with a NumPadKey.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NumPadKey_digit com.android.systemui.tests:digit}</code></td><td></td></tr>
           <tr><td><code>{@link #NumPadKey_textView com.android.systemui.tests:textView}</code></td><td></td></tr>
           </table>
           @see #NumPadKey_digit
           @see #NumPadKey_textView
         */
        public static final int[] NumPadKey = {
            0x7f010011, 0x7f010012
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#digit}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:digit
        */
        public static final int NumPadKey_digit = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#textView}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.systemui.tests:textView
        */
        public static final int NumPadKey_textView = 1;
        /** Attributes that can be used with a PasswordTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PasswordTextView_scaledTextSize com.android.systemui.tests:scaledTextSize}</code></td><td></td></tr>
           </table>
           @see #PasswordTextView_scaledTextSize
         */
        public static final int[] PasswordTextView = {
            0x7f010013
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#scaledTextSize}
          attribute's value can be found in the {@link #PasswordTextView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:scaledTextSize
        */
        public static final int PasswordTextView_scaledTextSize = 0;
        /** Attributes that can be used with a PseudoGridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PseudoGridView_horizontalSpacing com.android.systemui.tests:horizontalSpacing}</code></td><td></td></tr>
           <tr><td><code>{@link #PseudoGridView_numColumns com.android.systemui.tests:numColumns}</code></td><td></td></tr>
           <tr><td><code>{@link #PseudoGridView_verticalSpacing com.android.systemui.tests:verticalSpacing}</code></td><td></td></tr>
           </table>
           @see #PseudoGridView_horizontalSpacing
           @see #PseudoGridView_numColumns
           @see #PseudoGridView_verticalSpacing
         */
        public static final int[] PseudoGridView = {
            0x7f01002b, 0x7f01002c, 0x7f01002d
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#horizontalSpacing}
          attribute's value can be found in the {@link #PseudoGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:horizontalSpacing
        */
        public static final int PseudoGridView_horizontalSpacing = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#numColumns}
          attribute's value can be found in the {@link #PseudoGridView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:numColumns
        */
        public static final int PseudoGridView_numColumns = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#verticalSpacing}
          attribute's value can be found in the {@link #PseudoGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:verticalSpacing
        */
        public static final int PseudoGridView_verticalSpacing = 1;
        /** Attributes that can be used with a RecentsPanelView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RecentsPanelView_recentItemLayout com.android.systemui.tests:recentItemLayout}</code></td><td></td></tr>
           </table>
           @see #RecentsPanelView_recentItemLayout
         */
        public static final int[] RecentsPanelView = {
            0x7f01001d
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#recentItemLayout}
          attribute's value can be found in the {@link #RecentsPanelView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.systemui.tests:recentItemLayout
        */
        public static final int RecentsPanelView_recentItemLayout = 0;
        /** M: Add for multi-window XML attributes used by default_residentpackage.xml 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ResidentPackage_residentClassName com.android.systemui.tests:residentClassName}</code></td><td></td></tr>
           <tr><td><code>{@link #ResidentPackage_residentOrder com.android.systemui.tests:residentOrder}</code></td><td></td></tr>
           <tr><td><code>{@link #ResidentPackage_residentPackageName com.android.systemui.tests:residentPackageName}</code></td><td></td></tr>
           </table>
           @see #ResidentPackage_residentClassName
           @see #ResidentPackage_residentOrder
           @see #ResidentPackage_residentPackageName
         */
        public static final int[] ResidentPackage = {
            0x7f010015, 0x7f010016, 0x7f010017
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#residentClassName}
          attribute's value can be found in the {@link #ResidentPackage} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:residentClassName
        */
        public static final int ResidentPackage_residentClassName = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#residentOrder}
          attribute's value can be found in the {@link #ResidentPackage} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:residentOrder
        */
        public static final int ResidentPackage_residentOrder = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#residentPackageName}
          attribute's value can be found in the {@link #ResidentPackage} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:residentPackageName
        */
        public static final int ResidentPackage_residentPackageName = 0;
        /** Attributes that can be used with a StatusBarWindowView_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #StatusBarWindowView_Layout_ignoreRightInset com.android.systemui.tests:ignoreRightInset}</code></td><td></td></tr>
           </table>
           @see #StatusBarWindowView_Layout_ignoreRightInset
         */
        public static final int[] StatusBarWindowView_Layout = {
            0x7f010031
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#ignoreRightInset}
          attribute's value can be found in the {@link #StatusBarWindowView_Layout} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:ignoreRightInset
        */
        public static final int StatusBarWindowView_Layout_ignoreRightInset = 0;
        /** Attributes that can be used with a ToggleSlider.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ToggleSlider_text com.android.systemui.tests:text}</code></td><td></td></tr>
           </table>
           @see #ToggleSlider_text
         */
        public static final int[] ToggleSlider = {
            0x7f01001a
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#text}
          attribute's value can be found in the {@link #ToggleSlider} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:text
        */
        public static final int ToggleSlider_text = 0;
        /**  Theme for icons in the status bar (light/dark). background/fillColor is used for dual tone
         icons like wifi and signal, and singleToneColor is used for icons with only one tone.
         Contract: Pixel with fillColor blended over backgroundColor blended over translucent should
         equal to singleToneColor blended over translucent. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TonedIcon_backgroundColor com.android.systemui.tests:backgroundColor}</code></td><td></td></tr>
           <tr><td><code>{@link #TonedIcon_fillColor com.android.systemui.tests:fillColor}</code></td><td></td></tr>
           <tr><td><code>{@link #TonedIcon_singleToneColor com.android.systemui.tests:singleToneColor}</code></td><td></td></tr>
           </table>
           @see #TonedIcon_backgroundColor
           @see #TonedIcon_fillColor
           @see #TonedIcon_singleToneColor
         */
        public static final int[] TonedIcon = {
            0x7f01002e, 0x7f01002f, 0x7f010030
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#backgroundColor}
          attribute's value can be found in the {@link #TonedIcon} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:backgroundColor
        */
        public static final int TonedIcon_backgroundColor = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#fillColor}
          attribute's value can be found in the {@link #TonedIcon} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:fillColor
        */
        public static final int TonedIcon_fillColor = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#singleToneColor}
          attribute's value can be found in the {@link #TonedIcon} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:singleToneColor
        */
        public static final int TonedIcon_singleToneColor = 2;
        /** Attributes that can be used with a UserAvatarView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #UserAvatarView_activeFrameColor com.android.systemui.tests:activeFrameColor}</code></td><td></td></tr>
           <tr><td><code>{@link #UserAvatarView_frameColor com.android.systemui.tests:frameColor}</code></td><td></td></tr>
           <tr><td><code>{@link #UserAvatarView_framePadding com.android.systemui.tests:framePadding}</code></td><td></td></tr>
           <tr><td><code>{@link #UserAvatarView_frameWidth com.android.systemui.tests:frameWidth}</code></td><td></td></tr>
           </table>
           @see #UserAvatarView_activeFrameColor
           @see #UserAvatarView_frameColor
           @see #UserAvatarView_framePadding
           @see #UserAvatarView_frameWidth
         */
        public static final int[] UserAvatarView = {
            0x7f010022, 0x7f010025, 0x7f010026, 0x7f010027
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#activeFrameColor}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:activeFrameColor
        */
        public static final int UserAvatarView_activeFrameColor = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#frameColor}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:frameColor
        */
        public static final int UserAvatarView_frameColor = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#framePadding}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:framePadding
        */
        public static final int UserAvatarView_framePadding = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#frameWidth}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:frameWidth
        */
        public static final int UserAvatarView_frameWidth = 1;
        /** Attributes that can be used with a UserDetailItemView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #UserDetailItemView_activatedFontFamily com.android.systemui.tests:activatedFontFamily}</code></td><td></td></tr>
           <tr><td><code>{@link #UserDetailItemView_regularFontFamily com.android.systemui.tests:regularFontFamily}</code></td><td></td></tr>
           </table>
           @see #UserDetailItemView_activatedFontFamily
           @see #UserDetailItemView_regularFontFamily
         */
        public static final int[] UserDetailItemView = {
            0x7f010028, 0x7f010029
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#activatedFontFamily}
          attribute's value can be found in the {@link #UserDetailItemView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:activatedFontFamily
        */
        public static final int UserDetailItemView_activatedFontFamily = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.tests.R.attr#regularFontFamily}
          attribute's value can be found in the {@link #UserDetailItemView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui.tests:regularFontFamily
        */
        public static final int UserDetailItemView_regularFontFamily = 0;
    };
}
