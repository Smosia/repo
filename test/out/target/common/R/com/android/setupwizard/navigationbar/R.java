/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.setupwizard.navigationbar;

public final class R {
    public static final class anim {
        public static final int confirm_credential_close_enter=0x7f050000;
        public static final int confirm_credential_close_exit=0x7f050001;
        public static final int confirm_credential_open_enter=0x7f050002;
        public static final int confirm_credential_open_exit=0x7f050003;
        public static final int enrollment_fingerprint_isolated_ridge_1_path_animation=0x7f050004;
        public static final int enrollment_fingerprint_isolated_ridge_2_path_animation=0x7f050005;
        public static final int enrollment_fingerprint_isolated_ridge_5_path_animation=0x7f050006;
        public static final int enrollment_fingerprint_isolated_ridge_6_path_animation=0x7f050007;
        public static final int enrollment_fingerprint_isolated_ridge_7_path_animation=0x7f050008;
        public static final int fab_elevation=0x7f050009;
        public static final int suw_slide_back_in=0x7f05000a;
        public static final int suw_slide_back_out=0x7f05000b;
        public static final int suw_slide_next_in=0x7f05000c;
        public static final int suw_slide_next_out=0x7f05000d;
    }
    public static final class animator {
        public static final int suw_slide_back_in=0x7f060000;
        public static final int suw_slide_back_out=0x7f060001;
        public static final int suw_slide_next_in=0x7f060002;
        public static final int suw_slide_next_out=0x7f060003;
    }
    public static final class array {
        /**  Titles for animator duration scale preference. [CHAR LIMIT=35] 
         */
        public static final int animator_duration_scale_entries=0x7f0a002b;
        /**  Values for animator duration scale preference. 
         */
        public static final int animator_duration_scale_values=0x7f0a0077;
        /**  Authentication Types used in APN editor 
         */
        public static final int apn_auth_entries=0x7f0a0017;
        public static final int apn_auth_values=0x7f0a0065;
        /**  Authentication Types used in APN editor 
         */
        public static final int apn_protocol_entries=0x7f0a0018;
        public static final int apn_protocol_values=0x7f0a0066;
        /**  MTK Tethering Settings end[SKIP COMMENT] 
 MTK APN Settings start[SKIP COMMENT] 
 MTK APN Settings start[SKIP COMMENT] 
 MTK APN Settings start[SKIP COMMENT] 
 MTK APN Settings start[SKIP COMMENT] 
         */
        public static final int apn_type_generic=0x7f0a0050;
        /**  Apps on SD installation location options in ApplicationSettings 
         */
        public static final int app_install_location_entries=0x7f0a001b;
        /**  Do not translate. 
         */
        public static final int app_install_location_values=0x7f0a0069;
        /**  Names of categories of app ops tabs 
         */
        public static final int app_ops_categories=0x7f0a001c;
        /**  User display names for app ops codes 
         */
        public static final int app_ops_labels=0x7f0a001e;
        /**  User display names for app ops codes 
         */
        public static final int app_ops_summaries=0x7f0a001d;
        /**  Titles for app process limit preference. [CHAR LIMIT=35] 
         */
        public static final int app_process_limit_entries=0x7f0a0031;
        /**  Values for app process limit preference. 
         */
        public static final int app_process_limit_values=0x7f0a007d;
        /**  MTK Feature auto time list start 
         */
        public static final int auto_time_entries=0x7f0a003a;
        /**  Battery saver mode: allowable trigger threshold levels. 
         */
        public static final int battery_saver_trigger_values=0x7f0a0085;
        /**  Bearer Info used in APN editor 
         */
        public static final int bearer_entries=0x7f0a0019;
        public static final int bearer_values=0x7f0a0067;
        /**  Bluetooth Settings 
 Discoverable mode timeout options 
         */
        public static final int bluetooth_visibility_timeout_entries=0x7f0a000b;
        /**  Titles for captioning color preference. 
         */
        public static final int captioning_color_selector_titles=0x7f0a006e;
        /**  Values for captioning color preference. 
         */
        public static final int captioning_color_selector_values=0x7f0a006f;
        /**  Titles for captioning character edge type preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_type_selector_titles=0x7f0a0022;
        /**  Values for captioning character edge type preference. 
         */
        public static final int captioning_edge_type_selector_values=0x7f0a006d;
        /**  Titles for captioning font size preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_font_size_selector_titles=0x7f0a0021;
        /**  Values for captioning font size preference. 
         */
        public static final int captioning_font_size_selector_values=0x7f0a006c;
        /**  Titles for captioning opacity preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_opacity_selector_titles=0x7f0a0070;
        /**  Values for captioning opacity preference. 
         */
        public static final int captioning_opacity_selector_values=0x7f0a0071;
        /**  Titles for captioning text style preset preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_preset_selector_titles=0x7f0a0023;
        /**  Values for captioning text style preset preference. 
         */
        public static final int captioning_preset_selector_values=0x7f0a0072;
        /**  Titles for captioning typeface preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_typeface_selector_titles=0x7f0a0020;
        /**  Values for captioning typeface preference. 
         */
        public static final int captioning_typeface_selector_values=0x7f0a006b;
        /**  Array of titles for sim color for multi-sim 
         */
        public static final int color_picker=0x7f0a0039;
        /**  Display color space adjustment modes for accessibility 
         */
        public static final int daltonizer_type_entries=0x7f0a0081;
        /**  Values for display color space adjustment modes for accessibility 
         */
        public static final int daltonizer_type_values=0x7f0a0082;
        /**  Data Usage settings. Range of data usage. 
         */
        public static final int data_usage_data_range=0x7f0a000f;
        /**  There is a setting to control the format of dates displayed throughout the system.  This is in the Date & Time Settings screen.  These will be adjusted to use punctuation appropriate to the user's locale. 
 There is a setting to control the format of dates displayed throughout the system.  This is in the Date & Time Settings screen.  These will be adjusted to use punctuation appropriate to the user's locale. 
         */
        public static final int date_format_values=0x7f0a008a;
        /**  Titles for debug overdraw preference. [CHAR LIMIT=50] 
         */
        public static final int debug_hw_overdraw_entries=0x7f0a0030;
        /**  Values for debug overdraw preference. 
         */
        public static final int debug_hw_overdraw_values=0x7f0a007c;
        /**  Display settings.  The delay in inactivity before the dream is shown. These are shown in a list dialog. 
         */
        public static final int dream_timeout_entries=0x7f0a0004;
        /**  Do not translate. 
         */
        public static final int dream_timeout_values=0x7f0a0055;
        /**  Type of EAP method when EAP SIM, AKA, AKA' are not supported 
         */
        public static final int eap_method_without_sim_auth=0x7f0a0060;
        public static final int emergency_siwtch_entries=0x7f0a008d;
        public static final int emergency_siwtch_values=0x7f0a008e;
        /** Add, DaiHongyi, JWBLB-54, emergency assistant, 20150520, Start
         */
        public static final int emergency_timeout_entries=0x7f0a008b;
        public static final int emergency_timeout_values=0x7f0a008c;
        /**  Titles for OpenGL traces preference. [CHAR LIMIT=35] 
         */
        public static final int enable_opengl_traces_entries=0x7f0a002d;
        /**  Values for OpenGL traces preference. 
         */
        public static final int enable_opengl_traces_values=0x7f0a0079;
        public static final int entries_font_size=0x7f0a0006;
        /**  M: kui.li , modify font-size array, root caurse Huge style some app showing not beauty, 2016-03-21, start { 

    <string-array name="entryvalues_font_size" translatable="false">
        <item>0.85</item>
        <item>1.0</item>
        <item>1.15</item>
        <item>1.30</item>
    </string-array>
	
         */
        public static final int entryvalues_font_size=0x7f0a0057;
        public static final int ext_mvno_type_entries=0x7f0a0051;
        public static final int ext_mvno_type_values=0x7f0a0052;
        /**  Summaries for HDCP checking preference. [CHAR LIMIT=100]
         */
        public static final int hdcp_checking_summaries=0x7f0a0028;
        /**  Titles for HDCP checking preference. [CHAR LIMIT=35] 
         */
        public static final int hdcp_checking_titles=0x7f0a0027;
        /**  Values for HDCP checking preference. 
         */
        public static final int hdcp_checking_values=0x7f0a0074;
        public static final int hdmi_audio_output_entries=0x7f0a004a;
        public static final int hdmi_audio_output_entry_values=0x7f0a004b;
        /**  MTK WFD Settings end 
 MTK HDMI Settings start[SKIP COMMENT] 
         */
        public static final int hdmi_video_resolution_entries=0x7f0a0046;
        public static final int hdmi_video_resolution_entry_values=0x7f0a0047;
        public static final int hdmi_video_scale_entries=0x7f0a0048;
        public static final int hdmi_video_scale_entry_values=0x7f0a0049;
        public static final int input_method_selector_titles=0x7f0a008f;
        public static final int input_method_selector_values=0x7f0a0090;
        /**  Security settings.  The delay after screen is turned off until device locks.
         These are shown in a list dialog. 
         */
        public static final int lock_after_timeout_entries=0x7f0a0005;
        /**  Do not translate. 
         */
        public static final int lock_after_timeout_values=0x7f0a0056;
        /**  Titles for the list of long press timeout options. 
         */
        public static final int long_press_timeout_selector_titles=0x7f0a001f;
        /**  Values for the list of long press timeout options. 
         */
        public static final int long_press_timeout_selector_values=0x7f0a006a;
        /**  MVNO Info used in APN editor 
         */
        public static final int mvno_type_entries=0x7f0a001a;
        public static final int mvno_type_values=0x7f0a0068;
        /**  Possible values for user theme in Display Settings.
         Do not translate. 
         */
        public static final int night_mode_entries=0x7f0a0088;
        /**  These values should match up with the MODE_NIGHT constants in UiModeManager.
         Do not translate. 
         */
        public static final int night_mode_values=0x7f0a0089;
        /**  Titles for overlay display devices preference. [CHAR LIMIT=35] 
         */
        public static final int overlay_display_devices_entries=0x7f0a002c;
        /**  Values for overlay display devices preference. 
         */
        public static final int overlay_display_devices_values=0x7f0a0078;
        public static final int pin_security=0x7f0a003f;
        /**  Process stats memory use details: labels for memory states 
         */
        public static final int proc_stats_memory_states=0x7f0a0037;
        /**  Process stats memory use details: labels for process 
         */
        public static final int proc_stats_process_states=0x7f0a0038;
        public static final int ram_colors=0x7f0a0036;
        /**  [CHAR LIMIT=40] Labels for memory states 
         */
        public static final int ram_states=0x7f0a0035;
        /**  Display settings.  The delay in inactivity before the screen is turned off. These are shown in a list dialog. 
         */
        public static final int screen_timeout_entries=0x7f0a0003;
        /**  Do not translate. 
         */
        public static final int screen_timeout_values=0x7f0a0054;
        /**  Values for premium SMS permission selector [CHAR LIMIT=30] 
         */
        public static final int security_settings_premium_sms_values=0x7f0a0034;
        /**  Titles for logd limit size lowram selection preference. [CHAR LIMIT=14] 
         */
        public static final int select_logd_size_lowram_titles=0x7f0a0025;
        /**  Summaries for logd limit size selection preference. [CHAR LIMIT=30]
         */
        public static final int select_logd_size_summaries=0x7f0a0026;
        /**  Titles for logd limit size selection preference. [CHAR LIMIT=14] 
         */
        public static final int select_logd_size_titles=0x7f0a0024;
        /**  Values for logd limit size selection preference. 
         */
        public static final int select_logd_size_values=0x7f0a0073;
        /**  Titles for non-rectangular clipping preference. [CHAR LIMIT=35] 
         */
        public static final int show_non_rect_clip_entries=0x7f0a002e;
        /**  Values for non-rectangular clipping preference. 
         */
        public static final int show_non_rect_clip_values=0x7f0a007a;
        public static final int sim_slot=0x7f0a0040;
        /**  Display color space adjustment modes for developers 
         */
        public static final int simulate_color_space_entries=0x7f0a0083;
        /**  Values for display color space adjustment modes for developers 
         */
        public static final int simulate_color_space_values=0x7f0a0084;
        /**  MTK HDMI Settings end[SKIP COMMENT] 
 MTK Tethering Settings start[SKIP COMMENT] 
         */
        public static final int tethered_ipv6_entries=0x7f0a004c;
        public static final int tethered_ipv6_values=0x7f0a004d;
        /**  The time zone picker screen has two levels.  The first level allows the user to choose a region. 
         */
        public static final int timezone_filters=0x7f0a0002;
        /**  Titles for frame time tracking preference. [CHAR LIMIT=35] 
         */
        public static final int track_frame_time_entries=0x7f0a002f;
        /**  Values for frame time tracking preference. 
         */
        public static final int track_frame_time_values=0x7f0a007b;
        /**  Titles for transition animation scale preference. [CHAR LIMIT=35] 
         */
        public static final int transition_animation_scale_entries=0x7f0a002a;
        /**  Values for transition animation scale preference. 
         */
        public static final int transition_animation_scale_values=0x7f0a0076;
        public static final int tts_demo_string_langs=0x7f0a005b;
        /**  Do not translate. 
         */
        public static final int tts_demo_strings=0x7f0a005a;
        /**  Default pitch choices 
         */
        public static final int tts_pitch_entries=0x7f0a0008;
        /**  Do not translate. 
         */
        public static final int tts_pitch_values=0x7f0a0059;
        /**  M : end } 
 TTS settings 
 Default speech rate choices 
         */
        public static final int tts_rate_entries=0x7f0a0007;
        /**  Do not translate. 
         */
        public static final int tts_rate_values=0x7f0a0058;
        /**  Display options for UsageStats class 
         */
        public static final int usage_stats_display_order_types=0x7f0a0011;
        /**  USB configuration names for Developer Settings.
         This can be overridden by devices with additional USB configurations. 
         */
        public static final int usb_configuration_titles=0x7f0a0086;
        /**  USB configuration values for Developer Settings.
         These are lists of USB functions passed to the USB Manager to change USB configuraton.
         This can be overridden by devices with additional USB configurations.
         Do not translate. 
         */
        public static final int usb_configuration_values=0x7f0a0087;
        public static final int usb_tether_type_entries=0x7f0a004e;
        public static final int usb_tether_type_values=0x7f0a004f;
        /**  User content ratings for restricted users [CHAR LIMIT=30] 
         */
        public static final int user_content_ratings_entries=0x7f0a007f;
        /**  Values for user content ratings for restricted users 
         */
        public static final int user_content_ratings_values=0x7f0a0080;
        /**  Status for a VPN network. [CHAR LIMIT=100] 
         */
        public static final int vpn_states=0x7f0a0033;
        /**  Short names for each VPN type, not really translatable. [CHAR LIMIT=20] 
         */
        public static final int vpn_types=0x7f0a007e;
        /**  Longer descriptions for each VPN type. [CHAR LIMIT=100] 
         */
        public static final int vpn_types_long=0x7f0a0032;
        public static final int wapi_security=0x7f0a003e;
        /**  MTK WIFI Settings end 
 MTK WFD Settings start 
         */
        public static final int wfd_resolution_entry=0x7f0a0045;
        public static final int wifi_ap_band_config_2G_only=0x7f0a0062;
        /**  Wi-Fi AP band settings.  Either 2.4GHz or 5GHz. 
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_ap_band_config_full=0x7f0a0061;
        public static final int wifi_ap_max_connection_entries=0x7f0a0044;
        /**  Wi-Fi AP settings.  The type of security a Wi-Fi AP supports. 
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_ap_security=0x7f0a005e;
        public static final int wifi_ap_wps_mode_entries=0x7f0a0043;
        public static final int wifi_calling_mode_choices=0x7f0a0053;
        public static final int wifi_calling_mode_values=0x7f0a0091;
        /**  EAP method 
         */
        public static final int wifi_eap_entries=0x7f0a0012;
        /**  Wi-Fi settings.  The type of EAP method a Wi-Fi network has. 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
         */
        public static final int wifi_eap_method=0x7f0a005f;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi frequency band. 
         */
        public static final int wifi_frequency_band_entries=0x7f0a0010;
        /**  Match with wifi_frequency_band_entries and the values of the settings in WifiManager. 
 Do not translate. 
         */
        public static final int wifi_frequency_band_values=0x7f0a0064;
        public static final int wifi_hotspot_disable_policy_entries=0x7f0a0041;
        public static final int wifi_hotspot_disable_policy_values=0x7f0a0042;
        /**  Wi-Fi IP settings. 
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_ip_settings=0x7f0a0015;
        /**  Match this with the order of WifiP2pDevice.Status 
 Wi-Fi p2p settings device status message 
         */
        public static final int wifi_p2p_status=0x7f0a000a;
        /**  Wi-Fi WPS setup for p2p connections.  
 Note that adding/removing/moving the items will need wifi settings code change. 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
 no translation found for wifi_ap_band_config_full:0 (1085243288162893079) 
 no translation found for wifi_ap_band_config_full:1 (5531376834915607202) 
 no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015) 
         */
        public static final int wifi_p2p_wps_setup=0x7f0a0009;
        /**  Phase 2 options for PEAP 
         */
        public static final int wifi_peap_phase2_entries=0x7f0a0013;
        /**  Phase 2 options for rest of EAP methods 
         */
        public static final int wifi_phase2_entries=0x7f0a0014;
        /**  Wi-Fi proxy settings. 
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_proxy_settings=0x7f0a0016;
        /**  Wi-Fi security choices used when manually added a Wi-Fi network 
         */
        public static final int wifi_security=0x7f0a005c;
        /**  Wi-Fi security types for New User Dialog. EAP is not configurable. 
         */
        public static final int wifi_security_no_eap=0x7f0a005d;
        /**  MTK Feature auto time list end 
 MTK WIFI Settings start 
         */
        public static final int wifi_security_wfa=0x7f0a003b;
        /**  Wi-Fi settings. The signal strength a Wi-Fi network has. 
         */
        public static final int wifi_signal=0x7f0a000c;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi sleep policy. 
         */
        public static final int wifi_sleep_policy_entries=0x7f0a000d;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi sleep policy. Used when
         the device is Wi-Fi-only. [CHAR LIMIT=30] 
         */
        public static final int wifi_sleep_policy_entries_wifi_only=0x7f0a000e;
        /**  Do not translate. 
         */
        public static final int wifi_sleep_policy_values=0x7f0a0063;
        /**  Wi-Fi settings. The status messages when the network is unknown. 
 Wi-Fi settings. The status messages when the network is unknown. 
         */
        public static final int wifi_status=0x7f0a0000;
        /**  Wi-Fi settings. The status messages when the network is known. 
 Wi-Fi settings. The status messages when the network is known. 
         */
        public static final int wifi_status_with_ssid=0x7f0a0001;
        /**  Titles for window animation scale preference. [CHAR LIMIT=35] 
         */
        public static final int window_animation_scale_entries=0x7f0a0029;
        /**  Values for window animation scale preference. 
         */
        public static final int window_animation_scale_values=0x7f0a0075;
        public static final int wpa_security=0x7f0a003c;
        public static final int wpa_security_wfa=0x7f0a003d;
    }
    public static final class attr {
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int Progress=0x7f010051;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ProgressColor=0x7f010052;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int apnPreferenceStyle=0x7f01002e;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int appsProgress=0x7f010044;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int appsProgressColor=0x7f010038;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int aspectRatio=0x7f010018;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int audioProgress=0x7f010048;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int audioProgressColor=0x7f01003c;
        /**  Color of predicted future use part of chart. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int barPredictionColor=0x7f01001b;
        /**  Primary color of chart. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int barPrimaryColor=0x7f01001a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int borderDrawable=0x7f01002a;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheProgress=0x7f01004a;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheProgressColor=0x7f01003e;
        /**  Minimum height of the chart itself. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
         */
        public static final int chartMinHeight=0x7f01001c;
        /**  Confirm device credentials screen 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int confirmDeviceCredentialsSideMargin=0x7f010034;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int confirmDeviceCredentialsTopMargin=0x7f010035;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cricleColor=0x7f010036;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cricleProgressColor=0x7f010037;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cricleWidth=0x7f01003f;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int currentProgress=0x7f010043;
        /**  Background color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int emptyColor=0x7f01001d;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColor=0x7f01002c;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColorSecondary=0x7f01002d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fingerprint_layout_theme=0x7f010053;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
         */
        public static final int fingerprint_progress_bar_size=0x7f010054;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
         */
        public static final int fingerprint_ring_radius=0x7f010055;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int followAxis=0x7f010022;
        /**  Text color, typeface, size, and style of header. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int headerAppearance=0x7f010019;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ic_menu_add=0x7f010056;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ic_menu_moreoverflow=0x7f010057;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ic_wps=0x7f010058;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x7f010017;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageProgress=0x7f010046;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageProgressColor=0x7f01003a;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keywords=0x7f01002f;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelColor=0x7f010026;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelSize=0x7f010024;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int labelTemplate=0x7f010025;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxProgress=0x7f010042;
        /**  Minimum tick width for each slice in the bar chart. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minTickWidth=0x7f01001e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int neighborMargin=0x7f010023;
        /**  optimal width of the chart 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int optimalWidth=0x7f01001f;
        /**  how to weight extra space beyond optimal width 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int optimalWidthWeight=0x7f010020;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int otherProgress=0x7f010049;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int otherProgressColor=0x7f01003d;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int preferenceBackgroundColor=0x7f010033;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int primaryDrawable=0x7f010028;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int safeRegion=0x7f010027;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int secondaryDrawable=0x7f010029;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int setup_divider_color=0x7f010059;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int setup_wizard_navbar_bg_color=0x7f010013;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int setup_wizard_navbar_text_color=0x7f010014;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int setup_wizard_navbar_theme=0x7f010015;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
         */
        public static final int side_margin=0x7f01005a;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_encrypted=0x7f010016;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int strokeColor=0x7f01002b;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>STROKE</code></td><td>0</td><td></td></tr>
<tr><td><code>FILL</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int style=0x7f01004c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int summaryLeft=0x7f01004d;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suwAspectRatio=0x7f010009;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int suwBackground=0x7f01000b;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int suwBackgroundTile=0x7f01000c;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int suwCardBackground=0x7f010001;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
         */
        public static final int suwDecorPaddingTop=0x7f01000e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suwHeader=0x7f01000a;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suwHeaderText=0x7f01000d;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int suwIllustration=0x7f01000f;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
         */
        public static final int suwIllustrationAspectRatio=0x7f010010;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int suwIllustrationHorizontalTile=0x7f010011;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int suwIllustrationImage=0x7f010012;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suwLayoutTheme=0x7f010000;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suwNavBarBackButton=0x7f010002;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suwNavBarBackgroundColor=0x7f010003;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int suwNavBarButtonBackground=0x7f010004;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suwNavBarMoreButton=0x7f010005;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suwNavBarNextButton=0x7f010006;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suwNavBarTextColor=0x7f010007;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suwNavBarTheme=0x7f010008;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int sweepDrawable=0x7f010021;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchBarMarginEnd=0x7f010032;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchBarMarginStart=0x7f010031;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchBarTheme=0x7f010030;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int systemProgress=0x7f010045;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int systemProgressColor=0x7f010039;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColor=0x7f010040;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColors=0x7f010050;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textIsDisplayable=0x7f01004b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textSize=0x7f010041;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int valueLeft=0x7f01004e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int valueRight=0x7f01004f;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int videoProgress=0x7f010047;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int videoProgressColor=0x7f01003b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wifi_signal=0x7f01005c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wifi_signal_color=0x7f01005b;
    }
    public static final class bool {
        /**  Whether the bluetooth activation confirmation dialogs should be auto dismissed.
         Can be overridden for specific product builds. 
         */
        public static final int auto_confirm_bluetooth_activation_dialog=0x7f100005;
        /**  Display additional System Update menu if true 
         */
        public static final int config_additional_system_update_setting_enable=0x7f100004;
        /** add BUG_ID:DWLEBM-45 lihuachun 20160311(start)
         */
        public static final int config_allow_develop_setting_enabled=0x7f10000f;
        /**  Carrier_enabled editable 
 Carrier_enabled editable 
 Carrier_enabled editable 
 Carrier_enabled editable 
 Carrier_enabled editable 
 Carrier_enabled editable 
         */
        public static final int config_allow_edit_carrier_enabled=0x7f100010;
        /** A:DELSLMY-686 guoshuai 20160308(start)
         */
        public static final int config_battery_percentage_support=0x7f100013;
        /** add BUG_ID:DELSLMY-420 dushuaihui 20160303(end)
         */
        public static final int config_emergency_assistant=0x7f100012;
        /**  If false, MIN is displayed. If true, MSID is displayed. 
         */
        public static final int config_msid_enable=0x7f10000e;
        /**  A:DELSLMY-30 shubin 20150314(end)
 A:DELSLMY-926 liuhuaihzi 20150315(start)
         */
        public static final int config_remove_sensors_only=0x7f10000a;
        /**  A:DELSLMY-926 liuhuaihzi 20150315(end)
 add DELSLMY-780 yejianming 20160315 (start)
         */
        public static final int config_remove_time_gps=0x7f10000b;
        /**  Whether to show a preference item for mobile plan 
 M: change to false as disable mobile plan 
         */
        public static final int config_show_mobile_plan=0x7f100007;
        /**  Whether to show a preference item for regulatory information in About phone 
         */
        public static final int config_show_regulatory_info=0x7f100006;
        /**  CryptKeeper allow rotation 
         */
        public static final int crypt_keeper_allow_rotation=0x7f10000d;
        /** A:DELSLMY-686 guoshuai 20160308(end)
add BUG_ID:DWLEBM-48 dushuaihui 20160314(start)
         */
        public static final int customized_sim_preference_num=0x7f100014;
        /** A: DELSLM-196 liuhuaizhi 20160303(end)
 A:DELSLMY-30 shubin 20150314(start)
         */
        public static final int cystorage_config=0x7f100009;
        /**  add DELSLMY-780 yejianming 20160315 (end)
A: liuhuaizhi 20160415(start)
 Default true is dip 
         */
        public static final int def_sim_lock_info=0x7f10000c;
        /** add BUG_ID:DELSLMY-420 dushuaihui 20160303(start)
         */
        public static final int disable_speak_password=0x7f100011;
        /**  Whether or not the dock settings are to be displayed for this device when docked 
         */
        public static final int has_dock_settings=0x7f100001;
        /**  Whether the DEPRECATED power control widget is enabled for this
         device. Should be overridden for specific product builds. 
         */
        public static final int has_powercontrol_widget=0x7f100003;
        /**  Whether there is a silent mode checkbox  
 Whether there is a silent mode checkbox  
         */
        public static final int has_silent_mode=0x7f100002;
        /** add BUG_ID:DWLEBM-48 dushuaihui 20160314(end))
add by luoran 20160322(start)
         */
        public static final int rellekwallpaper=0x7f100015;
        /** A: DELSLM-196 liuhuaizhi 20160303(start)
         */
        public static final int remove_pointer=0x7f100008;
        /**  Whether to use tablet layout 
 Whether to use tablet layout 
         */
        public static final int suwUseTabletLayout=0x7f100000;
    }
    public static final class color {
        public static final int black=0x7f0e0011;
        public static final int blue=0x7f0e0013;
        public static final int card_background=0x7f0e003f;
        public static final int confirm_device_credential_dark_background=0x7f0e0045;
        public static final int crypt_keeper_clock_am_pm=0x7f0e0021;
        public static final int crypt_keeper_clock_background=0x7f0e001f;
        public static final int crypt_keeper_clock_foreground=0x7f0e0020;
        public static final int crypt_keeper_password_background=0x7f0e0022;
        public static final int divider_color=0x7f0e0023;
        public static final int fab_ripple=0x7f0e0046;
        /**  12% white 
         */
        public static final int fab_shape=0x7f0e0047;
        public static final int fingerprint_indicator_background_activated=0x7f0e0052;
        public static final int fingerprint_indicator_background_resting=0x7f0e003b;
        public static final int fingerprint_message_color=0x7f0e0038;
        public static final int fingerprint_progress_ring=0x7f0e0039;
        public static final int fingerprint_progress_ring_bg=0x7f0e003a;
        public static final int fingerprint_title_area_bg=0x7f0e0036;
        public static final int fingerprint_title_color=0x7f0e0037;
        /**  Accent color that matches the settings launcher icon 
         */
        public static final int icon_accent=0x7f0e0051;
        /**  deep orange 600 
         */
        public static final int lock_pattern_background=0x7f0e0030;
        public static final int lock_pattern_view_error_color=0x7f0e0032;
        public static final int lock_pattern_view_regular_color=0x7f0e0031;
        public static final int lock_pattern_view_regular_color_dark=0x7f0e0033;
        public static final int lock_pattern_view_success_color=0x7f0e0053;
        public static final int material_empty_color_light=0x7f0e0014;
        public static final int memory_apps_usage=0x7f0e0017;
        public static final int memory_avail=0x7f0e0016;
        public static final int memory_avg_use=0x7f0e004d;
        public static final int memory_cache=0x7f0e001b;
        public static final int memory_critical=0x7f0e004c;
        public static final int memory_dcim=0x7f0e0019;
        public static final int memory_downloads=0x7f0e0018;
        public static final int memory_low=0x7f0e004b;
        public static final int memory_max_use=0x7f0e004e;
        public static final int memory_misc=0x7f0e001c;
        public static final int memory_moderate=0x7f0e004a;
        public static final int memory_music=0x7f0e001a;
        public static final int memory_normal=0x7f0e0049;
        public static final int memory_remaining=0x7f0e004f;
        public static final int memory_used=0x7f0e0015;
        public static final int memory_user_dark=0x7f0e001e;
        public static final int memory_user_light=0x7f0e001d;
        /**  ClearMotion start 
         */
        public static final int mira_blue_divide=0x7f0e0010;
        public static final int red=0x7f0e0012;
        public static final int running_processes_apps_ram=0x7f0e003d;
        public static final int running_processes_free_ram=0x7f0e003e;
        public static final int running_processes_system_ram=0x7f0e003c;
        public static final int setup_divider_color_dark=0x7f0e0025;
        public static final int setup_divider_color_light=0x7f0e0026;
        public static final int setup_lock_pattern_view_error_color_dark=0x7f0e002b;
        public static final int setup_lock_pattern_view_error_color_light=0x7f0e002c;
        public static final int setup_lock_pattern_view_regular_color_dark=0x7f0e0027;
        public static final int setup_lock_pattern_view_regular_color_light=0x7f0e0028;
        public static final int setup_lock_pattern_view_success_color_dark=0x7f0e0029;
        public static final int setup_lock_pattern_view_success_color_light=0x7f0e002a;
        public static final int setup_wizard_navbar_bg_dark=0x7f0e000c;
        public static final int setup_wizard_navbar_bg_light=0x7f0e000d;
        public static final int setup_wizard_navbar_text_dark=0x7f0e000e;
        public static final int setup_wizard_navbar_text_light=0x7f0e000f;
        public static final int setup_wizard_wifi_color_dark=0x7f0e002d;
        public static final int setup_wizard_wifi_color_light=0x7f0e002e;
        public static final int sim_noitification=0x7f0e0043;
        public static final int storage_wizard_button=0x7f0e0054;
        public static final int storage_wizard_button_red=0x7f0e0055;
        /**  General colors 
         */
        public static final int suw_color_accent_dark=0x7f0e0000;
        public static final int suw_color_accent_light=0x7f0e0001;
        public static final int suw_color_secondary_dark=0x7f0e0002;
        public static final int suw_color_secondary_light=0x7f0e0003;
        public static final int suw_link_color_dark=0x7f0e0004;
        public static final int suw_link_color_light=0x7f0e0005;
        /**  Navigation bar colors 
         */
        public static final int suw_navbar_bg_dark=0x7f0e0008;
        public static final int suw_navbar_bg_light=0x7f0e0009;
        public static final int suw_navbar_text_dark=0x7f0e000a;
        public static final int suw_navbar_text_light=0x7f0e000b;
        public static final int suw_progress_bar_color_dark=0x7f0e0006;
        public static final int suw_progress_bar_color_light=0x7f0e0007;
        public static final int switch_accent_color=0x7f0e0041;
        public static final int switchbar_background_color=0x7f0e0040;
        public static final int system_warning_color=0x7f0e002f;
        public static final int title_color=0x7f0e0024;
        public static final int unlock_pattern_view_error_color=0x7f0e0035;
        public static final int unlock_pattern_view_regular_color=0x7f0e0034;
        public static final int unlock_pattern_view_success_color=0x7f0e0056;
        public static final int voice_interaction_highlight=0x7f0e0048;
        public static final int warning=0x7f0e0044;
        public static final int wifi_divider=0x7f0e0042;
        public static final int zen_rule_name_warning=0x7f0e0050;
    }
    public static final class dimen {
        public static final int action_bar_switch_padding=0x7f0c0034;
        /**  ActionBar contentInsetStart 
 ActionBar contentInsetStart 
 ActionBar contentInsetStart 
 ActionBar contentInsetStart 
         */
        public static final int actionbar_contentInsetStart=0x7f0c005d;
        /**  ActionBar height 
 ActionBar height 
 ActionBar height 
         */
        public static final int actionbar_size=0x7f0c005c;
        public static final int actionbar_subsettings_contentInsetStart=0x7f0c005e;
        public static final int app_icon_size=0x7f0c0036;
        /**  The y translation to apply at the start in appear animations. 
         */
        public static final int appear_y_translation_start=0x7f0c0000;
        public static final int appwidget_height=0x7f0c00bb;
        public static final int appwidget_min_height=0x7f0c0050;
        public static final int appwidget_min_width=0x7f0c004f;
        public static final int appwidget_preview_height=0x7f0c00bd;
        public static final int appwidget_preview_width=0x7f0c00bc;
        public static final int appwidget_width=0x7f0c00ba;
        public static final int badge_size=0x7f0c00b7;
        public static final int battery_history_chart_height=0x7f0c003f;
        public static final int bind_app_widget_dialog_checkbox_bottom_padding=0x7f0c003d;
        /**  Bluetooth Preferences 
         */
        public static final int bluetooth_dialog_padding=0x7f0c0096;
        public static final int bluetooth_pairing_padding=0x7f0c0097;
        /**  Default text size for caption preview samples. Uses dp rather than sp because captions are not scaled. 
         */
        public static final int caption_preview_text_size=0x7f0c005b;
        public static final int captioning_preview_height=0x7f0c0054;
        public static final int checkbox_layout_padding=0x7f0c0095;
        /**  CheckBoxPreference 
         */
        public static final int checkbox_widget_min_width=0x7f0c0094;
        public static final int circle_avatar_size=0x7f0c0052;
        /**  Color picker 
         */
        public static final int color_swatch_size=0x7f0c009a;
        public static final int color_swatch_stroke_width=0x7f0c009b;
        public static final int confirm_credentials_security_method_margin=0x7f0c00ac;
        public static final int content_margin_left=0x7f0c003a;
        public static final int crypt_clock_size=0x7f0c0043;
        /**  CryptKeeper edit text ime icon padding 
         */
        public static final int crypt_keeper_edit_text_ime_padding=0x7f0c0086;
        /**  CryptKeeper emergency call button dimensions 
         */
        public static final int crypt_keeper_emergency_call_space_above=0x7f0c0085;
        /**  CryptKeeper top margin for password/pin screen 
 CryptKeeper top margin for password/pin screen 
 CryptKeeper top margin for password/pin screen 
         */
        public static final int crypt_keeper_password_top_margin=0x7f0c0082;
        /**  CryptKeeper password/pin width 
 CryptKeeper password/pin width 
         */
        public static final int crypt_keeper_password_width=0x7f0c0084;
        /**  CryptKeeper pattern margin on phone 
         */
        public static final int crypt_keeper_pattern_margin=0x7f0c0087;
        /**  CryptKeeper separation between status and pattern 
         */
        public static final int crypt_keeper_pattern_separator=0x7f0c00c0;
        /**  CryptKeeper pattern size for tablet 
         */
        public static final int crypt_keeper_pattern_size=0x7f0c0088;
        /**  CryptKeeper top margin for pattern screen 
 CryptKeeper top margin for pattern screen 
 CryptKeeper top margin for pattern screen 
         */
        public static final int crypt_keeper_pattern_top_margin=0x7f0c0083;
        /**  add BUG_id = DELSLMY-925 yb 20160315 
         */
        public static final int dashboard_category_content=0x7f0c0068;
        /**  Dashboard category panel elevation 
         */
        public static final int dashboard_category_elevation=0x7f0c0067;
        public static final int dashboard_category_padding_end=0x7f0c0066;
        /**  Dashboard category padding start / end 
 Dashboard category padding start / end 
 Dashboard category padding start / end 
 Dashboard category padding start / end 
         */
        public static final int dashboard_category_padding_start=0x7f0c0065;
        /**  Dashboard category title layout height 
         */
        public static final int dashboard_category_title_height=0x7f0c0069;
        /**  Dashboard category title margin start 
 Dashboard category title margin start 
 Dashboard category title margin start 
         */
        public static final int dashboard_category_title_margin_start=0x7f0c006a;
        /**  Dashboard margins between each tiles within the layout 
 Dashboard margins between each tiles within the layout 
 Dashboard margins between each tiles within the layout 
 Dashboard margins between each tiles within the layout 
         */
        public static final int dashboard_cell_gap_x=0x7f0c005f;
        public static final int dashboard_cell_gap_y=0x7f0c0060;
        public static final int dashboard_padding_bottom=0x7f0c0064;
        public static final int dashboard_padding_end=0x7f0c0062;
        /**  Dashboard padding in its container 
 Dashboard padding in its container 
 Dashboard padding in its container 
         */
        public static final int dashboard_padding_start=0x7f0c0061;
        public static final int dashboard_padding_top=0x7f0c0063;
        public static final int dashboard_tile_image_margin_end=0x7f0c006e;
        /**  Dashboard tile image margin start / end 
 Dashboard tile image margin start / end 
 Dashboard tile image padding start / end 
         */
        public static final int dashboard_tile_image_margin_start=0x7f0c006d;
        /**  Dashboard image tile size 
         */
        public static final int dashboard_tile_image_size=0x7f0c006c;
        /**  Dashboard tile minimum height 
 Dashboard tile minimum height 
         */
        public static final int dashboard_tile_minimum_height=0x7f0c006b;
        public static final int data_usage_chart_height=0x7f0c0040;
        public static final int data_usage_chart_optimalWidth=0x7f0c0041;
        public static final int datetime_margin_bottom=0x7f0c00b9;
        public static final int datetime_margin_top=0x7f0c00b8;
        public static final int delete_profile_dialog_padding_left_right=0x7f0c00b2;
        /**  Delete managed profile dialog 
         */
        public static final int delete_profile_dialog_padding_top=0x7f0c00b1;
        public static final int description_margin_sides=0x7f0c003c;
        public static final int description_margin_top=0x7f0c003b;
        public static final int device_memory_color_width=0x7f0c0035;
        public static final int device_memory_usage_button_height=0x7f0c0033;
        public static final int device_memory_usage_button_width=0x7f0c0032;
        /**  The translation for disappearing security views after having solved them. 
         */
        public static final int disappear_y_translation=0x7f0c0001;
        public static final int divider_height=0x7f0c004a;
        public static final int divider_margin_bottom=0x7f0c004c;
        public static final int divider_margin_top=0x7f0c004b;
        public static final int fab_elevation=0x7f0c00af;
        public static final int fab_margin=0x7f0c00ae;
        public static final int fab_press_translation_z=0x7f0c00b0;
        public static final int fab_size=0x7f0c00ad;
        public static final int fingerprint_animation_size=0x7f0c00a6;
        public static final int fingerprint_decor_padding_top=0x7f0c00a3;
        public static final int fingerprint_dot_radius=0x7f0c009f;
        public static final int fingerprint_enrolling_content_margin_top=0x7f0c00a8;
        public static final int fingerprint_error_text_appear_distance=0x7f0c00a4;
        public static final int fingerprint_error_text_disappear_distance=0x7f0c00a5;
        public static final int fingerprint_find_sensor_graphic_size=0x7f0c00a1;
        /**  Fingerprint 
         */
        public static final int fingerprint_illustration_aspect_ratio=0x7f0c00a2;
        public static final int fingerprint_in_app_indicator_size=0x7f0c00a9;
        public static final int fingerprint_progress_bar_size=0x7f0c00a7;
        public static final int fingerprint_pulse_radius=0x7f0c00a0;
        /**  Fingerprint 
         */
        public static final int fingerprint_ring_radius=0x7f0c009d;
        public static final int fingerprint_ring_thickness=0x7f0c009e;
        /**   Size of icons in the top-level of settings  
         */
        public static final int header_icon_width=0x7f0c004e;
        public static final int installed_app_details_bullet_offset=0x7f0c003e;
        public static final int keyguard_appwidget_picker_margin_left=0x7f0c00be;
        public static final int keyguard_appwidget_picker_margin_right=0x7f0c00bf;
        public static final int keyguard_appwidget_picker_width=0x7f0c00c1;
        public static final int mdm_app_info_height=0x7f0c00b3;
        public static final int mdm_app_info_padding_top_bottom=0x7f0c00b4;
        public static final int mdm_app_name_padding_left=0x7f0c00b5;
        public static final int notification_app_icon_badge_margin=0x7f0c0058;
        public static final int notification_app_icon_badge_size=0x7f0c0057;
        public static final int notification_app_icon_size=0x7f0c0056;
        public static final int pager_tabs_padding=0x7f0c0051;
        /**  RedactionInterstitial 
 RedactionInterstitial 
         */
        public static final int redaction_vertical_margins=0x7f0c009c;
        public static final int screen_margin_bottom=0x7f0c0039;
        public static final int screen_margin_sides=0x7f0c0037;
        public static final int screen_margin_top=0x7f0c0038;
        /**  Screen pinning textview paddings 
         */
        public static final int screen_pinning_textview_padding=0x7f0c0089;
        /**  Search Panel elevation 
         */
        public static final int search_panel_elevation=0x7f0c0073;
        public static final int search_result_item_image_margin_end=0x7f0c0077;
        /**  Result item image margin start / end 
 Result item image margin start / end 
         */
        public static final int search_result_item_image_margin_start=0x7f0c0076;
        /**  Result item image size 
         */
        public static final int search_result_item_image_size=0x7f0c0075;
        public static final int search_suggestion_item_image_margin_end=0x7f0c007a;
        /**  Suggestion item image margin start / end 
         */
        public static final int search_suggestion_item_image_margin_start=0x7f0c0079;
        /**  Suggestion item image size 
         */
        public static final int search_suggestion_item_image_size=0x7f0c0078;
        /**  Search title (recent / results) padding start 
 Search title (recent / results) padding start 
         */
        public static final int search_title_padding_start=0x7f0c0074;
        public static final int settings_side_margin=0x7f0c0055;
        public static final int setup_add_network_item_height=0x7f0c0044;
        public static final int setup_fingerprint_progress_bar_size=0x7f0c00ab;
        public static final int setup_fingerprint_ring_radius=0x7f0c00aa;
        /**  Size of padding to give in the wifi list when there is no icon 
         */
        public static final int setup_list_no_icon_padding=0x7f0c0045;
        public static final int setup_preference_icon_frame_margin_start=0x7f0c0046;
        public static final int setup_preference_icon_frame_padding_end=0x7f0c0047;
        public static final int setup_preference_icon_frame_width=0x7f0c0048;
        public static final int setup_wizard_margin_top=0x7f0c0049;
        public static final int setup_wizard_navbar_button_drawable_padding=0x7f0c002c;
        public static final int setup_wizard_navbar_button_padding_sides=0x7f0c002d;
        public static final int setup_wizard_navbar_height=0x7f0c002e;
        public static final int setup_wizard_navbar_ic_intrinsic_size=0x7f0c002f;
        public static final int setup_wizard_navbar_padding_sides=0x7f0c0030;
        public static final int setup_wizard_navbar_text_size=0x7f0c0031;
        public static final int shortcut_size=0x7f0c00b6;
        public static final int sim_content_padding=0x7f0c008e;
        /**  SIM Dialog Margin bottom 
         */
        public static final int sim_dialog_margin_bottom=0x7f0c008b;
        /**  SIM Dialog Margin top 
         */
        public static final int sim_dialog_margin_top=0x7f0c008a;
        /**  SIM Dialog padding 
         */
        public static final int sim_dialog_padding=0x7f0c008c;
        public static final int sim_label_padding=0x7f0c008d;
        /**  Card layout (for tablets) 
         */
        public static final int suw_card_corner_radius=0x7f0c0014;
        public static final int suw_card_elevation=0x7f0c0015;
        public static final int suw_card_land_header_text_margin_top=0x7f0c0016;
        public static final int suw_card_port_margin_sides=0x7f0c0017;
        public static final int suw_card_title_padding_bottom=0x7f0c001b;
        /**  Card layout (for tablets) 
         */
        public static final int suw_card_title_padding_end=0x7f0c0018;
        public static final int suw_card_title_padding_start=0x7f0c0019;
        public static final int suw_card_title_padding_top=0x7f0c001a;
        /**  Content styles 
         */
        public static final int suw_check_box_line_spacing_extra=0x7f0c0003;
        public static final int suw_check_box_margin_bottom=0x7f0c0004;
        public static final int suw_check_box_margin_start=0x7f0c0005;
        public static final int suw_check_box_margin_top=0x7f0c0006;
        public static final int suw_check_box_padding_start=0x7f0c0007;
        public static final int suw_check_box_text_size=0x7f0c0008;
        public static final int suw_content_frame_padding_bottom=0x7f0c000a;
        public static final int suw_content_frame_padding_top=0x7f0c0009;
        /**  Decor view (illustration or the header without illustration) 
 Decor view (illustration or the header without illustration) 
 Decor view (illustration or the header without illustration) 
 Decor view (illustration or the header without illustration) 
         */
        public static final int suw_decor_padding_top=0x7f0c001d;
        public static final int suw_description_line_spacing_extra=0x7f0c000d;
        public static final int suw_description_margin_bottom=0x7f0c000c;
        public static final int suw_description_margin_top=0x7f0c000b;
        public static final int suw_description_text_size=0x7f0c000e;
        /**  This is the extra spacing required to make the leading exactly 32sp 
         */
        public static final int suw_header_title_line_spacing_extra=0x7f0c0023;
        public static final int suw_header_title_margin_bottom=0x7f0c0020;
        public static final int suw_header_title_padding_bottom=0x7f0c0022;
        public static final int suw_header_title_padding_top=0x7f0c0021;
        public static final int suw_header_title_size=0x7f0c001f;
        /**  Illustration 
 Illustration 
 Illustration 
 Illustration 
         */
        public static final int suw_illustration_aspect_ratio=0x7f0c0024;
        /**  General 
         */
        public static final int suw_layout_margin_sides=0x7f0c0002;
        /**  Navigation bar 
         */
        public static final int suw_navbar_button_drawable_padding=0x7f0c0025;
        public static final int suw_navbar_button_padding_sides=0x7f0c0026;
        public static final int suw_navbar_height=0x7f0c0027;
        public static final int suw_navbar_ic_intrinsic_size=0x7f0c0028;
        public static final int suw_navbar_padding_sides=0x7f0c0029;
        public static final int suw_navbar_text_size=0x7f0c002a;
        /**  Progress bar 
 The margin to compensate for the padding built-in to the widget itself 
         */
        public static final int suw_progress_bar_margin_vertical=0x7f0c002b;
        public static final int suw_radio_button_line_spacing_extra=0x7f0c0013;
        public static final int suw_radio_button_margin_bottom=0x7f0c0011;
        /**  Margin on the start to offset for margin in the drawable 
         */
        public static final int suw_radio_button_margin_start=0x7f0c000f;
        public static final int suw_radio_button_margin_top=0x7f0c0010;
        public static final int suw_radio_button_padding_start=0x7f0c0012;
        public static final int suw_tablet_illustration_height=0x7f0c001c;
        /**  Header layout (for phones) 
         */
        public static final int suw_title_area_elevation=0x7f0c001e;
        public static final int switchbar_margin_end=0x7f0c0070;
        /**  SwitchBar margin start / end 
 SwitchBar margin start / end 
         */
        public static final int switchbar_margin_start=0x7f0c006f;
        public static final int switchbar_subsettings_margin_end=0x7f0c0072;
        /**  SwitchBar sub settings margin start / end 
 SwitchBar sub settings margin start / end 
 SwitchBar sub settings margin start / end 
 SwitchBar sub settings margin start / end 
         */
        public static final int switchbar_subsettings_margin_start=0x7f0c0071;
        /**  Minimum width for the popup for updating a user's photo. 
         */
        public static final int update_user_photo_popup_min_width=0x7f0c0053;
        /**  Height of a user icon view 
         */
        public static final int user_icon_view_height=0x7f0c008f;
        /**  User spinner 
         */
        public static final int user_spinner_height=0x7f0c0090;
        public static final int user_spinner_item_height=0x7f0c0093;
        public static final int user_spinner_padding=0x7f0c0091;
        public static final int user_spinner_padding_sides=0x7f0c0092;
        public static final int vert_divider_width=0x7f0c004d;
        public static final int volume_seekbar_side_margin=0x7f0c0042;
        public static final int wifi_assistant_height=0x7f0c007f;
        public static final int wifi_assistant_image_start=0x7f0c0081;
        public static final int wifi_assistant_image_top=0x7f0c0080;
        public static final int wifi_assistant_padding=0x7f0c007d;
        public static final int wifi_assistant_padding_start_end=0x7f0c007c;
        /**  Dimensions for Wifi Assistant Card 
 Dimensions for Wifi Assistant Card 
 Dimensions for Wifi Assistant Card 
 Dimensions for Wifi Assistant Card 
         */
        public static final int wifi_assistant_padding_top_bottom=0x7f0c007b;
        public static final int wifi_assistant_text_padding=0x7f0c007e;
        /**  WiFi Preferences 
         */
        public static final int wifi_divider_height=0x7f0c0098;
        public static final int wifi_preference_badge_padding=0x7f0c0099;
        public static final int zen_schedule_day_margin=0x7f0c005a;
        public static final int zen_schedule_rule_checkbox_padding=0x7f0c0059;
    }
    public static final class drawable {
        public static final int add_contact_bg=0x7f020000;
        public static final int add_contact_bg_default=0x7f020001;
        public static final int add_contact_bg_pressed=0x7f020002;
        public static final int appwidget_bg_holo=0x7f020003;
        public static final int appwidget_button_center=0x7f020004;
        public static final int appwidget_button_left=0x7f020005;
        public static final int appwidget_button_right=0x7f020006;
        public static final int appwidget_inner_focused_c_holo=0x7f020007;
        public static final int appwidget_inner_focused_l_holo=0x7f020008;
        public static final int appwidget_inner_focused_r_holo=0x7f020009;
        public static final int appwidget_inner_pressed_c_holo=0x7f02000a;
        public static final int appwidget_inner_pressed_l_holo=0x7f02000b;
        public static final int appwidget_inner_pressed_r_holo=0x7f02000c;
        public static final int appwidget_item_bg=0x7f02000d;
        public static final int appwidget_item_bg_normal=0x7f02000e;
        public static final int appwidget_item_bg_pressed=0x7f02000f;
        public static final int appwidget_settings_divider_holo=0x7f020010;
        public static final int appwidget_settings_ind_mid_c_holo=0x7f020011;
        public static final int appwidget_settings_ind_mid_l_holo=0x7f020012;
        public static final int appwidget_settings_ind_mid_r_holo=0x7f020013;
        public static final int appwidget_settings_ind_off_c_holo=0x7f020014;
        public static final int appwidget_settings_ind_off_l_holo=0x7f020015;
        public static final int appwidget_settings_ind_off_r_holo=0x7f020016;
        public static final int appwidget_settings_ind_on_c_holo=0x7f020017;
        public static final int appwidget_settings_ind_on_l_holo=0x7f020018;
        public static final int appwidget_settings_ind_on_r_holo=0x7f020019;
        public static final int bg_header_horizontal_tile=0x7f02001a;
        public static final int bg_internal_storage_header=0x7f02001b;
        public static final int bg_portable_storage_header=0x7f02001c;
        public static final int bg_setup_header=0x7f02001d;
        public static final int bg_tile_teal=0x7f02001e;
        public static final int bt_audio=0x7f02001f;
        public static final int bt_audio_play=0x7f020020;
        public static final int btn_cling_normal=0x7f020021;
        public static final int btn_cling_pressed=0x7f020022;
        public static final int cancel_default=0x7f020023;
        public static final int cancel_disable=0x7f020024;
        public static final int cancel_msg_bg=0x7f020025;
        public static final int cancel_pressed=0x7f020026;
        public static final int caption_background=0x7f020027;
        public static final int clean_btn=0x7f020028;
        public static final int clean_btn_two=0x7f020029;
        public static final int cling_button_bg=0x7f02002a;
        public static final int contact_photo=0x7f02002b;
        public static final int dashboard_tile_background=0x7f02002c;
        public static final int data_grid_border=0x7f02002d;
        public static final int data_grid_primary=0x7f02002e;
        public static final int data_grid_secondary=0x7f02002f;
        public static final int data_sweep_limit=0x7f020030;
        public static final int data_sweep_limit_activated=0x7f020031;
        public static final int data_sweep_warning=0x7f020032;
        public static final int data_sweep_warning_activated=0x7f020033;
        public static final int data_usage_bar=0x7f020034;
        public static final int data_usage_bar_blue=0x7f020035;
        public static final int data_usage_bar_indigo=0x7f020036;
        public static final int data_usage_bar_pink=0x7f020037;
        public static final int data_usage_bar_purple=0x7f020038;
        public static final int data_usage_bar_red=0x7f020039;
        public static final int data_usage_bar_teal=0x7f02003a;
        public static final int data_usage_sweep_background=0x7f02003b;
        public static final int default_preference_background=0x7f02003c;
        public static final int delete_contact=0x7f02003d;
        public static final int delete_contact_default=0x7f02003e;
        public static final int delete_contact_disable=0x7f02003f;
        public static final int delete_contact_pressed=0x7f020040;
        public static final int done_default=0x7f020041;
        public static final int done_disable=0x7f020042;
        public static final int done_pressed=0x7f020043;
        public static final int dotted_line_480px=0x7f020044;
        public static final int emergency_demo=0x7f020045;
        public static final int empty_icon=0x7f020046;
        public static final int encroid_progress=0x7f020047;
        public static final int encroid_resignin=0x7f020048;
        public static final int encroid_waiting=0x7f020049;
        public static final int enrollment_fingerprint_isolated=0x7f02004a;
        public static final int enrollment_fingerprint_isolated_animation=0x7f02004b;
        public static final int fab_background=0x7f02004c;
        public static final int fingerprint_progress_ring=0x7f02004d;
        public static final int fingerprint_sensor_location=0x7f02004e;
        public static final int former_page=0x7f02004f;
        public static final int former_page_default=0x7f020050;
        public static final int former_page_pressed=0x7f020051;
        public static final int fp_app_indicator=0x7f020052;
        public static final int fp_enrollment_header=0x7f020053;
        public static final int fp_enrollment_header_landscape=0x7f02014a;
        public static final int fp_illustration_enrollment=0x7f020054;
        public static final int hotknot_setting_logo=0x7f020055;
        public static final int ic_add=0x7f020056;
        public static final int ic_add_24dp=0x7f020057;
        public static final int ic_appwidget_settings_bluetooth_off_holo=0x7f020058;
        public static final int ic_appwidget_settings_bluetooth_on_holo=0x7f020059;
        public static final int ic_appwidget_settings_brightness_auto_holo=0x7f02005a;
        public static final int ic_appwidget_settings_brightness_full_holo=0x7f02005b;
        public static final int ic_appwidget_settings_brightness_half_holo=0x7f02005c;
        public static final int ic_appwidget_settings_brightness_off_holo=0x7f02005d;
        public static final int ic_appwidget_settings_location_off_holo=0x7f02005e;
        public static final int ic_appwidget_settings_location_on_holo=0x7f02005f;
        public static final int ic_appwidget_settings_location_saving_holo=0x7f020060;
        public static final int ic_appwidget_settings_sync_off_holo=0x7f020061;
        public static final int ic_appwidget_settings_sync_on_holo=0x7f020062;
        public static final int ic_appwidget_settings_wifi_off_holo=0x7f020063;
        public static final int ic_appwidget_settings_wifi_on_holo=0x7f020064;
        public static final int ic_beamplus_list_failed=0x7f020065;
        public static final int ic_beamplus_list_receiver=0x7f020066;
        public static final int ic_beamplus_list_sender=0x7f020067;
        public static final int ic_bt_cellphone=0x7f020068;
        public static final int ic_bt_config=0x7f020069;
        public static final int ic_bt_headphones_a2dp=0x7f02006a;
        public static final int ic_bt_headset_hfp=0x7f02006b;
        public static final int ic_bt_imaging=0x7f02006c;
        public static final int ic_bt_keyboard_hid=0x7f02006d;
        public static final int ic_bt_laptop=0x7f02006e;
        public static final int ic_bt_misc_hid=0x7f02006f;
        public static final int ic_bt_network_pan=0x7f020070;
        public static final int ic_bt_pointing_hid=0x7f020071;
        public static final int ic_btn_next=0x7f020072;
        public static final int ic_cancel=0x7f020073;
        public static final int ic_check=0x7f020074;
        public static final int ic_delete=0x7f020075;
        public static final int ic_drawer=0x7f020076;
        public static final int ic_drawer_am=0x7f020077;
        public static final int ic_eject_24dp=0x7f020078;
        public static final int ic_eject_48dp=0x7f020079;
        public static final int ic_emergency=0x7f02007a;
        public static final int ic_event=0x7f02007b;
        public static final int ic_expand=0x7f02007c;
        public static final int ic_expand_less=0x7f02007d;
        public static final int ic_expand_more=0x7f02007e;
        public static final int ic_fingerprint=0x7f02007f;
        public static final int ic_fingerprint_error=0x7f020080;
        public static final int ic_fingerprint_success=0x7f020081;
        public static final int ic_grayedout_printer=0x7f020082;
        public static final int ic_info=0x7f020083;
        public static final int ic_item_delete=0x7f020084;
        public static final int ic_label=0x7f020085;
        public static final int ic_list_sync_anim=0x7f020086;
        public static final int ic_live_help=0x7f020087;
        public static final int ic_lockscreen_ime=0x7f020088;
        public static final int ic_menu_3d_globe=0x7f020089;
        public static final int ic_menu_add=0x7f02008a;
        public static final int ic_menu_add_dark=0x7f02008b;
        public static final int ic_menu_add_light=0x7f02008c;
        public static final int ic_menu_add_white=0x7f02008d;
        public static final int ic_menu_delete=0x7f02008e;
        public static final int ic_menu_refresh_holo_dark=0x7f02008f;
        public static final int ic_menu_scan_network=0x7f020090;
        public static final int ic_network_signal_0=0x7f020091;
        public static final int ic_network_signal_1=0x7f020092;
        public static final int ic_network_signal_2=0x7f020093;
        public static final int ic_network_signal_3=0x7f020094;
        public static final int ic_network_signal_4=0x7f020095;
        public static final int ic_power_system=0x7f020096;
        public static final int ic_print=0x7f020097;
        public static final int ic_print_error=0x7f020098;
        public static final int ic_remove_circle=0x7f020099;
        public static final int ic_schedule=0x7f02009a;
        public static final int ic_search_history=0x7f02009b;
        public static final int ic_search_history_am=0x7f02009c;
        public static final int ic_settings_24dp=0x7f02009d;
        public static final int ic_settings_32dp=0x7f02009e;
        public static final int ic_settings_about=0x7f02009f;
        public static final int ic_settings_about_alpha=0x7f0200a0;
        public static final int ic_settings_accessibility=0x7f0200a1;
        public static final int ic_settings_accessibility_alpha=0x7f0200a2;
        public static final int ic_settings_accounts=0x7f0200a3;
        public static final int ic_settings_accounts_alpha=0x7f0200a4;
        public static final int ic_settings_applications=0x7f0200a5;
        public static final int ic_settings_applications_alpha=0x7f0200a6;
        public static final int ic_settings_backup=0x7f0200a7;
        public static final int ic_settings_backup_alpha=0x7f0200a8;
        public static final int ic_settings_battery=0x7f0200a9;
        public static final int ic_settings_battery_alpha=0x7f0200aa;
        public static final int ic_settings_bluetooth=0x7f0200ab;
        public static final int ic_settings_bluetooth_alpha=0x7f0200ac;
        public static final int ic_settings_camera=0x7f0200ad;
        public static final int ic_settings_cell_standby=0x7f0200ae;
        public static final int ic_settings_data_usage=0x7f0200af;
        public static final int ic_settings_data_usage_alpha=0x7f0200b0;
        public static final int ic_settings_date_time=0x7f0200b1;
        public static final int ic_settings_date_time_alpha=0x7f0200b2;
        public static final int ic_settings_development=0x7f0200b3;
        public static final int ic_settings_development_alpha=0x7f0200b4;
        public static final int ic_settings_display=0x7f0200b5;
        public static final int ic_settings_display_am_alpha=0x7f0200b6;
        public static final int ic_settings_dock=0x7f0200b7;
        public static final int ic_settings_dock_alpha=0x7f0200b8;
        public static final int ic_settings_emergency=0x7f0200b9;
        public static final int ic_settings_gesture_wake=0x7f0200ba;
        public static final int ic_settings_hetcomm=0x7f0200bb;
        public static final int ic_settings_home=0x7f0200bc;
        public static final int ic_settings_home_alpha=0x7f0200bd;
        public static final int ic_settings_hotknot=0x7f0200be;
        public static final int ic_settings_language=0x7f0200bf;
        public static final int ic_settings_language_alpha=0x7f0200c0;
        public static final int ic_settings_location=0x7f0200c1;
        public static final int ic_settings_location_alpha=0x7f0200c2;
        public static final int ic_settings_memory=0x7f0200c3;
        public static final int ic_settings_more=0x7f0200c4;
        public static final int ic_settings_more_alpha=0x7f0200c5;
        public static final int ic_settings_multiuser=0x7f0200c6;
        public static final int ic_settings_multiuser_alpha=0x7f0200c7;
        public static final int ic_settings_nfc_payment=0x7f0200c8;
        public static final int ic_settings_nfc_payment_am_alpha=0x7f0200c9;
        public static final int ic_settings_notifications=0x7f0200ca;
        public static final int ic_settings_notifications_alpha=0x7f0200cb;
        public static final int ic_settings_phone_idle=0x7f0200cc;
        public static final int ic_settings_print=0x7f0200cd;
        public static final int ic_settings_print_alpha=0x7f0200ce;
        public static final int ic_settings_schpwronoff=0x7f0200cf;
        public static final int ic_settings_security=0x7f0200d0;
        public static final int ic_settings_security_alpha=0x7f0200d1;
        public static final int ic_settings_sim=0x7f0200d2;
        public static final int ic_settings_sim_lock_detail=0x7f0200d3;
        public static final int ic_settings_sim_lock_info=0x7f0200d4;
        public static final int ic_settings_sound=0x7f0200d5;
        public static final int ic_settings_sound_alpha=0x7f0200d6;
        public static final int ic_settings_storage=0x7f0200d7;
        public static final int ic_settings_storage_alpha=0x7f0200d8;
        public static final int ic_settings_sync=0x7f0200d9;
        public static final int ic_settings_sync_alpha=0x7f0200da;
        public static final int ic_settings_voice_calls=0x7f0200db;
        public static final int ic_settings_wireless=0x7f0200dc;
        public static final int ic_settings_wireless_alpha=0x7f0200dd;
        public static final int ic_sim_card_alert_white_48dp=0x7f0200de;
        public static final int ic_sim_sd=0x7f0200df;
        public static final int ic_sim_sd_detail=0x7f0200e0;
        public static final int ic_sim_sd_info=0x7f0200e1;
        public static final int ic_smart_motion=0x7f0200e2;
        public static final int ic_sync_anim_holo=0x7f0200e3;
        public static final int ic_sync_error_holo=0x7f0200e4;
        public static final int ic_sync_green=0x7f0200e5;
        public static final int ic_sync_green_holo=0x7f0200e6;
        public static final int ic_sync_grey=0x7f0200e7;
        public static final int ic_sync_grey_holo=0x7f0200e8;
        public static final int ic_sync_red=0x7f0200e9;
        public static final int ic_sync_red_holo=0x7f0200ea;
        public static final int ic_sysbar_quicksettings=0x7f0200eb;
        public static final int ic_tab_all=0x7f0200ec;
        public static final int ic_tab_download=0x7f0200ed;
        public static final int ic_tab_running=0x7f0200ee;
        public static final int ic_tab_sdcard=0x7f0200ef;
        public static final int ic_tab_selected_all=0x7f0200f0;
        public static final int ic_tab_selected_download=0x7f0200f1;
        public static final int ic_tab_selected_running=0x7f0200f2;
        public static final int ic_tab_selected_sdcard=0x7f0200f3;
        public static final int ic_tab_unselected_all=0x7f0200f4;
        public static final int ic_tab_unselected_download=0x7f0200f5;
        public static final int ic_tab_unselected_running=0x7f0200f6;
        public static final int ic_tab_unselected_sdcard=0x7f0200f7;
        public static final int ic_toc=0x7f0200f8;
        public static final int ic_warning_24dp=0x7f0200f9;
        public static final int ic_warning_48dp=0x7f0200fa;
        public static final int ic_wfd_cellphone=0x7f0200fb;
        public static final int ic_wfd_laptop=0x7f0200fc;
        public static final int ic_wifi_lock_signal_0_dark=0x7f0200fd;
        public static final int ic_wifi_lock_signal_1_dark=0x7f0200fe;
        public static final int ic_wifi_lock_signal_2_dark=0x7f0200ff;
        public static final int ic_wifi_lock_signal_3_dark=0x7f020100;
        public static final int ic_wifi_lock_signal_4_dark=0x7f020101;
        public static final int ic_wifi_signal_0=0x7f020102;
        public static final int ic_wifi_signal_0_dark=0x7f020103;
        public static final int ic_wifi_signal_1=0x7f020104;
        public static final int ic_wifi_signal_1_dark=0x7f020105;
        public static final int ic_wifi_signal_2=0x7f020106;
        public static final int ic_wifi_signal_2_dark=0x7f020107;
        public static final int ic_wifi_signal_3=0x7f020108;
        public static final int ic_wifi_signal_3_dark=0x7f020109;
        public static final int ic_wifi_signal_4=0x7f02010a;
        public static final int ic_wifi_signal_4_dark=0x7f02010b;
        public static final int ic_wifi_signal_lock=0x7f02010c;
        public static final int ic_wps_dark=0x7f02010d;
        public static final int ic_wps_light=0x7f02010e;
        public static final int illustration_generic=0x7f02010f;
        public static final int illustration_horizontal=0x7f020110;
        public static final int illustration_tile=0x7f020111;
        public static final int lock_anim=0x7f020112;
        public static final int lock_anim_0=0x7f020113;
        public static final int lock_anim_1=0x7f020114;
        public static final int lock_anim_10=0x7f020115;
        public static final int lock_anim_11=0x7f020116;
        public static final int lock_anim_12=0x7f020117;
        public static final int lock_anim_13=0x7f020118;
        public static final int lock_anim_14=0x7f020119;
        public static final int lock_anim_2=0x7f02011a;
        public static final int lock_anim_3=0x7f02011b;
        public static final int lock_anim_4=0x7f02011c;
        public static final int lock_anim_5=0x7f02011d;
        public static final int lock_anim_6=0x7f02011e;
        public static final int lock_anim_7=0x7f02011f;
        public static final int lock_anim_8=0x7f020120;
        public static final int lock_anim_9=0x7f020121;
        public static final int nav_divider=0x7f020122;
        public static final int nfc_how_it_works=0x7f020123;
        public static final int nfc_payment_empty_state=0x7f020124;
        public static final int no_contact_added=0x7f020125;
        public static final int pic_indicator=0x7f020126;
        public static final int preference_background=0x7f020127;
        public static final int preference_highlight=0x7f020128;
        public static final int preview=0x7f020129;
        public static final int progress_indeterminate_horizontal_material_trimmed=0x7f02012a;
        public static final int regulatory_info=0x7f02012b;
        public static final int save_msg_bg=0x7f02012c;
        public static final int search_panel_list_background=0x7f02012d;
        public static final int setbar_bg=0x7f02012e;
        public static final int setup_ic_add_another_network=0x7f02012f;
        public static final int setup_illustration_horizontal_tile=0x7f020130;
        public static final int setup_illustration_lock_screen=0x7f020131;
        public static final int setup_illustration_tile=0x7f020132;
        public static final int setup_illustration_wifi=0x7f020133;
        public static final int setup_wizard_navbar_btn_bg=0x7f020134;
        public static final int setup_wizard_navbar_ic_back=0x7f020135;
        public static final int setup_wizard_navbar_ic_next=0x7f020136;
        public static final int shortcut_base=0x7f020137;
        public static final int signal=0x7f020138;
        public static final int spinner_default_holo_dark_am_no_underline=0x7f020139;
        public static final int stat_sys_phone_call=0x7f02013a;
        public static final int suw_card_bg=0x7f02013b;
        public static final int suw_layout_background=0x7f02013c;
        public static final int suw_navbar_btn_bg=0x7f02013d;
        public static final int suw_navbar_ic_back=0x7f02013e;
        public static final int suw_navbar_ic_more=0x7f02013f;
        public static final int suw_navbar_ic_next=0x7f020140;
        public static final int switchbar_background=0x7f020141;
        public static final int tapandpay_emptystate=0x7f020142;
        public static final int transparency=0x7f020143;
        public static final int transparency_tileable=0x7f020144;
        public static final int vector_drawable_progress_indeterminate_horizontal_trimmed=0x7f020145;
        public static final int wifi_signal=0x7f020146;
        public static final int wifi_signal_dark=0x7f020147;
        public static final int wifi_signal_lock_dark=0x7f020148;
        public static final int wifi_signal_open_dark=0x7f020149;
    }
    public static final class fraction {
        public static final int fingerprint_sensor_location_fraction_x=0x7f120000;
        public static final int fingerprint_sensor_location_fraction_y=0x7f120001;
    }
    public static final class id {
        public static final int Enable_select=0x7f13015b;
        public static final int FILL=0x7f130003;
        public static final int STROKE=0x7f130004;
        public static final int about_settings=0x7f1302f0;
        public static final int accessibility_settings=0x7f1302ed;
        public static final int account=0x7f1300f9;
        public static final int accountTypeIcon=0x7f130009;
        public static final int account_settings=0x7f1302e5;
        public static final int account_settings_menu_auto_sync=0x7f1302f1;
        public static final int account_settings_menu_auto_sync_personal=0x7f1302f2;
        public static final int account_settings_menu_auto_sync_work=0x7f1302f3;
        public static final int accounts=0x7f13010a;
        public static final int accounts_label=0x7f130109;
        public static final int action=0x7f130179;
        public static final int action_button=0x7f1300bb;
        public static final int action_delete=0x7f130301;
        public static final int action_select_all=0x7f130302;
        public static final int active_layout=0x7f1300b1;
        public static final int add_another_button=0x7f1300ec;
        public static final int add_contact_button=0x7f1300ca;
        public static final int add_msg=0x7f1300b7;
        public static final int add_msg_expander=0x7f1300b6;
        public static final int add_new_service=0x7f1300db;
        public static final int admin_description=0x7f1300b5;
        public static final int admin_icon=0x7f1300b2;
        public static final int admin_name=0x7f1300b3;
        public static final int admin_policies=0x7f1300b9;
        public static final int admin_warning=0x7f1300b8;
        public static final int advanced=0x7f1302fb;
        public static final int alarm_mute_button=0x7f130143;
        public static final int alarm_section=0x7f130142;
        public static final int alarm_volume_seekbar=0x7f130144;
        public static final int all_details=0x7f13000e;
        public static final int alphanumeric_pin=0x7f130046;
        public static final int also_erases_external=0x7f130108;
        public static final int android_beam_explained=0x7f13000a;
        public static final int android_beam_image=0x7f13000b;
        public static final int anonymous=0x7f13027d;
        public static final int apn_radiobutton=0x7f13000d;
        public static final int app_background=0x7f130091;
        public static final int app_detail=0x7f13008e;
        public static final int app_domains=0x7f1300ac;
        public static final int app_foreground=0x7f130090;
        public static final int app_icon=0x7f130013;
        public static final int app_image=0x7f13001f;
        public static final int app_label=0x7f130020;
        public static final int app_name=0x7f130014;
        public static final int app_restrictions_pref=0x7f130131;
        public static final int app_restrictions_settings=0x7f130132;
        public static final int app_settings=0x7f130015;
        public static final int app_snippet=0x7f130017;
        public static final int app_summary=0x7f130084;
        public static final int app_switches=0x7f130092;
        public static final int app_title=0x7f130083;
        public static final int app_titles=0x7f13008f;
        public static final int application_settings=0x7f1302d9;
        public static final int appsSize=0x7f1301b0;
        public static final int appsSizePrefix=0x7f1301af;
        public static final int attempts=0x7f13018f;
        public static final int auto_launch=0x7f130022;
        public static final int back_button=0x7f13014f;
        public static final int backup_pw_cancel_button=0x7f1301c5;
        public static final int backup_pw_set_button=0x7f1301c6;
        public static final int band=0x7f13002a;
        public static final int banner=0x7f130125;
        public static final int battery_history_chart=0x7f13002d;
        public static final int battery_settings=0x7f1302db;
        public static final int bluetooth_fragment_settings=0x7f13003c;
        public static final int bluetooth_settings=0x7f1302cf;
        public static final int body=0x7f1301d3;
        public static final int bottom_buttons=0x7f1302ad;
        public static final int bottom_divider=0x7f130071;
        public static final int bottom_padding=0x7f1302ac;
        public static final int bottom_padding_layout=0x7f1302ab;
        public static final int bssid=0x7f1302b8;
        public static final int btn_bluetooth=0x7f13023e;
        public static final int btn_brightness=0x7f130247;
        public static final int btn_location=0x7f130241;
        public static final int btn_sync=0x7f130244;
        public static final int btn_wifi=0x7f13023b;
        public static final int button=0x7f130124;
        public static final int buttonContainer=0x7f13005c;
        public static final int buttonPanel=0x7f1300ba;
        public static final int buttonWidget=0x7f130145;
        public static final int button_bar=0x7f1300ef;
        public static final int buttons_spacer_left=0x7f13020a;
        public static final int bytes=0x7f13002b;
        public static final int ca_cert=0x7f130279;
        public static final int cache_size=0x7f13000f;
        public static final int cache_size_text=0x7f130010;
        public static final int call=0x7f13018d;
        public static final int cancel=0x7f13004b;
        public static final int cancelButton=0x7f130060;
        public static final int cancel_button=0x7f130054;
        public static final int cancel_delete_contact=0x7f1300d6;
        public static final int cancel_save_msg_button=0x7f1300d8;
        public static final int capabilities=0x7f1300df;
        public static final int capabilities_header=0x7f1300de;
        public static final int carrier=0x7f130119;
        public static final int category=0x7f13007d;
        public static final int category_content=0x7f13007f;
        public static final int category_title=0x7f13007e;
        public static final int cell_info_list_rate=0x7f130197;
        public static final int cellinfo=0x7f130185;
        public static final int center_divider=0x7f1300a9;
        public static final int cert_remove_button=0x7f1301f5;
        public static final int cfi=0x7f13018c;
        public static final int chart=0x7f130085;
        public static final int checkbox=0x7f1300bd;
        public static final int choose_channel=0x7f130256;
        public static final int clear=0x7f13017a;
        public static final int clear_activities_button=0x7f130023;
        public static final int clear_cache_button=0x7f130011;
        public static final int clear_memory=0x7f130077;
        public static final int clickable=0x7f1301f1;
        public static final int color_bar=0x7f130170;
        public static final int color_icon=0x7f1301c7;
        public static final int color_preview=0x7f130136;
        public static final int color_swatch=0x7f13005d;
        public static final int color_text=0x7f1301c8;
        public static final int comp_description=0x7f1301b7;
        public static final int config_list=0x7f13025d;
        public static final int confirm=0x7f1301d4;
        public static final int confirm_new_backup_pw=0x7f1301c4;
        public static final int connecting_status=0x7f1302aa;
        public static final int connecting_status_layout=0x7f1302a9;
        public static final int contact_count=0x7f1300cf;
        public static final int contact_list=0x7f1300c8;
        public static final int contact_name=0x7f1300d2;
        public static final int contact_number=0x7f1300d3;
        public static final int contact_photo=0x7f1300d1;
        public static final int contact_title=0x7f1300cd;
        public static final int contactinfo_cb=0x7f1300d0;
        public static final int container=0x7f130211;
        public static final int container_material=0x7f13014d;
        public static final int content=0x7f1302a4;
        public static final int content_padding=0x7f1302a5;
        public static final int control_buttons_panel=0x7f1300f6;
        public static final int cricleProgress=0x7f130079;
        public static final int current_backup_pw=0x7f1301c0;
        public static final int cycle_day=0x7f13008b;
        public static final int cycle_summary=0x7f13008d;
        public static final int cycles_spinner=0x7f13008c;
        public static final int dashboard=0x7f13007b;
        public static final int dashboard_container=0x7f13007c;
        public static final int data=0x7f1300f8;
        public static final int data_saving_zone=0x7f130082;
        public static final int data_usage_menu_cellular_networks=0x7f1302f9;
        public static final int data_usage_menu_help=0x7f1302fa;
        public static final int data_usage_menu_metered=0x7f1302f7;
        public static final int data_usage_menu_restrict_background=0x7f1302f4;
        public static final int data_usage_menu_show_ethernet=0x7f1302f6;
        public static final int data_usage_menu_show_wifi=0x7f1302f5;
        public static final int data_usage_menu_sim_cards=0x7f1302f8;
        public static final int data_usage_settings=0x7f1302d2;
        public static final int date_picker=0x7f1300a8;
        public static final int date_picker_title=0x7f1300a7;
        public static final int date_time_auto=0x7f1300a5;
        public static final int date_time_auto_button=0x7f1300a6;
        public static final int date_time_settings=0x7f1302e9;
        public static final int date_time_settings_fragment=0x7f1300a2;
        public static final int dbm=0x7f130182;
        public static final int dcrtinfo=0x7f130186;
        public static final int defaultView=0x7f13017b;
        public static final int default_label=0x7f130021;
        public static final int delete=0x7f130217;
        public static final int delete_contact=0x7f1300ce;
        public static final int delete_contact_button=0x7f1300d5;
        public static final int delete_managed_profile_closing_paragraph=0x7f1300b0;
        public static final int delete_managed_profile_device_manager_name=0x7f1300af;
        public static final int delete_managed_profile_mdm_icon_view=0x7f1300ae;
        public static final int delete_managed_profile_opening_paragraph=0x7f1300ad;
        public static final int delete_msg_title=0x7f1300d4;
        public static final int description=0x7f1300bc;
        public static final int detail_series=0x7f130088;
        public static final int detailsText=0x7f13005f;
        public static final int development_settings=0x7f1302ef;
        public static final int deviceDetails=0x7f130029;
        public static final int device_section=0x7f1302d5;
        public static final int dialog_layout=0x7f13003d;
        public static final int disclaimer=0x7f13009b;
        public static final int disconnects=0x7f130191;
        public static final int display_settings=0x7f1302d7;
        public static final int divider=0x7f130028;
        public static final int divider_delete=0x7f130166;
        public static final int divider_manage=0x7f130164;
        public static final int dns1=0x7f130291;
        public static final int dns2=0x7f130292;
        public static final int dnsCheckState=0x7f1301a1;
        public static final int dns_check_toggle=0x7f1301a0;
        public static final int dns_servers=0x7f13022e;
        public static final int dock_audio_media_enable_cb=0x7f1300c4;
        public static final int domain_name=0x7f130012;
        public static final int dummy_for_left_edge=0x7f1302a3;
        public static final int eap=0x7f130271;
        public static final int eap_identity=0x7f130264;
        public static final int editor=0x7f13021e;
        public static final int edittext=0x7f1300c0;
        public static final int eight=0x7f130205;
        public static final int emergencyCallButton=0x7f13006b;
        public static final int emergency_assistant=0x7f1302e4;
        public static final int emergency_msg=0x7f1300d7;
        public static final int empty_print_state=0x7f1300da;
        public static final int empty_printers_list_service_enabled=0x7f1300dc;
        public static final int enable_throttling=0x7f13024c;
        public static final int encroid=0x7f13006f;
        public static final int encrypt_dont_require_password=0x7f1300e2;
        public static final int encrypt_require_password=0x7f1300e1;
        public static final int encryption_message=0x7f1300e0;
        public static final int encryption_warning=0x7f1300dd;
        public static final int erase_external=0x7f13010e;
        public static final int erase_external_container=0x7f13010d;
        public static final int erase_external_option_text=0x7f13010c;
        public static final int error=0x7f130066;
        public static final int errorText=0x7f130061;
        public static final int error_text=0x7f1300e6;
        public static final int exclusionlist=0x7f130178;
        public static final int execute_encrypt=0x7f13006a;
        public static final int execute_master_clear=0x7f130111;
        public static final int execute_reset_network=0x7f1301ac;
        public static final int extra=0x7f130128;
        public static final int fab=0x7f13014e;
        public static final int factory_reset=0x7f130070;
        public static final int fields=0x7f130254;
        public static final int filter_spinner=0x7f130024;
        public static final int fingerprintIcon=0x7f130062;
        public static final int fingerprint_animator=0x7f1300e7;
        public static final int fingerprint_in_app_indicator=0x7f1300ed;
        public static final int fingerprint_progress_bar=0x7f1300e8;
        public static final int fingerprint_rename_field=0x7f1300f0;
        public static final int fingerprint_sensor_location=0x7f1300e9;
        public static final int fingerprint_sensor_location_animation=0x7f1300ea;
        public static final int finish_button=0x7f130008;
        public static final int finish_button_area=0x7f130007;
        public static final int five=0x7f130202;
        public static final int fontSize=0x7f1300c1;
        public static final int footerLeftButton=0x7f13005a;
        public static final int footerRightButton=0x7f13005b;
        public static final int footerText=0x7f130059;
        public static final int four=0x7f130201;
        public static final int freeSize=0x7f1301b2;
        public static final int freeSizePrefix=0x7f1301b1;
        public static final int gateway=0x7f13028f;
        public static final int gesture_wake_settings=0x7f1302e0;
        public static final int gprs=0x7f130189;
        public static final int grid=0x7f130086;
        public static final int gsm=0x7f130188;
        public static final int headerText=0x7f130052;
        public static final int health=0x7f130032;
        public static final int hetcomm_settings=0x7f1302ce;
        public static final int hex_password=0x7f130269;
        public static final int hidden_ssid=0x7f1302b9;
        public static final int hide_all=0x7f1301a7;
        public static final int hide_system=0x7f1302fd;
        public static final int hint=0x7f130065;
        public static final int home_app_pref=0x7f130146;
        public static final int home_app_uninstall=0x7f130149;
        public static final int home_divider=0x7f130148;
        public static final int home_radio=0x7f130147;
        public static final int home_settings=0x7f1302d6;
        public static final int horizontal=0x7f130001;
        public static final int hostname=0x7f130176;
        public static final int hotknot_explained=0x7f1300f1;
        public static final int hotknot_image=0x7f1300f3;
        public static final int hotknot_settings=0x7f1302d0;
        public static final int hotknot_warning_msg=0x7f1300f2;
        public static final int httpClientTest=0x7f130181;
        public static final int icon=0x7f130049;
        public static final int icon_frame=0x7f130078;
        public static final int identity=0x7f130266;
        public static final int ignore_off=0x7f1300f4;
        public static final int ignore_on=0x7f1300f5;
        public static final int imei=0x7f13017c;
        public static final int img_bluetooth=0x7f13023f;
        public static final int img_brightness=0x7f130248;
        public static final int img_location=0x7f130242;
        public static final int img_sync=0x7f130245;
        public static final int img_wifi=0x7f13023c;
        public static final int ims_reg_required=0x7f130198;
        public static final int ind_bluetooth=0x7f130240;
        public static final int ind_brightness=0x7f130249;
        public static final int ind_location=0x7f130243;
        public static final int ind_sync=0x7f130246;
        public static final int ind_wifi=0x7f13023d;
        public static final int info=0x7f130251;
        public static final int initiate_encrypt=0x7f130074;
        public static final int initiate_master_clear=0x7f13010f;
        public static final int initiate_reset_network=0x7f1301ab;
        public static final int inputmethod_pref=0x7f13014a;
        public static final int inputmethod_settings=0x7f13014b;
        public static final int instructions_area=0x7f1301b8;
        public static final int intent=0x7f1300f7;
        public static final int ip_address=0x7f130250;
        public static final int ip_fields=0x7f130289;
        public static final int ip_filed=0x7f13024f;
        public static final int ip_settings=0x7f13028b;
        public static final int ipaddr=0x7f1302ba;
        public static final int ipaddress=0x7f13028e;
        public static final int ipsec_ca_cert=0x7f130229;
        public static final int ipsec_identifier=0x7f130224;
        public static final int ipsec_peer=0x7f130228;
        public static final int ipsec_psk=0x7f130223;
        public static final int ipsec_secret=0x7f130225;
        public static final int ipsec_server_cert=0x7f13022a;
        public static final int ipsec_user=0x7f130226;
        public static final int ipsec_user_cert=0x7f130227;
        public static final int keyboard=0x7f130056;
        public static final int l2tp=0x7f130221;
        public static final int l2tp_secret=0x7f130222;
        public static final int l_anonymous=0x7f13027c;
        public static final int l_ca_cert=0x7f130278;
        public static final int l_identity=0x7f130265;
        public static final int l_method=0x7f130272;
        public static final int l_phase2=0x7f130276;
        public static final int l_user_cert=0x7f13027a;
        public static final int label=0x7f1300fe;
        public static final int language_settings=0x7f1302e6;
        public static final int last_time_used=0x7f13020f;
        public static final int layout_results=0x7f1301bd;
        public static final int layout_root=0x7f1300a0;
        public static final int layout_suggestions=0x7f1301bb;
        public static final int learn_more_button=0x7f1300ee;
        public static final int leftSpacer=0x7f130063;
        public static final int left_button=0x7f130209;
        public static final int level=0x7f130030;
        public static final int line1=0x7f130103;
        public static final int line2=0x7f130104;
        public static final int line_view=0x7f13021b;
        public static final int linear_color_bar=0x7f13014c;
        public static final int link_speed=0x7f1302bd;
        public static final int listContainer=0x7f130069;
        public static final int listHeader=0x7f1301b3;
        public static final int list_container=0x7f130105;
        public static final int list_results=0x7f1301be;
        public static final int list_suggestions=0x7f1301bc;
        public static final int loading_container=0x7f130100;
        public static final int locale_picker_fragment=0x7f130101;
        public static final int location=0x7f130183;
        public static final int location_settings=0x7f1302e2;
        public static final int lockPattern=0x7f130058;
        public static final int login=0x7f130230;
        public static final int lte_ram_dump=0x7f13019b;
        public static final int mac_address=0x7f1301cf;
        public static final int mac_filed=0x7f13024e;
        public static final int macaddr=0x7f1302bb;
        public static final int main=0x7f13023a;
        public static final int main_content=0x7f1301c9;
        public static final int manage=0x7f130169;
        public static final int manage_memory=0x7f1302dc;
        public static final int manage_user=0x7f130165;
        public static final int manufacturer_settings=0x7f1302df;
        public static final int master_clear_confirm=0x7f130110;
        public static final int master_clear_container=0x7f130107;
        public static final int max_connection_num=0x7f130258;
        public static final int media_mute_button=0x7f130138;
        public static final int media_section=0x7f130137;
        public static final int media_volume_seekbar=0x7f130139;
        public static final int mem_state=0x7f130172;
        public static final int mem_use=0x7f130173;
        public static final int memory_avg=0x7f130112;
        public static final int memory_max=0x7f130113;
        public static final int memory_state=0x7f13016f;
        public static final int message=0x7f13003b;
        public static final int message_below_pin=0x7f130047;
        public static final int message_caption=0x7f130043;
        public static final int message_secondary=0x7f1300eb;
        public static final int message_subhead=0x7f130044;
        public static final int method=0x7f130273;
        public static final int mobile_progressbar=0x7f130094;
        public static final int mobile_title=0x7f130093;
        public static final int mobile_usage=0x7f130095;
        public static final int modified_date=0x7f130039;
        public static final int movie_view_root=0x7f130219;
        public static final int mppe=0x7f130220;
        public static final int mwi=0x7f13018b;
        public static final int name=0x7f13003e;
        public static final int neighboring=0x7f130184;
        public static final int network=0x7f13018a;
        public static final int network_prefix_length=0x7f130290;
        public static final int network_state=0x7f1302b5;
        public static final int network_switches=0x7f13009a;
        public static final int network_switches_container=0x7f130099;
        public static final int networkid=0x7f1302bc;
        public static final int new_backup_pw=0x7f1301c2;
        public static final int next_button=0x7f130055;
        public static final int nfc_how_it_works_button=0x7f130122;
        public static final int nfc_how_it_works_content=0x7f130121;
        public static final int nfc_how_it_works_image=0x7f13011f;
        public static final int nfc_how_it_works_image_text=0x7f13011e;
        public static final int nfc_how_it_works_title=0x7f130120;
        public static final int nfc_password_token=0x7f13029c;
        public static final int nfc_password_token_togglebox=0x7f13029d;
        public static final int nfc_payment_empty_text=0x7f13011c;
        public static final int nfc_payment_pref=0x7f130123;
        public static final int nfc_payment_settings=0x7f1302de;
        public static final int nfc_payment_tap_image=0x7f13011b;
        public static final int nine=0x7f130206;
        public static final int no_contact_item=0x7f1300c9;
        public static final int notification_description_text=0x7f13013f;
        public static final int notification_mute_button=0x7f130140;
        public static final int notification_section=0x7f13013e;
        public static final int notification_settings=0x7f1302d8;
        public static final int notification_volume_seekbar=0x7f130141;
        public static final int number=0x7f13011a;
        public static final int oem_info=0x7f1301a2;
        public static final int ok=0x7f130207;
        public static final int old_password=0x7f130068;
        public static final int old_password_prompt=0x7f130067;
        public static final int one=0x7f1301fe;
        public static final int op_icon=0x7f130019;
        public static final int op_name=0x7f13001a;
        public static final int op_time=0x7f13001b;
        public static final int operations_section=0x7f130018;
        public static final int operator=0x7f13017d;
        public static final int operator_settings=0x7f1302d3;
        public static final int options=0x7f13022c;
        public static final int other_network=0x7f1301ce;
        public static final int other_users_present=0x7f13010b;
        public static final int overview_list=0x7f13009f;
        public static final int owner_info=0x7f130075;
        public static final int owner_info_edit_text=0x7f13012a;
        public static final int package_name=0x7f13020e;
        public static final int pager=0x7f13001d;
        public static final int pairing_caption=0x7f13003f;
        public static final int pairing_code_message=0x7f130041;
        public static final int pairing_subhead=0x7f130040;
        public static final int parentPanel=0x7f1300c7;
        public static final int password=0x7f130232;
        public static final int passwordEntry=0x7f13006c;
        public static final int password_entry=0x7f130053;
        public static final int password_label=0x7f1302c3;
        public static final int password_layout=0x7f130267;
        public static final int percentage_bar_chart=0x7f130151;
        public static final int permissions_section=0x7f13012b;
        public static final int personal_section=0x7f1302e1;
        public static final int phase2=0x7f130277;
        public static final int phonebook_sharing_message_confirm_pin=0x7f130042;
        public static final int phonebook_sharing_message_entry_pin=0x7f130048;
        public static final int pin_edit=0x7f13025c;
        public static final int pin_security=0x7f130297;
        public static final int pin_values_hint=0x7f130045;
        public static final int pingHostname=0x7f130180;
        public static final int pingIpAddr=0x7f13017f;
        public static final int ping_test=0x7f13017e;
        public static final int pinned_header=0x7f13009e;
        public static final int pkg_list=0x7f13020d;
        public static final int pkgicon=0x7f130126;
        public static final int pkgname=0x7f130129;
        public static final int port=0x7f130177;
        public static final int power=0x7f13002f;
        public static final int power_settings=0x7f1302ea;
        public static final int pref_left_button=0x7f13015c;
        public static final int pref_radio=0x7f13015e;
        public static final int pref_right_button=0x7f13015d;
        public static final int preference_button=0x7f130135;
        public static final int preference_highlight_key=0x7f130000;
        public static final int preference_radiobutton=0x7f130050;
        public static final int preference_title=0x7f130051;
        public static final int preferredNetworkType=0x7f130195;
        public static final int prefs=0x7f1301cc;
        public static final int preview=0x7f1300c2;
        public static final int preview_text=0x7f13004e;
        public static final int preview_viewport=0x7f13004c;
        public static final int preview_window=0x7f13004d;
        public static final int print_menu_item_add_printer=0x7f130305;
        public static final int print_menu_item_search=0x7f130304;
        public static final int print_menu_item_settings=0x7f130306;
        public static final int print_settings=0x7f1302ee;
        public static final int priority_field=0x7f13026d;
        public static final int privacy_settings=0x7f1302e7;
        public static final int processes=0x7f130174;
        public static final int processes_name=0x7f130175;
        public static final int profileExpand=0x7f130134;
        public static final int profile_owner_warning=0x7f1300b4;
        public static final int profile_spinner=0x7f1301d2;
        public static final int profiles_label=0x7f1300be;
        public static final int profiles_section=0x7f1300bf;
        public static final int profiles_summary=0x7f130027;
        public static final int profiles_text=0x7f130026;
        public static final int progress_bar=0x7f13006e;
        public static final int prompt1=0x7f1301bf;
        public static final int prompt2=0x7f1301c1;
        public static final int prompt3=0x7f1301c3;
        public static final int properties_fragment=0x7f13004f;
        public static final int provider_icon=0x7f1301ee;
        public static final int provider_id=0x7f1301f0;
        public static final int proxy_exclusionlist=0x7f130288;
        public static final int proxy_exclusionlist_text=0x7f130287;
        public static final int proxy_fields=0x7f130284;
        public static final int proxy_hostname=0x7f130285;
        public static final int proxy_pac=0x7f130283;
        public static final int proxy_pac_field=0x7f130282;
        public static final int proxy_port=0x7f130286;
        public static final int proxy_settings=0x7f130280;
        public static final int proxy_settings_fields=0x7f13027e;
        public static final int proxy_settings_title=0x7f13027f;
        public static final int proxy_warning_limited_support=0x7f130281;
        public static final int radio_group=0x7f1301a4;
        public static final int radio_power=0x7f130196;
        public static final int radio_state=0x7f1301a3;
        public static final int radiobutton=0x7f130025;
        public static final int received=0x7f130193;
        public static final int redact_sensitive=0x7f1301a5;
        public static final int refresh_smsc=0x7f13019e;
        public static final int regulatoryInfo=0x7f1301a8;
        public static final int remember=0x7f1301a9;
        public static final int repeat_message=0x7f1300e5;
        public static final int reset_app_preferences=0x7f130300;
        public static final int reset_network_subscription=0x7f1301aa;
        public static final int reset_oob=0x7f130257;
        public static final int resets=0x7f13018e;
        public static final int resource=0x7f1300fa;
        public static final int retryButton=0x7f1301cd;
        public static final int rightSpacer=0x7f130064;
        public static final int right_button=0x7f13020b;
        public static final int ringer_description_text=0x7f13013b;
        public static final int ringer_mute_button=0x7f13013c;
        public static final int ringer_section=0x7f13013a;
        public static final int ringer_volume_seekbar=0x7f13013d;
        public static final int roaming=0x7f130187;
        public static final int routes=0x7f13022f;
        public static final int row_divider=0x7f130016;
        public static final int rssi=0x7f1302b7;
        public static final int rule_name=0x7f1302c4;
        public static final int rule_name_warning=0x7f1302c5;
        public static final int rule_type_3=0x7f1302c9;
        public static final int rule_type_4=0x7f1302ca;
        public static final int rule_type_5=0x7f1302cb;
        public static final int rule_type_event=0x7f1302c8;
        public static final int rule_type_schedule=0x7f1302c7;
        public static final int rule_types=0x7f1302c6;
        public static final int running_processes=0x7f130106;
        public static final int save=0x7f1300c3;
        public static final int save_login=0x7f130233;
        public static final int save_msg_button=0x7f1300d9;
        public static final int scale=0x7f130031;
        public static final int scan_list=0x7f1302be;
        public static final int scanning_progress=0x7f130152;
        public static final int scanning_progress_bar=0x7f1302a1;
        public static final int screen_pinning_description=0x7f1301b9;
        public static final int search=0x7f130303;
        public static final int search_domains=0x7f13022d;
        public static final int search_panel=0x7f1301ba;
        public static final int security=0x7f130253;
        public static final int security_fields=0x7f130263;
        public static final int security_settings=0x7f1302e3;
        public static final int security_settings_billing_desc=0x7f13012c;
        public static final int security_settings_billing_list=0x7f13012d;
        public static final int security_settings_desc=0x7f13012f;
        public static final int security_settings_list=0x7f130130;
        public static final int security_settings_premium_sms_list=0x7f13012e;
        public static final int security_text=0x7f13025e;
        public static final int security_wfa=0x7f13025f;
        public static final int select_all=0x7f1300cb;
        public static final int select_all_cb=0x7f1300cc;
        public static final int sendbroadcast=0x7f1300fb;
        public static final int sent=0x7f130192;
        public static final int sentSinceReceived=0x7f130194;
        public static final int series=0x7f130087;
        public static final int server=0x7f13021f;
        public static final int service=0x7f1301b6;
        public static final int settings_button=0x7f130153;
        public static final int settings_divider=0x7f130133;
        public static final int setup_wizard_layout=0x7f1300e3;
        public static final int setup_wizard_navbar_back=0x7f1301d0;
        public static final int setup_wizard_navbar_next=0x7f1301d1;
        public static final int seven=0x7f130204;
        public static final int shortcut=0x7f13016a;
        public static final int show_all=0x7f1301a6;
        public static final int show_options=0x7f13022b;
        public static final int show_password=0x7f130255;
        public static final int show_password_layout=0x7f130268;
        public static final int show_system=0x7f1302fc;
        public static final int signal=0x7f13016d;
        public static final int simIconSel=0x7f130155;
        public static final int simNameSel=0x7f130159;
        public static final int simNumFormatSel=0x7f130157;
        public static final int simNumSel=0x7f13015a;
        public static final int simStatusSel=0x7f130156;
        public static final int simTextinfoSel=0x7f130158;
        public static final int sim_color=0x7f130117;
        public static final int sim_info=0x7f130154;
        public static final int sim_lock_detail=0x7f1302ec;
        public static final int sim_lock_info=0x7f1302eb;
        public static final int sim_name=0x7f130116;
        public static final int sim_name_title=0x7f130115;
        public static final int sim_settings=0x7f1302d1;
        public static final int sim_slot=0x7f130275;
        public static final int sim_slot_fields=0x7f130274;
        public static final int six=0x7f130203;
        public static final int size=0x7f1301b4;
        public static final int skip_button=0x7f130150;
        public static final int sms_over_ims=0x7f13019a;
        public static final int smsc=0x7f13019f;
        public static final int smsc_label=0x7f13019c;
        public static final int snippet=0x7f1301b5;
        public static final int sort_order_alpha=0x7f1302fe;
        public static final int sort_order_size=0x7f1302ff;
        public static final int spinner=0x7f130118;
        public static final int ssid=0x7f130252;
        public static final int start_message=0x7f1300e4;
        public static final int startactivity=0x7f1300fc;
        public static final int staticip=0x7f13028c;
        public static final int status=0x7f13002e;
        public static final int status_bar_latest_event_content=0x7f130102;
        public static final int storage_format=0x7f13030a;
        public static final int storage_migrate=0x7f13030b;
        public static final int storage_mount=0x7f130308;
        public static final int storage_rename=0x7f130307;
        public static final int storage_settings=0x7f1302da;
        public static final int storage_unmount=0x7f130309;
        public static final int storage_wizard_body=0x7f1301d5;
        public static final int storage_wizard_init_external_summary=0x7f1301d8;
        public static final int storage_wizard_init_external_title=0x7f1301d7;
        public static final int storage_wizard_init_internal_summary=0x7f1301da;
        public static final int storage_wizard_init_internal_title=0x7f1301d9;
        public static final int storage_wizard_migrate_later=0x7f1301dc;
        public static final int storage_wizard_migrate_now=0x7f1301db;
        public static final int storage_wizard_progress=0x7f1301e1;
        public static final int storage_wizard_progress_summary=0x7f1301e2;
        public static final int storage_wizard_ready_body=0x7f1301e3;
        public static final int storage_wizard_second_body=0x7f1301d6;
        public static final int stupid_padding=0x7f13009c;
        public static final int subtitle=0x7f13016e;
        public static final int successes=0x7f130190;
        public static final int summary=0x7f13005e;
        public static final int supplicant_state=0x7f1302b6;
        public static final int suppression_text=0x7f130168;
        public static final int surface_view=0x7f13021a;
        public static final int suw_bottom_scroll_view=0x7f1301e9;
        public static final int suw_layout_content=0x7f1301e6;
        public static final int suw_layout_decor=0x7f1301e4;
        public static final int suw_layout_header=0x7f1301ea;
        public static final int suw_layout_navigation_bar=0x7f1301dd;
        public static final int suw_layout_progress=0x7f1301e8;
        public static final int suw_layout_progress_stub=0x7f1301e7;
        public static final int suw_layout_title=0x7f1301e5;
        public static final int suw_navbar_back=0x7f1301de;
        public static final int suw_navbar_more=0x7f1301df;
        public static final int suw_navbar_next=0x7f1301e0;
        public static final int sweep_limit=0x7f13008a;
        public static final int sweep_warning=0x7f130089;
        public static final int switchWidget=0x7f13001c;
        public static final int switch_bar=0x7f1301ca;
        public static final int switch_ime_button=0x7f130076;
        public static final int switch_text=0x7f1301eb;
        public static final int switch_widget=0x7f1301ec;
        public static final int switchbar=0x7f130080;
        public static final int syncStatusIcon=0x7f130005;
        public static final int sync_active=0x7f13016c;
        public static final int sync_failed=0x7f13016b;
        public static final int sync_settings_error_info=0x7f130006;
        public static final int systemSize=0x7f1301ae;
        public static final int systemSizePrefix=0x7f1301ad;
        public static final int system_expandable_list=0x7f1301f9;
        public static final int system_list=0x7f1301f8;
        public static final int system_progress=0x7f1301f7;
        public static final int system_section=0x7f1302e8;
        public static final int system_tab=0x7f1301f6;
        public static final int tabs=0x7f13001e;
        public static final int tabs_container=0x7f13009d;
        public static final int technology=0x7f130035;
        public static final int temperature=0x7f130034;
        public static final int text=0x7f13002c;
        public static final int text_layout=0x7f13000c;
        public static final int text_off=0x7f13021d;
        public static final int text_on=0x7f13021c;
        public static final int three=0x7f130200;
        public static final int tile_divider=0x7f130081;
        public static final int time=0x7f13024d;
        public static final int time_picker=0x7f1300ab;
        public static final int time_picker_title=0x7f1300aa;
        public static final int time_zone_button=0x7f1300a4;
        public static final int timestamp=0x7f130127;
        public static final int timezone_auto_time=0x7f1300a3;
        public static final int timezone_dropdown_anchor=0x7f1300a1;
        public static final int title=0x7f13004a;
        public static final int titleDivider=0x7f1300fd;
        public static final int title_area=0x7f1301ed;
        public static final int topLayout=0x7f130057;
        public static final int top_divider=0x7f13006d;
        public static final int top_divider_no_progress=0x7f1302a2;
        public static final int top_level=0x7f1301cb;
        public static final int top_padding=0x7f13029f;
        public static final int top_padding_layout=0x7f13029e;
        public static final int transfer_file=0x7f130038;
        public static final int transfer_icon=0x7f130037;
        public static final int transfer_info=0x7f13003a;
        public static final int trash_user=0x7f130167;
        public static final int trusted_credential_status=0x7f1301f4;
        public static final int trusted_credential_subject_primary=0x7f1301f2;
        public static final int trusted_credential_subject_secondary=0x7f1301f3;
        public static final int trusted_devices_prompt_layout=0x7f13011d;
        public static final int tts_engine_pref=0x7f130160;
        public static final int tts_engine_pref_text=0x7f130162;
        public static final int tts_engine_radiobutton=0x7f130161;
        public static final int tts_engine_settings=0x7f130163;
        public static final int tv_rom=0x7f13007a;
        public static final int two=0x7f1301ff;
        public static final int two_buttons_panel=0x7f130171;
        public static final int type=0x7f130114;
        public static final int typeSpinner=0x7f13020c;
        public static final int type_pin_field=0x7f13025b;
        public static final int unmount=0x7f13015f;
        public static final int update=0x7f1302b3;
        public static final int update_smsc=0x7f13019d;
        public static final int uptime=0x7f130036;
        public static final int usage_time=0x7f130210;
        public static final int user_cert=0x7f13027b;
        public static final int user_dict_settings_add_dialog_top=0x7f130212;
        public static final int user_dictionary_add_shortcut=0x7f130216;
        public static final int user_dictionary_add_shortcut_label=0x7f130215;
        public static final int user_dictionary_add_word_grid=0x7f130214;
        public static final int user_dictionary_add_word_text=0x7f130213;
        public static final int user_expandable_list=0x7f1301fd;
        public static final int user_id=0x7f1301ef;
        public static final int user_limits_fragment=0x7f130218;
        public static final int user_list=0x7f1301fc;
        public static final int user_name=0x7f1300c6;
        public static final int user_photo=0x7f1300c5;
        public static final int user_progress=0x7f1301fb;
        public static final int user_settings=0x7f1302dd;
        public static final int user_tab=0x7f1301fa;
        public static final int username=0x7f130231;
        public static final int value=0x7f130293;
        public static final int vertical=0x7f130002;
        public static final int voltage=0x7f130033;
        public static final int volte_provisioned_flag=0x7f130199;
        public static final int vpn_create=0x7f13030c;
        public static final int vpn_lockdown=0x7f13030d;
        public static final int wapi_as_cert=0x7f13026b;
        public static final int wapi_cert_fields=0x7f13026a;
        public static final int wapi_security=0x7f130262;
        public static final int wapi_user_cert=0x7f13026c;
        public static final int warning_low_charge=0x7f130072;
        public static final int warning_unplugged=0x7f130073;
        public static final int wfd_sink_countdown_num=0x7f130234;
        public static final int wfd_sink_countdown_title1=0x7f130235;
        public static final int wfd_sink_countdown_title2=0x7f130236;
        public static final int wfd_sink_guide_content=0x7f130238;
        public static final int wfd_sink_guide_ok_btn=0x7f130239;
        public static final int wfd_sink_guide_title=0x7f130237;
        public static final int widget_list=0x7f1300ff;
        public static final int widget_text1=0x7f13024a;
        public static final int widget_text2=0x7f13024b;
        public static final int wifi_advanced_fields=0x7f130270;
        public static final int wifi_advanced_toggle=0x7f13026e;
        public static final int wifi_advanced_togglebox=0x7f13026f;
        public static final int wifi_config_ui=0x7f1302a8;
        public static final int wifi_defalut_pins_togglebox=0x7f130299;
        public static final int wifi_ip_address=0x7f13028d;
        public static final int wifi_ip_settings=0x7f13028a;
        public static final int wifi_pin_code=0x7f13029b;
        public static final int wifi_pin_code_fields=0x7f13029a;
        public static final int wifi_progressbar=0x7f130097;
        public static final int wifi_settings=0x7f1302cd;
        public static final int wifi_settings_fragment_layout=0x7f1302a6;
        public static final int wifi_setup_add_network=0x7f1302ae;
        public static final int wifi_setup_cancel=0x7f1302af;
        public static final int wifi_setup_connect=0x7f1302b0;
        public static final int wifi_setup_fragment=0x7f1302a7;
        public static final int wifi_setup_refresh_list=0x7f1302b2;
        public static final int wifi_setup_skip_or_next=0x7f1302b1;
        public static final int wifi_setup_title=0x7f1302a0;
        public static final int wifi_state=0x7f1302b4;
        public static final int wifi_title=0x7f130096;
        public static final int wifi_usage=0x7f130098;
        public static final int wifi_wps=0x7f13030e;
        public static final int wifi_wps_em=0x7f130294;
        public static final int wifi_wps_em_key=0x7f130298;
        public static final int wifi_wps_em_ssid=0x7f130296;
        public static final int wifi_wps_pin_fields=0x7f130295;
        public static final int wireless_section=0x7f1302cc;
        public static final int wireless_settings=0x7f1302d4;
        public static final int wpa_security=0x7f130260;
        public static final int wpa_security_wfa=0x7f130261;
        public static final int wps_dialog_btn=0x7f1302c2;
        public static final int wps_dialog_txt=0x7f1302bf;
        public static final int wps_mode=0x7f13025a;
        public static final int wps_mode_filed=0x7f130259;
        public static final int wps_progress_bar=0x7f1302c1;
        public static final int wps_timeout_bar=0x7f1302c0;
        public static final int zero=0x7f130208;
    }
    public static final class integer {
        public static final int bluetooth_name_length=0x7f0f0007;
        /**  Dashboard number of columns 
 Dashboard number of columns 
 Dashboard number of columns 
 Dashboard number of columns 
         */
        public static final int dashboard_num_columns=0x7f0f0002;
        public static final int keyguard_appwidget_picker_cols=0x7f0f0008;
        /**  TODO: This is purely enforced by the interface, and does not affect what
         strings may be inserted into the actual content provider.
         With the addition of shortcuts, it seems more likely that users will
         find this limiting; it would be good to have the interface work with
         very long strings too. 
         */
        public static final int maximum_user_dictionary_word_length=0x7f0f0001;
        /**  Scrollbar style OUTSIDE_OVERLAY 
         */
        public static final int preference_scrollbar_style=0x7f0f0009;
        /**  Weight of the left pane in a multi-pane preference layout. 
 Weight of the left pane in a multi-pane preference layout. 
         */
        public static final int preferences_left_pane_weight=0x7f0f0004;
        /**  Weight of the right pane in a multi-pane preference layout. So the split is 40:60 
 Weight of the right pane in a multi-pane preference layout. So the split is 1:2 
         */
        public static final int preferences_right_pane_weight=0x7f0f0005;
        /**  The duration (in milliseconds) of activity transitions 
         */
        public static final int setup_wizard_transition_duration=0x7f0f0003;
        /**  Sim Card Name length 
         */
        public static final int sim_name_length=0x7f0f0006;
        /**  The duration (in milliseconds) of activity transitions 
         */
        public static final int suwTransitionDuration=0x7f0f0000;
    }
    public static final class interpolator {
        public static final int enrollment_fingerprint_isolated_animation_interpolator_0=0x7f070000;
        public static final int enrollment_fingerprint_isolated_animation_interpolator_1=0x7f070001;
        public static final int enrollment_fingerprint_isolated_animation_interpolator_2=0x7f070002;
    }
    public static final class layout {
        public static final int account_preference=0x7f040000;
        public static final int account_sync_screen=0x7f040001;
        public static final int account_type_preference=0x7f040002;
        public static final int add_account_screen=0x7f040003;
        public static final int android_beam=0x7f040004;
        public static final int android_beam_plus=0x7f040005;
        public static final int apn_preference_layout=0x7f040006;
        public static final int app_cache_settings=0x7f040007;
        public static final int app_domains_dialog=0x7f040008;
        public static final int app_domains_item=0x7f040009;
        public static final int app_header=0x7f04000a;
        public static final int app_item=0x7f04000b;
        public static final int app_ops_details=0x7f04000c;
        public static final int app_ops_details_item=0x7f04000d;
        public static final int app_ops_item=0x7f04000e;
        public static final int app_ops_summary=0x7f04000f;
        public static final int app_preference_item=0x7f040010;
        public static final int app_preferred_settings=0x7f040011;
        public static final int apps_filter_spinner=0x7f040012;
        public static final int apps_spinner_dropdown_item=0x7f040013;
        public static final int apps_spinner_item=0x7f040014;
        public static final int audio_profile_item=0x7f040015;
        public static final int band_mode=0x7f040016;
        public static final int band_width_usage_editor=0x7f040017;
        public static final int battery_history_chart=0x7f040018;
        public static final int battery_info=0x7f040019;
        public static final int beam_share_mgmt=0x7f04001a;
        public static final int beam_share_mgmt_item=0x7f04001b;
        public static final int beam_share_mgmt_tab=0x7f04001c;
        public static final int bluetooth_access=0x7f04001d;
        public static final int bluetooth_device_picker=0x7f04001e;
        public static final int bluetooth_device_settings=0x7f04001f;
        public static final int bluetooth_device_settings_header=0x7f040020;
        public static final int bluetooth_pin_confirm=0x7f040021;
        public static final int bluetooth_pin_entry=0x7f040022;
        public static final int bluetooth_preference_category=0x7f040023;
        public static final int bookmark_picker_item=0x7f040024;
        public static final int cancel_pref_widget=0x7f040025;
        public static final int captioning_preview=0x7f040026;
        public static final int card_emulation_item=0x7f040027;
        public static final int choose_lock_generic_fingerprint_header=0x7f040028;
        public static final int choose_lock_password=0x7f040029;
        public static final int choose_lock_pattern=0x7f04002a;
        public static final int color_picker_item=0x7f04002b;
        public static final int confirm_lock_password=0x7f04002c;
        public static final int confirm_lock_password_base=0x7f04002d;
        public static final int confirm_lock_pattern=0x7f04002e;
        public static final int confirm_lock_pattern_base=0x7f04002f;
        public static final int credentials_dialog=0x7f040030;
        public static final int credentials_disallowed_preference_screen=0x7f040031;
        public static final int crypt_keeper_blank=0x7f040032;
        public static final int crypt_keeper_confirm=0x7f040033;
        public static final int crypt_keeper_emergency_button=0x7f040034;
        public static final int crypt_keeper_password_entry=0x7f040035;
        public static final int crypt_keeper_password_field=0x7f040036;
        public static final int crypt_keeper_pattern_entry=0x7f040037;
        public static final int crypt_keeper_pattern_field=0x7f040038;
        public static final int crypt_keeper_pin_entry=0x7f040039;
        public static final int crypt_keeper_pin_field=0x7f04003a;
        public static final int crypt_keeper_progress=0x7f04003b;
        public static final int crypt_keeper_settings=0x7f04003c;
        public static final int crypt_keeper_status=0x7f04003d;
        public static final int crypt_keeper_switch_input_method=0x7f04003e;
        public static final int custom_preference=0x7f04003f;
        public static final int cy_storage_memory_clean=0x7f040040;
        public static final int cystorage_private=0x7f040041;
        public static final int cystorage_volume=0x7f040042;
        public static final int dashboard=0x7f040043;
        public static final int dashboard_category=0x7f040044;
        public static final int dashboard_tile=0x7f040045;
        public static final int data_saving_screen=0x7f040046;
        public static final int data_usage_app_title=0x7f040047;
        public static final int data_usage_bytes_editor=0x7f040048;
        public static final int data_usage_chart=0x7f040049;
        public static final int data_usage_cycle_editor=0x7f04004a;
        public static final int data_usage_cycle_item=0x7f04004b;
        public static final int data_usage_cycle_item_dropdown=0x7f04004c;
        public static final int data_usage_cycles=0x7f04004d;
        public static final int data_usage_detail=0x7f04004e;
        public static final int data_usage_exp_child_mobile_color_blue=0x7f04004f;
        public static final int data_usage_exp_child_mobile_color_indigo=0x7f040050;
        public static final int data_usage_exp_child_mobile_color_pink=0x7f040051;
        public static final int data_usage_exp_child_mobile_color_purple=0x7f040052;
        public static final int data_usage_exp_child_mobile_color_red=0x7f040053;
        public static final int data_usage_exp_child_mobile_color_teal=0x7f040054;
        public static final int data_usage_exp_child_wifi=0x7f040055;
        public static final int data_usage_header=0x7f040056;
        public static final int data_usage_item=0x7f040057;
        public static final int data_usage_summary=0x7f040058;
        public static final int date_time_settings_setupwizard=0x7f040059;
        public static final int date_time_setup_custom_list_item_2=0x7f04005a;
        public static final int default_apps_view=0x7f04005b;
        public static final int default_apps_view_item=0x7f04005c;
        public static final int delete_managed_profile_dialog=0x7f04005d;
        public static final int detail=0x7f04005e;
        public static final int device_admin_add=0x7f04005f;
        public static final int device_admin_item=0x7f040060;
        public static final int device_admin_settings=0x7f040061;
        public static final int device_profiles_settings=0x7f040062;
        public static final int dialog_edittext=0x7f040063;
        public static final int display=0x7f040064;
        public static final int dock_audio_media_enable_dialog=0x7f040065;
        public static final int dream_info_row=0x7f040066;
        public static final int edit_user_info_dialog_content=0x7f040067;
        public static final int edit_user_photo_popup_item=0x7f040068;
        public static final int emergency_add_contact=0x7f040069;
        public static final int emergency_add_contact_title_layout=0x7f04006a;
        public static final int emergency_assistant=0x7f04006b;
        public static final int emergency_contactinfo_list_item=0x7f04006c;
        public static final int emergency_delete_contact_title_layout=0x7f04006d;
        public static final int emergency_edit_msg=0x7f04006e;
        public static final int emergency_first_part=0x7f04006f;
        public static final int emergency_fourth_part=0x7f040070;
        public static final int emergency_second_part=0x7f040071;
        public static final int emergency_third_part=0x7f040072;
        public static final int empty_print_state=0x7f040073;
        public static final int empty_printers_list_service_enabled=0x7f040074;
        public static final int enable_accessibility_service_dialog_content=0x7f040075;
        public static final int encryption_interstitial=0x7f040076;
        public static final int filter_spinner_item=0x7f040077;
        public static final int fingerprint_enroll_enrolling=0x7f040078;
        public static final int fingerprint_enroll_enrolling_base=0x7f040079;
        public static final int fingerprint_enroll_enrolling_content=0x7f04007a;
        public static final int fingerprint_enroll_find_sensor=0x7f04007b;
        public static final int fingerprint_enroll_find_sensor_base=0x7f04007c;
        public static final int fingerprint_enroll_find_sensor_graphic=0x7f04007d;
        public static final int fingerprint_enroll_finish=0x7f04007e;
        public static final int fingerprint_enroll_finish_base=0x7f04007f;
        public static final int fingerprint_enroll_introduction=0x7f040080;
        public static final int fingerprint_enroll_onboard=0x7f040081;
        public static final int fingerprint_rename_dialog=0x7f040082;
        public static final int fingerprint_settings_footer=0x7f040083;
        public static final int grid_picker_dialog=0x7f040084;
        public static final int horizontal_preference=0x7f040085;
        public static final int hotknot_settings=0x7f040086;
        public static final int icc_lock_tabs=0x7f040087;
        public static final int ignore_optimizations_content=0x7f040088;
        public static final int installed_app_details=0x7f040089;
        public static final int intent_sender=0x7f04008a;
        public static final int keyboard_layout_dialog_switch_hint=0x7f04008b;
        public static final int keyguard_appwidget_item=0x7f04008c;
        public static final int keyguard_appwidget_picker_layout=0x7f04008d;
        public static final int list_group_header=0x7f04008e;
        public static final int loading_container=0x7f04008f;
        public static final int locale_picker=0x7f040090;
        public static final int location_list_no_item=0x7f040091;
        public static final int lossless_notification=0x7f040092;
        public static final int manage_accounts_screen=0x7f040093;
        public static final int manage_applications_apps=0x7f040094;
        public static final int manage_applications_running=0x7f040095;
        public static final int managed_service_settings=0x7f040096;
        public static final int master_clear=0x7f040097;
        public static final int master_clear_account=0x7f040098;
        public static final int master_clear_confirm=0x7f040099;
        public static final int master_clear_disallowed_screen=0x7f04009a;
        public static final int memory_key=0x7f04009b;
        public static final int multi_sim_dialog=0x7f04009c;
        public static final int network_reset_disallowed_screen=0x7f04009d;
        public static final int nfc_payment=0x7f04009e;
        public static final int nfc_payment_empty=0x7f04009f;
        public static final int nfc_payment_how_it_works=0x7f0400a0;
        public static final int nfc_payment_option=0x7f0400a1;
        public static final int notification_app=0x7f0400a2;
        public static final int notification_app_section=0x7f040156;
        public static final int notification_log_row=0x7f0400a3;
        public static final int ownerinfo=0x7f0400a4;
        public static final int permission_settings=0x7f0400a5;
        public static final int pick_item=0x7f0400a6;
        public static final int preference=0x7f0400a7;
        public static final int preference_app=0x7f0400a8;
        public static final int preference_app_restrictions=0x7f0400a9;
        public static final int preference_bluetooth=0x7f0400aa;
        public static final int preference_bluetooth_profile=0x7f0400ab;
        public static final int preference_bt_icon=0x7f0400ac;
        public static final int preference_button=0x7f0400ad;
        public static final int preference_color=0x7f0400ae;
        public static final int preference_dialog_ringervolume=0x7f0400af;
        public static final int preference_empty_list=0x7f0400b0;
        public static final int preference_header_button_item=0x7f0400b1;
        public static final int preference_header_item=0x7f0400b2;
        public static final int preference_header_switch_item=0x7f0400b3;
        public static final int preference_home_app=0x7f0400b4;
        public static final int preference_icon=0x7f0400b5;
        public static final int preference_inputmethod=0x7f0400b6;
        public static final int preference_linearcolor=0x7f0400b7;
        public static final int preference_list_fragment=0x7f0400b8;
        public static final int preference_material_settings=0x7f0400b9;
        public static final int preference_memoryusage=0x7f0400ba;
        public static final int preference_progress_category=0x7f0400bb;
        public static final int preference_rename_widget=0x7f0400bc;
        public static final int preference_settings_checkbox_widget=0x7f0400bd;
        public static final int preference_sim_default_select=0x7f0400be;
        public static final int preference_spellchecker=0x7f0400bf;
        public static final int preference_spellchecker_widget=0x7f0400c0;
        public static final int preference_start_widget=0x7f0400c1;
        public static final int preference_storage_action=0x7f0400c2;
        public static final int preference_tts_engine=0x7f0400c3;
        public static final int preference_user_delete_widget=0x7f0400c4;
        public static final int preference_volume_slider=0x7f0400c5;
        public static final int preference_vpn=0x7f0400c6;
        public static final int preference_widget_radiobutton=0x7f0400c7;
        public static final int preference_widget_settings=0x7f0400c8;
        public static final int preference_widget_shortcut=0x7f0400c9;
        public static final int preference_widget_sync_toggle=0x7f0400ca;
        public static final int preference_widget_wifi_signal=0x7f0400cb;
        public static final int preset_picker_item=0x7f0400cc;
        public static final int print_job_summary=0x7f0400cd;
        public static final int printer_dropdown_item=0x7f0400ce;
        public static final int proc_stats_ui=0x7f0400cf;
        public static final int process_preference_category=0x7f0400d0;
        public static final int process_stats_details=0x7f0400d1;
        public static final int process_stats_mem_details=0x7f0400d2;
        public static final int process_stats_proc_details=0x7f0400d3;
        public static final int profile_icon_small=0x7f0400d4;
        public static final int proxy=0x7f0400d5;
        public static final int radio_info=0x7f0400d6;
        public static final int radio_power_switch=0x7f0400d7;
        public static final int radio_with_summary=0x7f0400d8;
        public static final int redaction_interstitial=0x7f0400d9;
        public static final int regulatory_info=0x7f0400da;
        public static final int remember_dock_setting=0x7f0400db;
        public static final int reset_network=0x7f0400dc;
        public static final int reset_network_confirm=0x7f0400dd;
        public static final int running_processes_header=0x7f0400de;
        public static final int running_processes_item=0x7f0400df;
        public static final int running_processes_view=0x7f0400e0;
        public static final int running_service_details=0x7f0400e1;
        public static final int running_service_details_process=0x7f0400e2;
        public static final int running_service_details_service=0x7f0400e3;
        public static final int screen_pinning_instructions=0x7f0400e4;
        public static final int search_panel=0x7f0400e5;
        public static final int search_panel_results_header=0x7f0400e6;
        public static final int search_panel_suggestions_header=0x7f0400e7;
        public static final int search_result_item=0x7f0400e8;
        public static final int search_suggestion_item=0x7f0400e9;
        public static final int select_account_list_item=0x7f0400ea;
        public static final int separator_label=0x7f0400eb;
        public static final int set_backup_pw=0x7f0400ec;
        public static final int settings_color_picker_item=0x7f0400ed;
        public static final int settings_main_dashboard=0x7f0400ee;
        public static final int settings_main_prefs=0x7f0400ef;
        public static final int settings_top_level=0x7f0400f0;
        public static final int setup_choose_lock_generic=0x7f0400f1;
        public static final int setup_choose_lock_password=0x7f0400f2;
        public static final int setup_choose_lock_pattern=0x7f0400f3;
        public static final int setup_choose_lock_pattern_common=0x7f0400f4;
        public static final int setup_encryption_interstitial=0x7f0400f5;
        public static final int setup_redaction_interstitial=0x7f0400f6;
        public static final int setup_screen_lock_fingerprint_details=0x7f0400f7;
        public static final int setup_wifi_add_network=0x7f0400f8;
        public static final int setup_wifi_empty=0x7f0400f9;
        public static final int setup_wifi_layout=0x7f0400fa;
        public static final int setup_wifi_mac_address=0x7f0400fb;
        public static final int setup_wizard_navbar_layout=0x7f0400fc;
        public static final int shortcut_badge=0x7f0400fd;
        public static final int single_button_panel=0x7f0400fe;
        public static final int spinner_view=0x7f0400ff;
        public static final int storage_internal_forget=0x7f040100;
        public static final int storage_internal_format=0x7f040101;
        public static final int storage_internal_unmount=0x7f040102;
        public static final int storage_summary=0x7f040103;
        public static final int storage_volume=0x7f040104;
        public static final int storage_wizard_generic=0x7f040105;
        public static final int storage_wizard_init=0x7f040106;
        public static final int storage_wizard_migrate=0x7f040107;
        public static final int storage_wizard_navigation=0x7f040108;
        public static final int storage_wizard_progress=0x7f040109;
        public static final int storage_wizard_ready=0x7f04010a;
        public static final int suw_list_header=0x7f04010b;
        public static final int suw_list_template=0x7f040152;
        public static final int suw_list_template_card=0x7f04010c;
        public static final int suw_list_template_card_wide=0x7f04010d;
        public static final int suw_list_template_header=0x7f04010e;
        public static final int suw_list_template_header_collapsed=0x7f04010f;
        public static final int suw_list_template_short=0x7f040153;
        public static final int suw_navbar_view=0x7f040110;
        public static final int suw_no_scroll_template=0x7f040154;
        public static final int suw_no_scroll_template_card=0x7f040111;
        public static final int suw_no_scroll_template_card_wide=0x7f040112;
        public static final int suw_no_scroll_template_header=0x7f040113;
        public static final int suw_no_scroll_template_header_collapsed=0x7f040114;
        public static final int suw_no_scroll_template_short=0x7f040155;
        public static final int suw_progress_bar=0x7f040115;
        public static final int suw_progress_bar_stub=0x7f040116;
        public static final int suw_template=0x7f040150;
        public static final int suw_template_card=0x7f040117;
        public static final int suw_template_card_wide=0x7f040118;
        public static final int suw_template_header=0x7f040119;
        public static final int suw_template_header_collapsed=0x7f04011a;
        public static final int suw_template_short=0x7f040151;
        public static final int switch_bar=0x7f04011b;
        public static final int tab_widget=0x7f04011c;
        public static final int tall_preference_category=0x7f04011d;
        public static final int text_description_preference=0x7f04011e;
        public static final int title=0x7f04011f;
        public static final int trust_agent_item=0x7f040120;
        public static final int trusted_credential=0x7f040121;
        public static final int trusted_credential_details=0x7f040122;
        public static final int trusted_credentials=0x7f040123;
        public static final int twelve_key_entry=0x7f040124;
        public static final int two_buttons_panel=0x7f040125;
        public static final int two_line_list_item=0x7f040126;
        public static final int usage_stats=0x7f040127;
        public static final int usage_stats_item=0x7f040128;
        public static final int usb_dialog_container=0x7f040129;
        public static final int user_dictionary_add_word=0x7f04012a;
        public static final int user_dictionary_add_word_fullscreen=0x7f04012b;
        public static final int user_dictionary_item=0x7f04012c;
        public static final int user_info_header=0x7f04012d;
        public static final int user_limits=0x7f04012e;
        public static final int user_preference=0x7f04012f;
        public static final int video_view=0x7f040130;
        public static final int vpn_dialog=0x7f040131;
        public static final int vpn_lockdown_editor=0x7f040132;
        public static final int weak_voice_fallback_header=0x7f040133;
        public static final int wfd_sink_countdown=0x7f040134;
        public static final int wfd_sink_guide=0x7f040135;
        public static final int widget=0x7f040136;
        public static final int widget_progress_bar=0x7f040137;
        public static final int widget_text_views=0x7f040138;
        public static final int wifi_advance_layout=0x7f040139;
        public static final int wifi_ap_bandwidth_usage=0x7f04013a;
        public static final int wifi_ap_bandwidth_usage_chart=0x7f04013b;
        public static final int wifi_ap_client_dialog=0x7f04013c;
        public static final int wifi_ap_dialog=0x7f04013d;
        public static final int wifi_ap_wps_dialog=0x7f04013e;
        public static final int wifi_api_test=0x7f04013f;
        public static final int wifi_config_info=0x7f040140;
        public static final int wifi_dialog=0x7f040141;
        public static final int wifi_dialog_row=0x7f040142;
        public static final int wifi_dialog_wps_em=0x7f040143;
        public static final int wifi_display_options=0x7f040144;
        public static final int wifi_display_preference=0x7f040145;
        public static final int wifi_notify_scan_mode=0x7f040146;
        public static final int wifi_progress_header=0x7f040147;
        public static final int wifi_settings_for_setup_wizard_xl=0x7f040148;
        public static final int wifi_setup_custom_list_item_1=0x7f040149;
        public static final int wifi_status_test=0x7f04014a;
        public static final int wifi_wps_dialog=0x7f04014b;
        public static final int work_profile_category=0x7f04014c;
        public static final int write_wifi_config_to_nfc=0x7f04014d;
        public static final int zen_rule_name=0x7f04014e;
        public static final int zen_schedule_rule_day=0x7f04014f;
    }
    public static final class menu {
        public static final int account_settings=0x7f140000;
        public static final int data_usage=0x7f140001;
        public static final int manage_apps=0x7f140002;
        public static final int misc_files_menu=0x7f140003;
        public static final int options_menu=0x7f140004;
        public static final int print_service_settings=0x7f140005;
        public static final int storage_volume=0x7f140006;
        public static final int vpn=0x7f140007;
        public static final int wifi_setup=0x7f140008;
        public static final int zen_mode_rule=0x7f140009;
    }
    public static final class mipmap {
        public static final int ic_launcher_settings=0x7f030000;
    }
    public static final class plurals {
        /**  Description of settings item that leads to list of all apps with Domain URLs [CHAR LIMIT=NONE] 
         */
        public static final int domain_urls_apps_summary=0x7f11000f;
        /**  Description of number of apps with high power turned on [CHAR LIMIT=NONE] 
         */
        public static final int high_power_count=0x7f110010;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of letters 
         */
        public static final int lockpassword_password_requires_letters=0x7f110002;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of lowercase letters 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_letters (5677371623980347934) 
         */
        public static final int lockpassword_password_requires_lowercase=0x7f110003;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of non-letter characters 
         */
        public static final int lockpassword_password_requires_nonletter=0x7f110007;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of numerical digits 
         */
        public static final int lockpassword_password_requires_numeric=0x7f110005;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of special symbols 
         */
        public static final int lockpassword_password_requires_symbols=0x7f110006;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of uppercase letters 
         */
        public static final int lockpassword_password_requires_uppercase=0x7f110004;
        /**  Summary of preference to manage notification listeners, when one or more are enabled
         and are therefore able to read the user's notifications 
         */
        public static final int manage_notification_access_summary_nonzero=0x7f110009;
        /**  Description of number of apps using memory [CHAR LIMIT=NONE] 
         */
        public static final int memory_usage_apps_summary=0x7f110011;
        /**  Permissions preference summary [CHAR LIMIT=40] 
         */
        public static final int permissions_summary=0x7f11000c;
        /**  Runtime permissions preference summary.  Number of additional permissions granted. [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_additional_count=0x7f11000e;
        /**  Runtime permissions preference summary [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_summary=0x7f11000d;
        /**  message shown for menu item that launches fingerprint settings or enrollment 
         */
        public static final int security_settings_fingerprint_preference_summary=0x7f110001;
        /**  [CHAR LIMIT=NONE] Device Info screen. Countdown for user taps to enable development settings 
         */
        public static final int show_dev_countdown=0x7f110000;
        /**  Instructions telling the user that they entered the wrong SIM PIN while trying to unlock the keyguard.  Displayed in a dialog box.  [CHAR LIMIT=100] 
         */
        public static final int wrong_pin_code=0x7f110008;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for N hours. 
         */
        public static final int zen_mode_summary_alarms_only_by_hour=0x7f11000b;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for < 60 minutes. 
         */
        public static final int zen_mode_summary_alarms_only_by_minute=0x7f11000a;
    }
    public static final class raw {
        public static final int media_volume=0x7f090000;
    }
    public static final class string {
        /**  Main Settings screen setting option title for the item to take you to the Accounts screen [CHAR LIMIT=22] 
         */
        public static final int Accounts_settings_title=0x7f0b025c;
        public static final int Phone_vibrate_summary=0x7f0b00c5;
        /**  [C2K solution 2 enhancement end] 
 WifiCalling setting start 
         */
        public static final int Switch_not_in_use_string=0x7f0b014c;
        /**  Main settings screen, setting title for the user to go into the About phone screen 
 Main settings screen, setting title for the user to go into the About phone screen 
         */
        public static final int about_settings=0x7f0b0571;
        /**  Main settings screen, setting summary for the user to go into the About phone screen
         */
        public static final int about_settings_summary=0x7f0b0572;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is clear 
 Sound & display settings screen, accelerometer-based rotation summary text when check box is clear 
         */
        public static final int accelerometer_summary_off=0x7f0b0411;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is selected 
 Sound & display settings screen, accelerometer-based rotation summary text when check box is selected 
         */
        public static final int accelerometer_summary_on=0x7f0b0410;
        /**  Sound & display settings screen, accelerometer-based rotation check box label 
         */
        public static final int accelerometer_title=0x7f0b040f;
        /**  Access point names title.  [CHAR LIMIT=50] 
         */
        public static final int access_point_names=0x7f0b09f4;
        /**  Title for the accessibility preference screen to enable video captioning. [CHAR LIMIT=35] 
         */
        public static final int accessibility_captioning_title=0x7f0b06df;
        /**  Content description for personal profile accounts group [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_category_personal=0x7f0b0409;
        /**  Content description for work profile accounts group [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_category_work=0x7f0b0408;
        /**  Subtitle for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_daltonizer_preference_subtitle=0x7f0b06f1;
        /**  Title for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_daltonizer_preference_title=0x7f0b06f0;
        /**  Subtitle for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_inversion_preference_subtitle=0x7f0b06ef;
        /**  Title for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_inversion_preference_title=0x7f0b06ee;
        /**  Title for the accessibility preference category of display related preferences. [CHAR LIMIT=25] 
         */
        public static final int accessibility_display_title=0x7f0b06de;
        /**  Summary when an accessibility feature or ime is not permitted. [CHAR LIMIT=40] 
         */
        public static final int accessibility_feature_or_input_method_not_allowed=0x7f0b06fd;
        /**  Summary for the disabled state of an accessibility feature. [CHAR LIMIT=10] 
         */
        public static final int accessibility_feature_state_off=0x7f0b06fc;
        /**  Summary for the enabled state of an accessibility feature. [CHAR LIMIT=10] 
         */
        public static final int accessibility_feature_state_on=0x7f0b06fb;
        /**   Description for the preference screen to enable the global geture taht turns on accessibility. [CHAR LIMIT=none] 
         */
        public static final int accessibility_global_gesture_preference_description=0x7f0b06e5;
        /**  Summary for the preference screen to enable the global geture that turns on accessibility (off state). [CHAR LIMIT=35] 
         */
        public static final int accessibility_global_gesture_preference_summary_off=0x7f0b06e4;
        /**  Summary for the preference to enable the global geture that turns on accessibility (on state). [CHAR LIMIT=60] 
         */
        public static final int accessibility_global_gesture_preference_summary_on=0x7f0b06e3;
        /**  Title for the preference to enable the global geture that turns on accessibility. [CHAR LIMIT=35] 
         */
        public static final int accessibility_global_gesture_preference_title=0x7f0b06e2;
        /**  Number of characters used for lock screen text [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_lock_screen_progress=0x7f0b0b89;
        /**  Title for accessibility preference to choose long-press delay i.e. timeout before it is detected. [CHAR LIMIT=35] 
         */
        public static final int accessibility_long_press_timeout_preference_title=0x7f0b06ed;
        /**  Title for accessibility menu item to lauch a settings activity. [CHAR LIMIT=15] 
         */
        public static final int accessibility_menu_item_settings=0x7f0b06fa;
        /**  Title for the prompt shown as a placeholder if no accessibility serivices are installed. [CHAR LIMIT=50] 
         */
        public static final int accessibility_no_services_installed=0x7f0b0728;
        /**  Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_wifi=0x7f0b003c;
        /**  Content description for personal profile details page title [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_personal_account_title=0x7f0b040b;
        /**  Title for the accessibility preference to power button to end a call. [CHAR LIMIT=35] 
         */
        public static final int accessibility_power_button_ends_call_prerefence_title=0x7f0b06eb;
        /**  Summary for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=none] 
         */
        public static final int accessibility_screen_magnification_summary=0x7f0b06e1;
        /**  Title for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_screen_magnification_title=0x7f0b06e0;
        /**  Default description for an accessibility serivice if the latter doesn't provide one. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_service_default_description=0x7f0b0729;
        /**  Title for the accessibility preference category of accessibility services. [CHAR LIMIT=25] 
         */
        public static final int accessibility_services_title=0x7f0b06dc;
        /**  Settings title in main settings screen for accessibility settings 
         */
        public static final int accessibility_settings=0x7f0b06da;
        /**  Settings title for accessibility settings screen 
         */
        public static final int accessibility_settings_title=0x7f0b06db;
        /**  Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_disabled=0x7f0b0883;
        /**  Content description of the enabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_enabled=0x7f0b0882;
        /**  Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_error=0x7f0b0885;
        /**  Content description of the in progress sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_in_progress=0x7f0b0884;
        /**  Title for the accessibility preference category of system related preferences. [CHAR LIMIT=25] 
         */
        public static final int accessibility_system_title=0x7f0b06dd;
        /**  Title for the accessibility preference to high contrast text. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_high_text_contrast_preference_title=0x7f0b06e7;
        /**  Title for the accessibility preference to enable large text. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_large_text_preference_title=0x7f0b06e6;
        /**  Summary for the accessibility preference to auto update screen magnification. [CHAR LIMIT=50] 
         */
        public static final int accessibility_toggle_screen_magnification_auto_update_preference_summary=0x7f0b06ea;
        /**  Title for the accessibility preference to auto update screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_screen_magnification_auto_update_preference_title=0x7f0b06e9;
        /**  Title for the accessibility preference to enable screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_screen_magnification_preference_title=0x7f0b06e8;
        /**  Title for the accessibility preference to speak passwords. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_speak_password_preference_title=0x7f0b06ec;
        /**  Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_off=0x7f0b003b;
        /**  Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_one_bar=0x7f0b003d;
        /**  Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_signal_full=0x7f0b0040;
        /**  Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_three_bars=0x7f0b003f;
        /**  Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_two_bars=0x7f0b003e;
        /**  Content description for work profile details page title [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_work_account_title=0x7f0b040a;
        /**  Account settings header. [CHAR LIMIT=30] 
         */
        public static final int account_settings=0x7f0b0405;
        /**   Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30] 
         */
        public static final int account_settings_menu_auto_sync=0x7f0b090f;
        /**   Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30] 
         */
        public static final int account_settings_menu_auto_sync_personal=0x7f0b0910;
        /**   Title for menu option to enable global auto-sync of work account data [CHAR LIMIT=30] 
         */
        public static final int account_settings_menu_auto_sync_work=0x7f0b0911;
        /**  Main Settings screen setting option title for the item to take you to the accounts screen [CHAR LIMIT=22] 
         */
        public static final int account_settings_title=0x7f0b025e;
        /**  Account specific sync settings title [CHAR LIMIT=35] 
         */
        public static final int account_sync_settings_title=0x7f0b0888;
        /**  Label for screen showing the active device policy 
         */
        public static final int active_device_admin_msg=0x7f0b0852;
        /**  Title for settings of active input methods in each IME [CHAR LIMIT=35] 
         */
        public static final int active_input_method_subtypes=0x7f0b068a;
        /**  Displayed when user launches a widget configuration activity that was uninstalled 
         */
        public static final int activity_not_found=0x7f0b05ae;
        /**  The title of the dialog to pick an activity.  This is shown when there are multiple activities that can do a particular action.  For example, suppose you click on the "Share" menu item in the Browser.  Since you can share the webpage URL via many communication methods, this dialog would come up with choices like "Email", "IM", etc.  This is a generic message, and the previous example is a single possible scenario (so please don't assume it's for the browser or anything :) ). 
         */
        public static final int activity_picker_label=0x7f0b0217;
        /**  Message of dialog confirming that user wants to revoke access to adb from all computers they have authorized 
         */
        public static final int adb_keys_warning_message=0x7f0b06bd;
        /**  Warning text to user about the implications of enabling USB debugging 
         */
        public static final int adb_warning_message=0x7f0b06bc;
        public static final int adb_warning_title=0x7f0b06bb;
        /**  Button label to add an account [CHAR LIMIT=20] 
         */
        public static final int add_account_label=0x7f0b088a;
        /**  Label for button to set the active device admin 
         */
        public static final int add_device_admin=0x7f0b085b;
        /**  Label for screen showing to add device policy 
         */
        public static final int add_device_admin_msg=0x7f0b085a;
        public static final int add_emergency_contact=0x7f0b0c4f;
        public static final int add_emergency_contact_prompt=0x7f0b0c55;
        public static final int add_emergency_contact_prompt_title=0x7f0b0c54;
        /**  Warning when trying to add a profile owner admin after setup has completed. [CHAR LIMIT=none] 
         */
        public static final int adding_profile_owner_warning=0x7f0b0860;
        /**  Label for button that leads to more permissions [CHAR LIMIT=40] 
         */
        public static final int additional_permissions=0x7f0b0b60;
        /**  Description of how many more permissions to view on next page [CHAR LIMIT=30] 
         */
        public static final int additional_permissions_more=0x7f0b0b61;
        /** add BUG_ID:DWLEBM-45 lihuachun 20160311(end)
         */
        public static final int additional_system_update=0x7f0b0ba3;
        public static final int additional_system_update_menu=0x7f0b0ba4;
        /**  A menu item in "About phone" that allows the user to update the phone with settings
    from their cell phone carrier. The use of the string is similar to the string
    "system_update_settings_list_item_title" in this project. [CHAR LIMIT=25] 
         */
        public static final int additional_system_update_settings_list_item_title=0x7f0b0983;
        /**  Title for advanced application management settings [CHAR LIMIT=30] 
         */
        public static final int advanced_apps=0x7f0b0b28;
        /**  Sound & notification: Advanced section header [CHAR LIMIT=30] 
         */
        public static final int advanced_section_header=0x7f0b0a78;
        /**  Title of preference group for advance security settings [CHAR LIMIT=30] 
         */
        public static final int advanced_security_title=0x7f0b0827;
        /**  Applications settings screen, setting check box title. If checked, applications show more settings options. 
         */
        public static final int advanced_settings=0x7f0b05b9;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Advanced settings" checkbox  
         */
        public static final int advanced_settings_summary=0x7f0b05ba;
        /**  Wireless controls settings screen, setting check box label 
         */
        public static final int airplane_mode=0x7f0b0226;
        /**  Sound & notification > Sound section: Title for the option managing alarm volume. [CHAR LIMIT=30] 
         */
        public static final int alarm_volume_option_title=0x7f0b0a6b;
        /**  Sound settings screen, alarm volume slider title 
         */
        public static final int alarm_volume_title=0x7f0b03ea;
        /**  Sound settings screen, volume title 
         */
        public static final int all_volume_title=0x7f0b03de;
        /**  Strings for Dialog allow button 
         */
        public static final int allow=0x7f0b0150;
        /**  Message in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_allow_bind=0x7f0b06cb;
        /**  Title in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_allow_bind_title=0x7f0b06ca;
        /**  Text for checkbox that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_always_allow_bind=0x7f0b06cc;
        /**  check box to allow data usage when roaming [CHAR LIMIT=41] 
         */
        public static final int allow_data_usage_title=0x7f0b022e;
        /**  Setting Checkbox title whether to allow mock locations 
         */
        public static final int allow_mock_location=0x7f0b06b7;
        /**  setting Checkbox summary whether to allow mock locations  
         */
        public static final int allow_mock_location_summary=0x7f0b06b8;
        /**  Description of allowing overlay setting [CHAR LIMIT=NONE] 
         */
        public static final int allow_overlay_description=0x7f0b0b91;
        /**  Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app was given user permission to create widgets. 
         */
        public static final int always_allow_bind_appwidgets_text=0x7f0b05d3;
        /**  Description of app always running [CHAR LIMIT=45] 
         */
        public static final int always_running=0x7f0b0b4e;
        /**  Amber alerts summary.  [CHAR LIMIT=60] 
         */
        public static final int amber_alerts_summary=0x7f0b09ec;
        /**  Amber alerts title.  [CHAR LIMIT=30] 
         */
        public static final int amber_alerts_title=0x7f0b09eb;
        /**  Used to describe the enabled state of the Android Beam feature when NFC, which it relies on, is turned off [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_disabled_summary=0x7f0b0332;
        /**  Explanation of the Android Beam feature in the Android Beam settings panel. The use of "beam" here is as a verb and not considered trademarked. [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_explained=0x7f0b0334;
        /**  Used in the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32] 
         */
        public static final int android_beam_label=0x7f0b0333;
        /**  Used to describe the off state of the Android Beam feature [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_off_summary=0x7f0b0331;
        /**  Used to describe the on state of the Android Beam feature [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_on_summary=0x7f0b0330;
        /**  Used to enter the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32] 
         */
        public static final int android_beam_settings_title=0x7f0b032f;
        /**  UI debug setting: scaling factor for all Animator-based animations [CHAR LIMIT=25] 
         */
        public static final int animator_duration_scale_title=0x7f0b08ed;
        /**  Edit access point labels: The actual access point name
         */
        public static final int apn_apn=0x7f0b04e8;
        /**  Edit acces  point labels: Authenticaton type
         */
        public static final int apn_auth_type=0x7f0b04f3;
        /**  Authentication Typs: CHAP 
         */
        public static final int apn_auth_type_chap=0x7f0b04f6;
        /**  Authentication Typs: None 
         */
        public static final int apn_auth_type_none=0x7f0b04f4;
        /**  Authentication Typs: PAP 
         */
        public static final int apn_auth_type_pap=0x7f0b04f5;
        /**  Authentication Typs: PAP or CHAP 
         */
        public static final int apn_auth_type_pap_chap=0x7f0b04f7;
        /**  Screen title after user selects APNs setting option 
         */
        public static final int apn_edit=0x7f0b04e5;
        /**  Edit access point labels: The port number of the proxy to use for this APN 
         */
        public static final int apn_http_port=0x7f0b04ea;
        /**  Edit access point labels: The addess of the proxy to use for this APN 
         */
        public static final int apn_http_proxy=0x7f0b04e9;
        /**  User setting end 
 wifiGprsSelector setting start 
 User setting end 
 wifiGprsSelector setting start 
 User setting end 
 wifiGprsSelector setting start 
         */
        public static final int apn_list_category_title=0x7f0b0142;
        /**  Edit access point labels: 
         */
        public static final int apn_mcc=0x7f0b04f1;
        /**  Edit access point labels: The port on the proxy used for MMS
         */
        public static final int apn_mms_port=0x7f0b04f0;
        /**  Edit access point labels: The proxy to use for MMS (multimedia messages)
         */
        public static final int apn_mms_proxy=0x7f0b04ef;
        /**  Edit access point labels: 
         */
        public static final int apn_mmsc=0x7f0b04ee;
        /**  Edit access point labels: 
         */
        public static final int apn_mnc=0x7f0b04f2;
        /**  Edit access point labels: A label the user can give to the APN to allow him to differentiate it from the others 
         */
        public static final int apn_name=0x7f0b04e7;
        /**  Edit access point label summary text when no value has been set 
 unknown quoting pattern: original -1, translation 1 
         */
        public static final int apn_not_set=0x7f0b04e6;
        /**  Edit access point labels: The password that will be used when connecting to this APN 
         */
        public static final int apn_password=0x7f0b04ec;
        public static final int apn_port_warning=0x7f0b0120;
        public static final int apn_predefine_change_dialog_notice=0x7f0b011f;
        /**  Edit access point labels: The protocol of the APN, e.g., "IPv4", "IPv6", or "IPv4/IPv6". 
         */
        public static final int apn_protocol=0x7f0b04f9;
        /**  Edit access point labels: The protocol of the APN when roaming, e.g., "IPv4", "IPv6", or "IPv4/IPv6". 
         */
        public static final int apn_roaming_protocol=0x7f0b04fa;
        /**  Edit access point labels: The server address to conenct to for this APN 
         */
        public static final int apn_server=0x7f0b04ed;
        /**  APN Settings 
 APN settings screen title 
         */
        public static final int apn_settings=0x7f0b04e4;
        /**  Error message for users that aren't allowed to modify Access Point Names settings [CHAR LIMIT=none] 
         */
        public static final int apn_settings_not_available=0x7f0b0696;
        /**  Edit access point labels: The type of APN 
         */
        public static final int apn_type=0x7f0b04f8;
        /**  Edit access point labels: The username that will be used when conencting to this APN
         */
        public static final int apn_user=0x7f0b04eb;
        /**  Title for data usage screen when entered from app info [CHAR LIMIT=30] 
         */
        public static final int app_data_usage=0x7f0b0b0d;
        /**  [CHAR LIMIT=30] Manage applications, label for option to disable app 
         */
        public static final int app_disable_dlg_positive=0x7f0b0619;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when disabling apps 
         */
        public static final int app_disable_dlg_text=0x7f0b061a;
        /**  [CHAR LIMIT=30] Manage applications, title for dialog when disabling apps 
         */
        public static final int app_disable_dlg_title=0x7f0b0618;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when disabling notifications for an app 
         */
        public static final int app_disable_notifications_dlg_text=0x7f0b061e;
        /**  [CHAR LIMIT=30] Manage applications, title for dialog when disabling notifications for an app 
         */
        public static final int app_disable_notifications_dlg_title=0x7f0b061d;
        /**  Manage applications, restore updated system application to factory version 
         */
        public static final int app_factory_reset=0x7f0b05d1;
        /**  Manage applications, factory reset option dialog text for system applications. 
         */
        public static final int app_factory_reset_dlg_text=0x7f0b05fa;
        /**  Manage applications, factory reset dialog title for system applications. 
         */
        public static final int app_factory_reset_dlg_title=0x7f0b05f9;
        public static final int app_forward_locked=0x7f0b060f;
        /**  Manage applications. application installation location summary 
         */
        public static final int app_install_location_summary=0x7f0b0617;
        /**  Manage applications, application installation location title 
         */
        public static final int app_install_location_title=0x7f0b0616;
        /**  Category name for App Launch 
         */
        public static final int app_launch_domain_links_title=0x7f0b0b06;
        public static final int app_launch_open_domain_urls_summary=0x7f0b0b08;
        public static final int app_launch_open_domain_urls_title=0x7f0b0b07;
        public static final int app_launch_other_defaults_title=0x7f0b0b0a;
        public static final int app_launch_supported_domain_urls_title=0x7f0b0b09;
        /**  Explanation that the app that will ALWAYS be launched to open web links to domains that it understands 
         */
        public static final int app_link_open_always=0x7f0b0b35;
        /**  Explanation that the user will be asked whether to launch the app to open web links to domains that it understands 
         */
        public static final int app_link_open_ask=0x7f0b0b36;
        /**  Explanation that the app that will NEVER be launched to open web links to domains that it understands 
         */
        public static final int app_link_open_never=0x7f0b0b37;
        /**  Label for app list of memory use [CHAR LIMIT=30] 
         */
        public static final int app_list_memory_use=0x7f0b0b72;
        /**  Label for None item in AppListPreference [CHAR LIMIT=40] 
         */
        public static final int app_list_preference_none=0x7f0b0b87;
        /**  [CHAR LIMIT=NONE] Label for amount of memory use 
         */
        public static final int app_memory_use=0x7f0b07ad;
        /**  label for application name 
         */
        public static final int app_name_label=0x7f0b06d7;
        /**  Manage applications, individual application dialog box message. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_text=0x7f0b05f7;
        /**  Manage applications, individual application dialog box title. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_title=0x7f0b05f6;
        /**  [CHAR LIMIT=NONE] App notification settings: Block option description
         */
        public static final int app_notification_block_summary=0x7f0b0a97;
        /**  [CHAR LIMIT=NONE] App notification settings: Block option title 
         */
        public static final int app_notification_block_title=0x7f0b0a96;
        /**  [CHAR LIMIT=NONE] App notification settings: Peekable option description
         */
        public static final int app_notification_peekable_summary=0x7f0b0a9b;
        /**  [CHAR LIMIT=NONE] App notification settings: Peekable option title 
         */
        public static final int app_notification_peekable_title=0x7f0b0a9a;
        /**  Link to an apps notification settings [CHAR LIMIT=50] 
         */
        public static final int app_notification_preferences=0x7f0b0b5e;
        /**  [CHAR LIMIT=NONE] App notification settings: Priority option description
         */
        public static final int app_notification_priority_summary=0x7f0b0a99;
        /**  [CHAR LIMIT=NONE] App notification settings: Priority option title 
         */
        public static final int app_notification_priority_title=0x7f0b0a98;
        /**  [CHAR LIMIT=20] Notification settings: App notifications row summary when banned 
         */
        public static final int app_notification_row_banned=0x7f0b0a9e;
        /**  [CHAR LIMIT=40] Notification settings: App notifications row summary when high priority 
         */
        public static final int app_notification_row_priority=0x7f0b0a9f;
        /**  [CHAR LIMIT=20] Notification settings: App notifications row summary when sensitive 
         */
        public static final int app_notification_row_sensitive=0x7f0b0aa0;
        /**  [CHAR LIMIT=NONE] App notification settings: Sensitive option description
         */
        public static final int app_notification_sensitive_summary=0x7f0b0a9d;
        /**  [CHAR LIMIT=NONE] App notification settings: Sensitive option title 
         */
        public static final int app_notification_sensitive_title=0x7f0b0a9c;
        /**  [CHAR LIMIT=20] Notification settings: App notifications dialog dismiss button caption 
         */
        public static final int app_notifications_dialog_done=0x7f0b0aa1;
        /**  Label for are-notifications-enabled checkbox in app details [CHAR LIMIT=20] 
         */
        public static final int app_notifications_switch_label=0x7f0b09e3;
        /**  Sound & notification > Notification section: Title for the option managing notifications per application. [CHAR LIMIT=30] 
         */
        public static final int app_notifications_title=0x7f0b0a80;
        /**  [CHAR LIMIT=NONE] Time label for an operation that has never executed. 
         */
        public static final int app_ops_never_used=0x7f0b0621;
        /**  [CHAR LIMIT=NONE] Time label for an operation that is currently running. 
         */
        public static final int app_ops_running=0x7f0b0620;
        /**  [CHAR LIMIT=NONE] App ops settings title, on main settings screen. If clicked, the user is taken to a settings screen for app operations 
         */
        public static final int app_ops_settings=0x7f0b061f;
        /**  Link to the apps page for SYSTEM_ALERT_WINDOW settings [CHAR LIMIT=45] 
         */
        public static final int app_overlay_permission_preference=0x7f0b0b90;
        /**  Label for list that shows all permissions 
         */
        public static final int app_permissions=0x7f0b0b2c;
        /**  Summary of number of apps currently granted a single permission [CHAR
        LIMIT=45] 
         */
        public static final int app_permissions_group_summary=0x7f0b0b2e;
        /**  Summary of permissions currently granted to apps [CHAR LIMIT=45] 
         */
        public static final int app_permissions_summary=0x7f0b0b2d;
        /**  UI debug setting: limit number of running background processes [CHAR LIMIT=25] 
         */
        public static final int app_process_limit_title=0x7f0b08f6;
        /**  Preference label for custom restrictions [CHAR LIMIT=35] 
         */
        public static final int app_restrictions_custom_label=0x7f0b09fc;
        /**  Summary text for apps that are allowed to access accounts from the primary user [CHAR LIMIT=none] 
         */
        public static final int app_sees_restricted_accounts=0x7f0b09fe;
        /**  Summary for a case when app entries that are controlled by another entry and app can access user accounts [CHAR LIMIT=none] 
         */
        public static final int app_sees_restricted_accounts_and_controlled_by=0x7f0b09ff;
        /**  [CHAR LIMIT=NONE] Manage applications, text for dialog when disabling update apps 
         */
        public static final int app_special_disable_dlg_text=0x7f0b061c;
        /**  [CHAR LIMIT=NONE] Manage applications, title for dialog when disabling updated apps 
         */
        public static final int app_special_disable_dlg_title=0x7f0b061b;
        /**  Link to the apps page for app usage settings [CHAR LIMIT=45] 
         */
        public static final int app_usage_preference=0x7f0b0b4a;
        /**  Manage applications, individual application info screen title. For example, if they click on "Browser" in "Manage applications", the title of the next screen will be this 
         */
        public static final int application_info_label=0x7f0b05bb;
        /**  Application Restrictions screen title [CHAR LIMIT=45] 
         */
        public static final int application_restrictions=0x7f0b09c5;
        /**  Manage applications, individual application info screen, label under Storage heading. The amount of space taken up by the application itself (for example, the java compield files and things like that) 
         */
        public static final int application_size_label=0x7f0b05c7;
        /**  Applications settings title, on main settings screen. If clicked, the user is taken to a settings screen full of application settings
         */
        public static final int applications_settings=0x7f0b05b1;
        /**  Applications settings screen heading. The header for the Application settings screen. 
         */
        public static final int applications_settings_header=0x7f0b05b3;
        /**  Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. 
 Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. This is the string to use for devices without a keyboard (so for example, there is no "Quick launch" settings here since that feature requires a keyboard) 
         */
        public static final int applications_settings_summary=0x7f0b05b2;
        /**  Title of app storage screen [CHAR LIMIT=30] 
         */
        public static final int apps_storage=0x7f0b0b47;
        /**  Applications with restrictions header [CHAR LIMIT=45] 
         */
        public static final int apps_with_restrictions_header=0x7f0b09c6;
        /**  Applicaitons with restrictions - settings button [CHAR LIMIT=30] 
         */
        public static final int apps_with_restrictions_settings_button=0x7f0b09c7;
        /**  Manage applications, individual application screen, checkbox to control asking for compatibility mode.  
         */
        public static final int ask_compatibility=0x7f0b05d7;
        /**  Summary for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=NONE] 
         */
        public static final int assist_access_context_summary=0x7f0b0b6b;
        /**  Title for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=40] 
         */
        public static final int assist_access_context_title=0x7f0b0b6a;
        /**  Summary for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=NONE] 
         */
        public static final int assist_access_screenshot_summary=0x7f0b0b6d;
        /**  Title for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=40] 
         */
        public static final int assist_access_screenshot_title=0x7f0b0b6c;
        /**  Title for Assist and voice input settings [CHAR LIMIT=30] 
         */
        public static final int assist_and_voice_input_title=0x7f0b0b3a;
        /**  Footer text in the manage assist screen. [CHAR LIMIT=NONE] 
         */
        public static final int assist_footer=0x7f0b0b6e;
        /**  [CHAR_LIMIT=NONE] Warning message about security implications of setting an assistant,
         displayed as a dialog message when the user selects an assistant. 
         */
        public static final int assistant_security_warning=0x7f0b0b3f;
        /**  Label for the button to acknowledge assistant security implications. [CHAR LIMIT=30] 
         */
        public static final int assistant_security_warning_agree=0x7f0b0b40;
        /**  Label for the button to bail out assistant security implications. [CHAR LIMIT=30] 
         */
        public static final int assistant_security_warning_disagree=0x7f0b0b41;
        /**  [CHAR_LIMIT=45] Title of the security warning dialog for setting an assitant 
         */
        public static final int assistant_security_warning_title=0x7f0b0b3e;
        /**  Security & location settings screen, setting check box label if Assisted GPS should be enabled 
         */
        public static final int assisted_gps=0x7f0b0569;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is clear 
         */
        public static final int assisted_gps_disabled=0x7f0b056b;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is selected 
         */
        public static final int assisted_gps_enabled=0x7f0b056a;
        /** modify DELSLMY-1613 guowen 20160418 start
<string name="audio_profile_add">"إضافة وضع صوتي"</string>
         */
        public static final int audio_profile_add=0x7f0b00ab;
        public static final int audio_profile_bes_loudness_summary=0x7f0b00c9;
        public static final int audio_profile_bes_loudness_title=0x7f0b00c8;
        /** modify DELSLMY-1613 guowen 20160418 end
 Modify:BUG_id DELSLMY-1399 wanlgin 20160407 
         */
        public static final int audio_profile_bes_surround_mode_movie=0x7f0b00d7;
        public static final int audio_profile_bes_surround_mode_music=0x7f0b00d8;
        /** modify DELSLMY-1613 guowen 20160418 start
<string name="audio_profile_bes_surround_summary">صوت محيطي</string>
         */
        public static final int audio_profile_bes_surround_summary=0x7f0b00d6;
        public static final int audio_profile_bes_surround_title=0x7f0b00d5;
        public static final int audio_profile_category_custom_title=0x7f0b00b5;
        public static final int audio_profile_category_predefine_title=0x7f0b00b6;
        public static final int audio_profile_delete=0x7f0b00ae;
        /** modify DELSLMY-1613 guowen 20160418 end
         */
        public static final int audio_profile_enable=0x7f0b00ac;
        public static final int audio_profile_error=0x7f0b00b7;
        public static final int audio_profile_message_delete=0x7f0b00b3;
        /** modify DELSLMY-1613 guowen 20160418 end
         */
        public static final int audio_profile_message_name_error=0x7f0b00b1;
        public static final int audio_profile_message_name_length_wrong=0x7f0b00b2;
        public static final int audio_profile_message_overflow=0x7f0b00b4;
        /** <string name="audio_profile_message_rename">برجاء إدخال اسم الوضع الصوتي الجديد</string>
         */
        public static final int audio_profile_message_rename=0x7f0b00b0;
        /** modify DELSLMY-1613 guowen 20160418 start
<string name="audio_profile_message_reset">سيتم إستعادة الإعدادات الإفتراضية لجميع أوضاع الصوت</string>
         */
        public static final int audio_profile_message_reset=0x7f0b00af;
        public static final int audio_profile_others=0x7f0b00b8;
        public static final int audio_profile_rename=0x7f0b00ad;
        public static final int audio_profile_reset=0x7f0b00aa;
        public static final int audio_profile_settings_title=0x7f0b00c7;
        /**  Sound settings screen, setting option name checkbox to enable/disable audio recording features that improve audio recording in noisy environments 
         */
        public static final int audio_record_proc_title=0x7f0b03f0;
        /**  Sound & display settings screen, setting option summary to enable adaptive brightness [CHAR LIMIT=100] 
         */
        public static final int auto_brightness_summary=0x7f0b0416;
        /**  Sound & display settings screen, setting option name to enable adaptive brightness [CHAR LIMIT=30] 
         */
        public static final int auto_brightness_title=0x7f0b0415;
        /**  On Text & language settings screen, setting option name.  title of the setting to enable autocapitalization of entered text.  for example, after the user finishes a sentence, the next letter he types will automatically be capitalizated. [CHAR LIMIT=25] 
         */
        public static final int auto_caps=0x7f0b0655;
        /**  On Text & language settings screen, setting summary. Summary for the Auto-cap setting. [CHAR LIMIT=100]
         */
        public static final int auto_caps_summary=0x7f0b0656;
        /**  Manage applications, individual application screen, text under Launch by default heading if the app is NOT a default for actions 
         */
        public static final int auto_launch_disable_text=0x7f0b05d4;
        /**  Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app is set as a default for some actions. 
         */
        public static final int auto_launch_enable_text=0x7f0b05d2;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions 
         */
        public static final int auto_launch_label=0x7f0b05bd;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions *and* whether the app was given permission by the user to create widgets 
         */
        public static final int auto_launch_label_generic=0x7f0b05be;
        /**  On Text & language settings screen, setting option name. title of the setting to enable automatic punctuation of entered text.  for example, it will change an entered "youre" to "you're". 
         */
        public static final int auto_punctuate=0x7f0b0657;
        /**  On Text & language settings screen, setting summary for the Auto-punctuate setting. 
         */
        public static final int auto_punctuate_summary=0x7f0b0659;
        /**  On Text & language settings screen, setting option name. title of the setting to enable autoreplace of entered text. auto replace is a feature that will automatically correct mistyped words. 
         */
        public static final int auto_replace=0x7f0b0653;
        /**  On Text & language settings screen, setting summary.  This is the summary for the "Auto-replace" setting. 
         */
        public static final int auto_replace_summary=0x7f0b0654;
        /**  Summary text of the "automatic restore" setting 
         */
        public static final int auto_restore_summary=0x7f0b0844;
        /**  Auto-restore menu title 
         */
        public static final int auto_restore_title=0x7f0b0843;
        /**  Sound & display settings screen, setting option name to change whether the screen adjusts automatically based on lighting conditions 
         */
        public static final int automatic_brightness=0x7f0b042b;
        /**  Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] 
         */
        public static final int available_via_passpoint=0x7f0b000e;
        /**  Label for average memory use section [CHAR LIMIT=30] 
         */
        public static final int average_memory_use=0x7f0b0b6f;
        /**  Label for average memory usage of device [CHAR LIMIT=25] 
         */
        public static final int average_used=0x7f0b0b7a;
        /**  CPU awake time title 
         */
        public static final int awake=0x7f0b075e;
        /**  Data synchronization settings screen, title of setting that controls whether background data should be used [CHAR LIMIT=30] 
         */
        public static final int background_data=0x7f0b088d;
        /**  Data synchronization settings screen, message of dialog that confirms the user's unchecking of background data [CHAR LIMIT=200] 
         */
        public static final int background_data_dialog_message=0x7f0b0890;
        /**  Data synchronization settings screen, title of dialog that confirms the user's unchecking of background data [CHAR LIMIT=20] 
         */
        public static final int background_data_dialog_title=0x7f0b088f;
        /**  Data synchronization settings screen, summary of setting that controls whether background data should be used [CHAR LIMIT=60] 
         */
        public static final int background_data_summary=0x7f0b088e;
        /**  Running service details, description for background process. 
         */
        public static final int background_process_stop_description=0x7f0b0646;
        /**  Default summary text of the "Configure backup account" setting [CHAR LIMIT=80]
         */
        public static final int backup_configure_account_default_summary=0x7f0b0846;
        /**  Configure backup account options menu title [CHAR LIMIT=25]
         */
        public static final int backup_configure_account_title=0x7f0b0841;
        /**  Summary text of the "back up data" setting 
         */
        public static final int backup_data_summary=0x7f0b0840;
        /**  Backup data menu title 
         */
        public static final int backup_data_title=0x7f0b083f;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_message=0x7f0b084e;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_title=0x7f0b084d;
        /**  Title of the preference informing the user about the backup service being inactive [CHAR LIMIT=50]
         */
        public static final int backup_inactive_title=0x7f0b0845;
        /**  Button label for cancelling the new-password operation and retaining the user's previous full-backup password 
         */
        public static final int backup_pw_cancel_button_text=0x7f0b0982;
        /**  Button label for setting the user's new full-backup password 
         */
        public static final int backup_pw_set_button_text=0x7f0b0981;
        /**  Backup section title 
         */
        public static final int backup_section_title=0x7f0b083d;
        /**  Band mode screen. Status message when unsuccessful. 
         */
        public static final int band_mode_failed=0x7f0b0207;
        /**  Band mode screen.  Loading message. 
         */
        public static final int band_mode_loading=0x7f0b0205;
        /**  Band mode screen. Button caption to set the bandmode. 
         */
        public static final int band_mode_set=0x7f0b0206;
        /**  Band mode screen. Statusm essage when successful. 
         */
        public static final int band_mode_succeeded=0x7f0b0208;
        /**  Band Mode Selection 
 Band mode screen.  Title of activity. 
         */
        public static final int band_mode_title=0x7f0b0204;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int baseband_version=0x7f0b0454;
        /**  Label for app details action 
         */
        public static final int battery_action_app_details=0x7f0b0785;
        /**  Label for app settings action 
         */
        public static final int battery_action_app_settings=0x7f0b0786;
        /**  Label for bluetooth settings 
         */
        public static final int battery_action_bluetooth=0x7f0b0789;
        /**  Label for display settings 
         */
        public static final int battery_action_display=0x7f0b0787;
        /**  Label for force stop action 
         */
        public static final int battery_action_stop=0x7f0b0784;
        /**  Label for wifi settings 
         */
        public static final int battery_action_wifi=0x7f0b0788;
        /**  [CHAR LIMIT=50] Description for power consumed by applications 
         */
        public static final int battery_desc_apps=0x7f0b0797;
        /**  Description for bluetooth power consumption detail 
         */
        public static final int battery_desc_bluetooth=0x7f0b0794;
        /**  [CHAR_LIMIT=NONE] Description for power consumed by the camera 
         */
        public static final int battery_desc_camera=0x7f0b078f;
        /**  Description for power consumed by display 
         */
        public static final int battery_desc_display=0x7f0b0790;
        /**  [CHAR_LIMIT=NONE] Description for power consumed by the flashlight 
         */
        public static final int battery_desc_flashlight=0x7f0b078e;
        /**  [CHAR LIMIT=50] Description for over-counted power use 
         */
        public static final int battery_desc_overcounted=0x7f0b079e;
        /**  Description for cell radio detail 
         */
        public static final int battery_desc_radio=0x7f0b078c;
        /**  Description for standby detail 
 Description for standby detail 
         */
        public static final int battery_desc_standby=0x7f0b078b;
        /**  [CHAR LIMIT=50] Description for unaccounted power use 
         */
        public static final int battery_desc_unaccounted=0x7f0b079c;
        /**  [CHAR LIMIT=50] Description for power consumed by users 
         */
        public static final int battery_desc_users=0x7f0b079b;
        /**  Description for voice call detail 
         */
        public static final int battery_desc_voice=0x7f0b078a;
        /**  Description for wifi connectivity 
         */
        public static final int battery_desc_wifi=0x7f0b0792;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days=0x7f0b06cd;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days_no_seconds=0x7f0b06d1;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours=0x7f0b06ce;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours_no_seconds=0x7f0b06d2;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes=0x7f0b06cf;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes_no_seconds=0x7f0b06d3;
        /**  Used to show an amount of time in the form "s seconds" in BatteryHistory 
         */
        public static final int battery_history_seconds=0x7f0b06d0;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_awake_battery=0x7f0b0bbb;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_awake_plugged=0x7f0b0bbc;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_cold=0x7f0b0bca;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_dead=0x7f0b0bc7;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_good=0x7f0b0bc5;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_label=0x7f0b0bb4;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_over_voltage=0x7f0b0bc8;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_overheat=0x7f0b0bc6;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_unknown=0x7f0b0bc4;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_unspecified_failure=0x7f0b0bc9;
        /**  The title of the activity to see battery info. 
         */
        public static final int battery_info_label=0x7f0b0bcd;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_level_label=0x7f0b0bb3;
        public static final int battery_info_power_ac=0x7f0b0bbf;
        public static final int battery_info_power_ac_usb=0x7f0b0bc2;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_power_label=0x7f0b0bb1;
        public static final int battery_info_power_unknown=0x7f0b0bc3;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_power_unplugged=0x7f0b0bbe;
        public static final int battery_info_power_usb=0x7f0b0bc0;
        public static final int battery_info_power_wireless=0x7f0b0bc1;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_scale_label=0x7f0b0bb2;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_screen_on=0x7f0b0bbd;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging from an unknown source.  
         */
        public static final int battery_info_status_charging=0x7f0b0188;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging on AC.  
         */
        public static final int battery_info_status_charging_ac=0x7f0b0189;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging over USB.  
         */
        public static final int battery_info_status_charging_usb=0x7f0b018a;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging over a wireless connection.  
         */
        public static final int battery_info_status_charging_wireless=0x7f0b018b;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_discharging=0x7f0b018c;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_full=0x7f0b018e;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_label=0x7f0b0bb0;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_not_charging=0x7f0b018d;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_unknown=0x7f0b0187;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_technology_label=0x7f0b0bb5;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_temperature_label=0x7f0b0bb8;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_temperature_units=0x7f0b0bb9;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_uptime=0x7f0b0bba;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_voltage_label=0x7f0b0bb6;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_voltage_units=0x7f0b0bb7;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_level_title=0x7f0b04e3;
        /**  [CHAR LIMIT=NONE] Description for unaccounted power use 
         */
        public static final int battery_msg_unaccounted=0x7f0b079d;
        /** Add, DaiHongyi, JWBLB-54, emergency assistant, 20150520, End
A:DELSLMY-686 guoshuai 20160308(start)
A: kuangyunfeng 20160112(end)
A:DELSLMY-686 guoshuai 20160308(start)
Add, DaiHongyi, JWBLB-54, emergency assistant, 20150520, End
A:DELSLMY-686 guoshuai 20160308(start)
A: kuangyunfeng 20160112(end)
A:DELSLMY-686 guoshuai 20160308(start)
         */
        public static final int battery_percent=0x7f0b0c5c;
        /**  [CHAR_LIMIT=40] Battery saver: Label for feature, title + menu item 
         */
        public static final int battery_saver=0x7f0b07a7;
        /**  [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: Never 
         */
        public static final int battery_saver_turn_on_automatically_never=0x7f0b07a9;
        /**  [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: pct% battery 
         */
        public static final int battery_saver_turn_on_automatically_pct=0x7f0b07aa;
        /**  [CHAR_LIMIT=40] Battery saver: Title for automatic entry option 
         */
        public static final int battery_saver_turn_on_automatically_title=0x7f0b07a8;
        /**  Battery usage since user reset the stats 
         */
        public static final int battery_since_reset=0x7f0b0753;
        /**  Battery usage since unplugged 
         */
        public static final int battery_since_unplugged=0x7f0b0752;
        /**  [CHAR LIMIT=25] Label for battery stats camera on state graph 
         */
        public static final int battery_stats_camera_on_label=0x7f0b0759;
        /**  [CHAR LIMIT=25] Label for battery stats charging state graph 
         */
        public static final int battery_stats_charging_label=0x7f0b0756;
        /**  Battery usage duration 
         */
        public static final int battery_stats_duration=0x7f0b0755;
        /**  [CHAR LIMIT=25] Label for battery stats flashlight on state graph 
         */
        public static final int battery_stats_flashlight_on_label=0x7f0b075a;
        /**  [CHAR LIMIT=25] Label for battery stats gps on state graph 
         */
        public static final int battery_stats_gps_on_label=0x7f0b0758;
        /**  Battery usage during last unplugged period 
         */
        public static final int battery_stats_last_duration=0x7f0b0c0d;
        /**  Battery usage on battery duration 
         */
        public static final int battery_stats_on_battery=0x7f0b0754;
        /**  [CHAR LIMIT=25] Label for battery stats phone signal strength graph 
         */
        public static final int battery_stats_phone_signal_label=0x7f0b075d;
        /**  [CHAR LIMIT=25] Label for battery stats screen on state graph 
         */
        public static final int battery_stats_screen_on_label=0x7f0b0757;
        /**  [CHAR LIMIT=25] Label for battery stats wake lock state graph 
         */
        public static final int battery_stats_wake_lock_label=0x7f0b075c;
        /**  [CHAR LIMIT=25] Label for battery stats wifi running state graph 
         */
        public static final int battery_stats_wifi_running_label=0x7f0b075b;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_status_title=0x7f0b04e2;
        /**  [CHAR LIMIT=100] Suggestion for getting apps to consume less power due to GPS
         */
        public static final int battery_sugg_apps_gps=0x7f0b0799;
        /**  Suggestion for exploring application info to stop or uninstall 
         */
        public static final int battery_sugg_apps_info=0x7f0b0798;
        /**  Suggestion for getting apps to consume less power 
         */
        public static final int battery_sugg_apps_settings=0x7f0b079a;
        /**  Suggestion for bluetooth 
         */
        public static final int battery_sugg_bluetooth_basic=0x7f0b0795;
        /**  Suggestion for bluetooth headset 
         */
        public static final int battery_sugg_bluetooth_headset=0x7f0b0796;
        /**  Suggestion for reducing display power 
         */
        public static final int battery_sugg_display=0x7f0b0791;
        /**  Suggestion to switch to airplane mode to save power 
         */
        public static final int battery_sugg_radio=0x7f0b078d;
        /**  Suggestion for wifi connectivity power drain 
         */
        public static final int battery_sugg_wifi=0x7f0b0793;
        /**  Summary of power usage for an app [CHAR LIMIT=NONE] 
         */
        public static final int battery_summary=0x7f0b0b5c;
        /**  MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
 MTK NFC settings end 
 MTK Beam plus start 
         */
        public static final int beam_mgmt_tab_download_title=0x7f0b00ec;
        public static final int beam_mgmt_tab_upload_title=0x7f0b00ed;
        public static final int beam_share_clear_confirm_dialog_message=0x7f0b00fb;
        public static final int beam_share_clear_confirm_dialog_title=0x7f0b00fa;
        public static final int beam_share_clear_item_dailog_message=0x7f0b00fe;
        public static final int beam_share_clear_item_dailog_title=0x7f0b00fd;
        public static final int beam_share_history_title=0x7f0b00f9;
        public static final int beam_share_mgmt_notification_message=0x7f0b00f0;
        public static final int beam_share_mgmt_notification_ticker=0x7f0b00ee;
        public static final int beam_share_mgmt_notification_title=0x7f0b00ef;
        public static final int beam_share_mgmt_tab_menu_clear=0x7f0b00f1;
        public static final int beam_share_open_file_dialog_title=0x7f0b00f2;
        public static final int beam_share_open_file_not_found_message=0x7f0b00f4;
        public static final int beam_share_open_file_unsupported_message=0x7f0b00f3;
        public static final int beam_share_receive_fail_dialog_message=0x7f0b00fc;
        public static final int beam_share_resend_dialog_message=0x7f0b00f6;
        public static final int beam_share_resend_dialog_ok_button=0x7f0b00f7;
        public static final int beam_share_show_received_files_menu=0x7f0b00f8;
        public static final int beam_share_transfer_fail_dialog_title=0x7f0b00f5;
        /**  Edit Beaerer Info of APN 
         */
        public static final int bearer=0x7f0b04fe;
        /**  MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
 MTK Hetcomm end 
 Background power saving start 
         */
        public static final int bg_power_saving_title=0x7f0b013f;
        /**  Message to describe "BLE scan always available feature" when Bluetooth is off. The
      place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They mark a link to bring
      the user to "scanning settings" screen. 
         */
        public static final int ble_scan_notify_text=0x7f0b030a;
        /**  Used as setting title (for checkbox) on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth=0x7f0b018f;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
         */
        public static final int bluetooth_a2dp_profile_summary_connected=0x7f0b0023;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
         */
        public static final int bluetooth_a2dp_profile_summary_use_for=0x7f0b002f;
        /**  Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
 Voice unlock end 
 MTK Bluetooth Settings start 
         */
        public static final int bluetooth_advanced_settings=0x7f0b013c;
        /**  Bluetooth settings. Title of the advanced bluetooth settings screen [CHAR LIMIT=30]
         */
        public static final int bluetooth_advanced_titlebar=0x7f0b0308;
        /**  Strings for asking to the user whether to allow an app to enable discovery mode 
 Strings for asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_ask_discovery=0x7f0b01b2;
        /**  This string asks the user whether or not to allow an app to enable bluetooth. [CHAR LIMIT=100] 
         */
        public static final int bluetooth_ask_enablement=0x7f0b01b1;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode 
 Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode 
         */
        public static final int bluetooth_ask_enablement_and_discovery=0x7f0b01b7;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode 
         */
        public static final int bluetooth_ask_enablement_and_lasting_discovery=0x7f0b01b8;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth and start broadcasting 
         */
        public static final int bluetooth_ask_enablement_and_start_broadcast=0x7f0b01b5;
        /**  Strings for asking to the user whether to allow an app to enable lasting discovery mode  
         */
        public static final int bluetooth_ask_lasting_discovery=0x7f0b01b3;
        /**  Strings for asking to the user whether to allow an app to start broadcasting 
         */
        public static final int bluetooth_ask_start_broadcast=0x7f0b01b4;
        /**  Strings for device profile auto connect setting 
         */
        public static final int bluetooth_auto_connect=0x7f0b01bb;
        /**  Bluetooth broadcasting settings, option to enable/disable broadcasting 
         */
        public static final int bluetooth_broadcasting=0x7f0b01a4;
        /**  Strings for bluetooth broadcasting explanation 
         */
        public static final int bluetooth_broadcasting_explaination=0x7f0b01b6;
        /**  Message for confirmation of passkey to complete pairing. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_confirm_passkey_msg=0x7f0b02eb;
        /**  Bluetooth settings.  The title of the screen to pick which profiles to connect to on the device.  For example, headphones may have both A2DP and headset, this allows the user to choose which one he wants to connect to. 
         */
        public static final int bluetooth_connect_specific_profiles_title=0x7f0b030b;
        /**  Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected=0x7f0b0013;
        /**  Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_a2dp=0x7f0b0016;
        /**  Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset=0x7f0b0015;
        /**  Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset_no_a2dp=0x7f0b0018;
        /**  Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_map=0x7f0b0017;
        /**  Bluetooth settings.  Message when connecting to a device 
         */
        public static final int bluetooth_connecting=0x7f0b0012;
        /**  Message for the error dialog when BT connecting operation fails generically. 
         */
        public static final int bluetooth_connecting_error_message=0x7f0b02f0;
        /**  Bluetooth connection permission Alert Activity text [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_dialog_text=0x7f0b01be;
        /**  Notification message when a remote Bluetooth device wants to connect to a Bluetooth profile [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_notif_message=0x7f0b01bd;
        /**  Activity label of BluetoothPermissionActivity [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_permission_request=0x7f0b01bc;
        /** Bluetooth settings screen, summary text for Bluetooth device with no name 
         */
        public static final int bluetooth_device=0x7f0b01a8;
        /**  Bluetooth settings. Connection options screen. Title for checkbox to enable incoming file transfers [CHAR LIMIT=30] 
         */
        public static final int bluetooth_device_advanced_enable_opp_title=0x7f0b0316;
        /**  Bluetooth settings.  Connection options screen.  The summary of the online mode checkbox.  This describes what the setting does in the context of the screen. 
         */
        public static final int bluetooth_device_advanced_online_mode_summary=0x7f0b0313;
        /**  Bluetooth settings.  Connection options screen.  The title of the checkbox that controls whether the device is in "online" mode or "offline" mode.  This essentially is the checkbox that controls whether any checks / unchecks on a profile should be applied immediately, or next time the device is connected. 
         */
        public static final int bluetooth_device_advanced_online_mode_title=0x7f0b0312;
        /**  Bluetooth settings.  Connection options screen.  The title of the header that is above all of the profiles.
         When a user decides what Bluetooth capabilities to use with the device.  
         */
        public static final int bluetooth_device_advanced_profile_header_title=0x7f0b0314;
        /**  Bluetooth settings. Connection options screen. Title for option to rename the device. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_device_advanced_rename_device=0x7f0b0315;
        /**  Bluetooth settings.  Connection options screen.  The title of the screen. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_device_advanced_title=0x7f0b0311;
        /**  Bluetooth settings.  Context menu item for a device.  Action will connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_connect=0x7f0b0301;
        /**  Bluetooth settings.  Context menu item for a device.  Action will take the user to another screen where they can choose exactly which profiles to connect to. 
         */
        public static final int bluetooth_device_context_connect_advanced=0x7f0b0306;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect from all profiles on the device. 
         */
        public static final int bluetooth_device_context_disconnect=0x7f0b0302;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect and remove pairing with the device. 
         */
        public static final int bluetooth_device_context_disconnect_unpair=0x7f0b0305;
        /**  Bluetooth settings.  Context menu item for a device.  Action will first pair, and then connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_pair_connect=0x7f0b0303;
        /**  Bluetooth settings.  Context menu item for a device.  Action will remove pairing with the device. 
         */
        public static final int bluetooth_device_context_unpair=0x7f0b0304;
        /**  Bluetooth settings screen, image description for device details button. This opens the screen to rename, unpair, etc. a single device. 
         */
        public static final int bluetooth_device_details=0x7f0b0199;
        /**  Bluetooth settings screen, title for the current bluetooth name setting 
         */
        public static final int bluetooth_device_name=0x7f0b0198;
        /**  Bluetooth settings screen, heading above the list of nearby bluetooth devices 
         */
        public static final int bluetooth_devices=0x7f0b0197;
        /**  Bluetooth settings.  Message for disabling a profile of a bluetooth device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_disable_profile_message=0x7f0b01a6;
        /**  Bluetooth settings.  Dialog title to disable a single profile of a device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_disable_profile_title=0x7f0b01a5;
        /**  Bluetooth settings.  Message for disconnecting from the A2DP profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_a2dp_profile=0x7f0b030c;
        /**  Bluetooth settings.  Message for disconnecting from all profiles of a bluetooth device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_disconnect_all_profiles=0x7f0b01a0;
        /**  Bluetooth settings.  Message for disconnecting from the headset profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_headset_profile=0x7f0b030d;
        /**  Bluetooth settings.  Message for disconnecting from the HID profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_hid_profile=0x7f0b030e;
        /**  Bluetooth settings.  Message for disconnecting from the PAN profile (NAP role). [CHAR LIMIT=80] 
 Bluetooth settings.  Message for disconnecting from the PAN profile (NAP role). [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_pan_nap_profile=0x7f0b0310;
        /**  Bluetooth settings.  Message for disconnecting from the PAN profile (user role). [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_pan_user_profile=0x7f0b030f;
        /**  Bluetooth settings.  Dialog title to confirm disconnecting from all profiles of a device. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_disconnect_title=0x7f0b019f;
        /**  Bluetooth settings.  Message when a device is disconnected 
         */
        public static final int bluetooth_disconnected=0x7f0b0010;
        /**  Bluetooth settings.  Message when disconnecting from a device 
         */
        public static final int bluetooth_disconnecting=0x7f0b0011;
        /**  Message when bluetooth dialog when passkey or pin needs to be displayed. 
         */
        public static final int bluetooth_display_passkey_pin_msg=0x7f0b02ed;
        /**  Bluetooth settings.  Dock Setting Title 
         */
        public static final int bluetooth_dock_settings=0x7f0b0317;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 2: Use dock for media audio 
         */
        public static final int bluetooth_dock_settings_a2dp=0x7f0b031a;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 1: Use dock as speaker phone 
         */
        public static final int bluetooth_dock_settings_headset=0x7f0b0319;
        /**  Bluetooth settings.  Dock Setting Dialog - Remember setting and don't ask user again 
         */
        public static final int bluetooth_dock_settings_remember=0x7f0b031b;
        /**  Bluetooth settings.  Dock Setting Dialog Title 
         */
        public static final int bluetooth_dock_settings_title=0x7f0b0318;
        /**  Bluetooth settings. Text displayed when Bluetooth is off and device list is empty [CHAR LIMIT=50]
         */
        public static final int bluetooth_empty_list_bluetooth_off=0x7f0b0309;
        /**  Bluetooth Settings. text displayed when user has restriction DISALLOW_CONFIG_BLUETOOTH [CHAR LIMIT=NONE]
         */
        public static final int bluetooth_empty_list_user_restricted=0x7f0b01a1;
        /**  Checkbox label for alphanumeric PIN entry (default is numeric PIN). [CHAR LIMIT=50] 
         */
        public static final int bluetooth_enable_alphanumeric_pin=0x7f0b02e6;
        /**  Message when bluetooth dialog for passkey entry is showing. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_passkey_msg=0x7f0b02e5;
        /**  Pairing dialog text to remind user to enter the passkey on the other device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_passkey_other_device=0x7f0b02ea;
        /**  Pairing dialog text to remind user to enter the PIN on the other device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_pin_other_device=0x7f0b02e9;
        /**  Title for BT error dialogs. 
         */
        public static final int bluetooth_error_title=0x7f0b02ef;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
         */
        public static final int bluetooth_headset_profile_summary_connected=0x7f0b0024;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
         */
        public static final int bluetooth_headset_profile_summary_use_for=0x7f0b0030;
        /**  Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
         */
        public static final int bluetooth_hid_profile_summary_connected=0x7f0b0029;
        /**  Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
         */
        public static final int bluetooth_hid_profile_summary_use_for=0x7f0b0032;
        /**  Message when bluetooth incoming pairing request for (2.1 devices) dialog is showing 
 syntax error in translation for bluetooth_confirm_passkey_msg (3708312912841950052) org.xmlpull.v1.XmlPullParserException: name expected (position:START_TAG <null>@1:243 in     <string name="bluetooth_confirm_passkey_msg" msgid="3708312912841950052">"Zum Pairing mit:&gt;&lt;b&gt;<xliff:g id="DEVICE_NAME">%1$s</xliff:g>&lt;/b&gt;&lt;br&gt;&lt;br&gt;Vergewissern Sie sich, dass folgender Zugangscode angezeigt wird:<&lt;br&gt;&lt;b&gt;P<xliff:g id="PASSKEY">%2$s</xliff:g>&lt;/b&gt;."</string>
)  
         */
        public static final int bluetooth_incoming_pairing_msg=0x7f0b02ec;
        /**  Bluetooth Visibility discoonect question.  Asks the user if they wish to disconnect a paired bluetooth device.  [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_disconnect_question=0x7f0b01a3;
        /**  Bluetooth settings screen, summary after selecting Discoverable check box [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_discoverable=0x7f0b0190;
        /**  Bluetooth settings screen, summary when Discoverable duration is set to "forever" [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_discoverable_always=0x7f0b0191;
        /**  Bluetooth Visibility message.  This message informs the user that their device is now visible to other bluetooth devices.  [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_is_visible_message=0x7f0b01a2;
        /**  Bluetooth settings screen, check box label whether or not to allow
        bluetooth voice dialing when lock screen is up
         */
        public static final int bluetooth_lock_voice_dialing=0x7f0b0195;
        /**  Bluetooth settings screen, lock voice dialing checkbox summary text 
         */
        public static final int bluetooth_lock_voice_dialing_summary=0x7f0b0196;
        /**  Bluetooth message permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_map_acceptance_dialog_text=0x7f0b01c4;
        /**  Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
         */
        public static final int bluetooth_map_profile_summary_connected=0x7f0b0026;
        /**  Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
         */
        public static final int bluetooth_map_profile_summary_use_for=0x7f0b002d;
        /**  Activity label of BluetoothMessagePermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_map_request=0x7f0b01c3;
        /**  Bluetooth settings.  Menu option to Bluetooth advanced settings [CHAR LIMIT=20]
         */
        public static final int bluetooth_menu_advanced=0x7f0b0307;
        /**  Bluetooth settings screen, summary text when there isn't a name set (for the name setting) 
         */
        public static final int bluetooth_name_not_set=0x7f0b019b;
        /** Bluetooth settings screen, text that appears when scanning for devices is finished and no nearby bluetooth device was found [CHAR LIMIT=40]
         */
        public static final int bluetooth_no_devices_found=0x7f0b01aa;
        /**  Bluetooth settings screen, summary text when not discoverable and no paired devices [CHAR LIMIT=50] 
         */
        public static final int bluetooth_not_visible_to_other_devices=0x7f0b0192;
        /**  Notification message when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_message=0x7f0b01ad;
        /**  Notification ticker text (shown in the status bar) when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_ticker=0x7f0b01ab;
        /**  Notification title when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_title=0x7f0b01ac;
        /**  Bluetooth on time 
         */
        public static final int bluetooth_on_time=0x7f0b0760;
        /**  Bluetooth settings screen, summary text when not discoverable with paired devices [CHAR LIMIT=50] 
         */
        public static final int bluetooth_only_visible_to_paired_devices=0x7f0b0193;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
         */
        public static final int bluetooth_opp_profile_summary_connected=0x7f0b0025;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
         */
        public static final int bluetooth_opp_profile_summary_not_connected=0x7f0b0028;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
         */
        public static final int bluetooth_opp_profile_summary_use_for=0x7f0b0031;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
         */
        public static final int bluetooth_pairing=0x7f0b0014;
        /**  Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_accept=0x7f0b0033;
        /**  Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_accept_all_caps=0x7f0b0034;
        /**  Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_decline=0x7f0b0035;
        /**  Message for the error dialog when BT pairing fails because the other device is down. 
         */
        public static final int bluetooth_pairing_device_down_error_message=0x7f0b0039;
        /**  Bluetooth settings: Message informing user that a bluetooth wants to access contant and call history.  [CHAR LIMIT=100] 
         */
        public static final int bluetooth_pairing_dialog_contants_request=0x7f0b02fc;
        /**  Bluetooth settings: paring permission message.  [CHAR LIMIT=100] 
         */
        public static final int bluetooth_pairing_dialog_paring_request=0x7f0b02fd;
        /**  Bluetooth settings: share phone book title.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_pairing_dialog_sharing_phonebook_title=0x7f0b02fb;
        /**  Bluetooth settings: pairing dialog title.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_pairing_dialog_title=0x7f0b02fa;
        /**  Message for the error dialog when BT pairing fails generically. 
         */
        public static final int bluetooth_pairing_error_message=0x7f0b0037;
        /**  Message when bluetooth is informing the user of the pairing key. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_pairing_key_msg=0x7f0b02e4;
        /**  Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
         */
        public static final int bluetooth_pairing_pin_error_message=0x7f0b0038;
        /**  Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
         */
        public static final int bluetooth_pairing_rejected_error_message=0x7f0b003a;
        /**  ======================================================================================= 
 Note: The opening brackets of HTML style tags are escaped (e.g. "<b>" is "&lt;b>") in   
   the following resources to enable formatting followed by HTML styling, as described   
   here:  http://developer.android.com/guide/topics/resources/string-resource.html       
 ======================================================================================= 
 Title for the dialog to enter PIN. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_pairing_request=0x7f0b02e2;
        /**  Checkbox message in pairing dialogs.  [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_pairing_shares_phonebook=0x7f0b02ee;
        /**  Message in pairing dialogs.  [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_pairing_will_share_phonebook=0x7f0b0036;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_nap_profile_summary_connected=0x7f0b002b;
        /**  Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
         */
        public static final int bluetooth_pan_profile_summary_use_for=0x7f0b002c;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_user_profile_summary_connected=0x7f0b002a;
        /**  Bluetooth phone book permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_pb_acceptance_dialog_text=0x7f0b01c0;
        /** FIXME SHOULD BE REMOVED AND ALL LANG VERSIONS FIXED TO ABOVE NAME 
         */
        public static final int bluetooth_pb_remember_choice=0x7f0b01c2;
        /**  Strings for dialog title when asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_permission_request=0x7f0b01b0;
        /**  Activity label of BluetoothPbPermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_phonebook_request=0x7f0b01bf;
        /**  Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30] 
         */
        public static final int bluetooth_pin_values_hint=0x7f0b02e7;
        /**  Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30] 
         */
        public static final int bluetooth_pin_values_hint_16_digits=0x7f0b02e8;
        /**  Bluetooth settings: The sub heading for device settings. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_preference_device_settings=0x7f0b02f4;
        /**  Bluetooth settings: The sub heading for available devices during and after scanning. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_found_devices=0x7f0b02ff;
        /**  Bluetooth settings: The message displayed if no Bluetooth devices were found. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_no_found_devices=0x7f0b0300;
        /**  Bluetooth settings: The sub heading for devices which have already been paired with this device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_devices=0x7f0b02fe;
        /**  Bluetooth settings: Checkbox label for enable/disable contacts connection.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_contacts_option=0x7f0b02f9;
        /**  Bluetooth settings: Checkbox label for enable/disable internet connection.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_internet_option=0x7f0b02f7;
        /**  Bluetooth settings: Checkbox label for enable/disable keyboard connection.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_keyboard_option=0x7f0b02f8;
        /**  Bluetooth settings: Name label [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_name_label=0x7f0b02f6;
        /**  Bluetooth settings: Paired dialog title [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_title=0x7f0b02f5;
        /**  Bluetooth settings: The title of the preference (list item) that initiates a scan for devices 
         */
        public static final int bluetooth_preference_scan_title=0x7f0b02f1;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
         */
        public static final int bluetooth_profile_a2dp=0x7f0b0019;
        /**  Bluetooth settings screen, image description for profile of a device details button. 
         */
        public static final int bluetooth_profile_details=0x7f0b019a;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
         */
        public static final int bluetooth_profile_headset=0x7f0b001a;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
         */
        public static final int bluetooth_profile_hid=0x7f0b001c;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the map profile. 
         */
        public static final int bluetooth_profile_map=0x7f0b0021;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
         */
        public static final int bluetooth_profile_opp=0x7f0b001b;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pan=0x7f0b001d;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pan_nap=0x7f0b0020;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pbap=0x7f0b001e;
        /**  Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] 
         */
        public static final int bluetooth_profile_pbap_summary=0x7f0b001f;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). 
         */
        public static final int bluetooth_profile_sap=0x7f0b0022;
        /**  Bluetooth settings check box summary for turning on bluetooth 
         */
        public static final int bluetooth_quick_toggle_summary=0x7f0b02de;
        /**  Bluetooth settings 
 Bluetooth settings check box title on Main Settings screen 
         */
        public static final int bluetooth_quick_toggle_title=0x7f0b02dd;
        /**  Bluetooth phone book permission Alert Activity checkbox text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_remember_choice=0x7f0b01c1;
        /**  Bluetooth settings screen, confirmation button for rename device dialog. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_rename_button=0x7f0b019e;
        /**  Bluetooth settings screen, menu item to change this device's Bluetooth name. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_rename_device=0x7f0b019d;
        /**  Bluetooth SIM access permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_sap_acceptance_dialog_text=0x7f0b01c6;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. 
         */
        public static final int bluetooth_sap_profile_summary_connected=0x7f0b0027;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. 
         */
        public static final int bluetooth_sap_profile_summary_use_for=0x7f0b002e;
        /**  Activity label of BluetoothMessagePermissionActivity for SIM access profile. Also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_sap_request=0x7f0b01c5;
        /**  Bluetooth settings screen, menu item to scan for nearby bluetooth devices 
         */
        public static final int bluetooth_scan_for_devices=0x7f0b019c;
        /**  Bluetooth settings: The title of the action button that initiates a search for nearby devices [CHAR LIMIT=20] 
         */
        public static final int bluetooth_search_for_devices=0x7f0b02f2;
        /**  Bluetooth settings: The title of the action button while a search for nearby devices is in progress [CHAR LIMIT=20] 
         */
        public static final int bluetooth_searching_for_devices=0x7f0b02f3;
        /** Used as title on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth_settings=0x7f0b02df;
        /** Wireless controls screen, settings summary for the item tot ake you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_summary=0x7f0b02e1;
        /** Wireless controls screen, settings title for the item to take you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_title=0x7f0b02e0;
        /**  Bluetooth settings screen, menu to show the list of received files [CHAR LIMIT=30] 
         */
        public static final int bluetooth_show_received_files=0x7f0b01ae;
        /**  Bluetooth Tethering settings
 Label for bluetooth tether checkbox [CHAR LIMIT=25]
         */
        public static final int bluetooth_tether_checkbox_text=0x7f0b0535;
        /**  Bluetooth available subtext - shown when Bluetooth tethering is turned on but it is not currently tethered to any devices [CHAR LIMIT=50]
 Bluetooth available subtext - shown when Bluetooth tethering is turned on but it is not currently tethered to any devices [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_available_subtext=0x7f0b0536;
        /**  Bluetooth connected subtext - shown when a device is tethered over Bluetooth [CHAR LIMIT=60]
 Bluetooth connected subtext - shown when a device is tethered over Bluetooth [CHAR LIMIT=60]
         */
        public static final int bluetooth_tethering_device_connected_subtext=0x7f0b0537;
        /**  Bluetooth connected subtext - shown when multiple devices are tethered over Bluetooth [CHAR LIMIT=60]
 Bluetooth connected subtext - shown when multiple devices are tethered over Bluetooth [CHAR LIMIT=60]
         */
        public static final int bluetooth_tethering_devices_connected_subtext=0x7f0b0538;
        /**  Bluetooth errored subtext - shown when Bluetooth is broken for some reason [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_errored_subtext=0x7f0b053b;
        /**  Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=50]
 Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_off_subtext=0x7f0b053a;
        /**  Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_off_subtext_config=0x7f0b0539;
        /**  Bluetooth Tethering settings. Error message shown when trying to connect an 8th device [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_overflow_error=0x7f0b053c;
        /**  Strings for msg to display to user while bluetooth is turning off [CHAR LIMIT=60] 
         */
        public static final int bluetooth_turning_off=0x7f0b01ba;
        /**  Strings for msg to display to user while bluetooth is turning on [CHAR LIMIT=60] 
         */
        public static final int bluetooth_turning_on=0x7f0b01b9;
        /**  Bluetooth settings.  Message when the device state is unknown 
         */
        public static final int bluetooth_unknown=0x7f0b01a7;
        /**  Bluetooth Tethering settings.  Message for untethering from a bluetooth device [CHAR LIMIT=50]
         */
        public static final int bluetooth_untether_blank=0x7f0b053d;
        /**  Bluetooth settings screen, option name to pick discoverability timeout duration (a list dialog comes up) 
         */
        public static final int bluetooth_visibility_timeout=0x7f0b0194;
        /**  Sound & display settings screen, setting option name to change brightness level 
         */
        public static final int brightness=0x7f0b0412;
        /**  Sound & display settings screen, setting option summary to change brightness level 
         */
        public static final int brightness_summary=0x7f0b0414;
        /**  Sound & display settings screen, setting option name to change brightness level [CHAR LIMIT=30] 
         */
        public static final int brightness_title=0x7f0b0413;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int bssid_label=0x7f0b0bf6;
        /**  Setting Checkbox title whether to enable bluetooth HCI snoop log 
         */
        public static final int bt_hci_snoop_log=0x7f0b069e;
        /**  setting Checkbox summary whether to capture all bluetooth HCI packets in a file 
         */
        public static final int bt_hci_snoop_log_summary=0x7f0b069f;
        /**  [CHAR LIMIT=NONE] Setting checkbox title for Whether to include bug report item in power menu. 
         */
        public static final int bugreport_in_power=0x7f0b069a;
        /**  [CHAR LIMIT=NONE] Setting checkbox summary for Whether to include bug report item in power 
         */
        public static final int bugreport_in_power_summary=0x7f0b069b;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int build_number=0x7f0b0456;
        /**  Summary for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_summary=0x7f0b0690;
        /**  Title for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_title=0x7f0b068f;
        /**  wifiGprsSelector setting end 
 [C2K solution 2 enhancement start] 
         */
        public static final int c2k_cdma_card_competion_message=0x7f0b0147;
        public static final int c2k_gsm_cdma_sim_message=0x7f0b0148;
        /**  Manage applications, Header name used for cache information 
         */
        public static final int cache_header_label=0x7f0b05c1;
        /**  Manage applications, label that appears next to the cache size 
         */
        public static final int cache_size_label=0x7f0b05c3;
        /**  Label for a process item representing a background process 
         */
        public static final int cached=0x7f0b0628;
        /**  Call Manager enable settings summary.  [CHAR LIMIT=80] 
         */
        public static final int call_manager_enable_summary=0x7f0b09ef;
        /**  Call Manager enable settings title.  [CHAR LIMIT=50] 
         */
        public static final int call_manager_enable_title=0x7f0b09ee;
        /**  Call Manager settings summary.  [CHAR LIMIT=50] 
         */
        public static final int call_manager_summary=0x7f0b09f1;
        /**  Call Manager settings title.  [CHAR LIMIT=50] 
         */
        public static final int call_manager_title=0x7f0b09f0;
        /**  Main settings screen, Call settings summary for item to go into call settings 
         */
        public static final int call_settings_summary=0x7f0b0527;
        /**  Main settings screen, Call settings title for item to go into the call settings 
         */
        public static final int call_settings_title=0x7f0b0526;
        /**  check box Calls title [CHAR LIMIT=30] 
         */
        public static final int calls_title=0x7f0b022b;
        /**  ======================================================================================= 
 NEW STUFF 
 ======================================================================================= 
 Button label for generic cancel action [CHAR LIMIT=20] 
         */
        public static final int cancel=0x7f0b021e;
        /**  Messaage shown in dialog when you can't manually sync 
         */
        public static final int cant_sync_dialog_message=0x7f0b08ad;
        /**  Title of dialog shown when you can't manually sync an item because it's disabled 
         */
        public static final int cant_sync_dialog_title=0x7f0b08ac;
        /**  Title for the list of capabilities of an accessibility service. 
         */
        public static final int capabilities_list_title=0x7f0b071d;
        /**  Description for the capability of an accessibility service to receive events and keys. 
         */
        public static final int capability_desc_receiveAccessibilityEvents=0x7f0b0725;
        /**  Title for the capability of an accessibility service to receive events and keys. 
         */
        public static final int capability_title_receiveAccessibilityEvents=0x7f0b0724;
        /**  Title for the preference to change video caption background color. [CHAR LIMIT=35] 
         */
        public static final int captioning_background_color=0x7f0b0704;
        /**  Title for the preference to change video caption background opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_background_opacity=0x7f0b0705;
        /**  Title for the preference catgeory containing custom video caption properties. [CHAR LIMIT=35] 
         */
        public static final int captioning_custom_options_title=0x7f0b0703;
        /**  Title for the preference to change video caption edge color. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_color=0x7f0b070a;
        /**  Title for the preference to change video caption edge type. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_type=0x7f0b070b;
        /**  Title for the preference to change video caption text color. [CHAR LIMIT=35] 
         */
        public static final int captioning_foreground_color=0x7f0b0708;
        /**  Title for the preference to change video caption text opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_foreground_opacity=0x7f0b0709;
        /**  Title for the preference to change video caption locale. [CHAR LIMIT=35] 
         */
        public static final int captioning_locale=0x7f0b0700;
        /**  Title for the preference category containing video caption property presets. [CHAR LIMIT=35] 
         */
        public static final int captioning_preset=0x7f0b0702;
        /**  Sample characters for previewing video caption preferences. [CHAR LIMIT=2] 
         */
        public static final int captioning_preview_characters=0x7f0b070e;
        /**  Sample text for previewing video caption preferences. [CHAR LIMIT=NONE] 
         */
        public static final int captioning_preview_text=0x7f0b070d;
        /**  Title for the preference category containing the video caption preview. [CHAR LIMIT=35] 
         */
        public static final int captioning_preview_title=0x7f0b06fe;
        /**  Title for the preference catgeory containing standard video caption options. [CHAR LIMIT=35] 
         */
        public static final int captioning_standard_options_title=0x7f0b06ff;
        /**  Title for the preference to change video caption text size. [CHAR LIMIT=35] 
         */
        public static final int captioning_text_size=0x7f0b0701;
        /**  Title for the preference to change video caption font family (ex. monospace, sans-serif). [CHAR LIMIT=35] 
         */
        public static final int captioning_typeface=0x7f0b070c;
        /**  Title for the preference to change video caption window color. [CHAR LIMIT=35] 
         */
        public static final int captioning_window_color=0x7f0b0706;
        /**  Title for the preference to change video caption window opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_window_opacity=0x7f0b0707;
        public static final int card_emulation_settings_category_title=0x7f0b00e2;
        public static final int card_emulation_settings_no_element_found=0x7f0b00e3;
        public static final int card_emulation_settings_off_text=0x7f0b00e4;
        public static final int card_emulation_sim_not_supported_message=0x7f0b00e9;
        public static final int card_emulation_switch_error_message=0x7f0b00e8;
        public static final int card_emulation_switch_error_title=0x7f0b00e7;
        public static final int card_emulation_turning_off_text=0x7f0b00e5;
        public static final int card_emulation_turning_on_text=0x7f0b00e6;
        public static final int card_emulation_two_sim_not_supported_message=0x7f0b00ea;
        /**  Edit enable/disable of APN 
         */
        public static final int carrier_enabled=0x7f0b04fb;
        public static final int carrier_enabled_summaryOff=0x7f0b04fd;
        public static final int carrier_enabled_summaryOn=0x7f0b04fc;
        public static final int category_key_device=0x7f0b0baa;
        public static final int category_key_personal=0x7f0b0bab;
        public static final int category_key_system=0x7f0b0bac;
        public static final int category_key_wireless=0x7f0b0ba9;
        /**  Header for items under the personal user [CHAR LIMIT=30] 
         */
        public static final int category_personal=0x7f0b0406;
        /**  Header for items under the work user [CHAR LIMIT=30] 
         */
        public static final int category_work=0x7f0b0407;
        /**  Main Settings screen setting option summary text for the item to take you to the CDMA security and location screen 
         */
        public static final int cdma_security_settings_summary=0x7f0b0261;
        /**  Cell Broadcast settings title.  [CHAR LIMIT=50] 
         */
        public static final int cell_broadcast_settings=0x7f0b09f2;
        /**  check box cellular data summary [CHAR LIMIT=41] 
         */
        public static final int cellular_data_summary=0x7f0b022d;
        /**  check box cellular data title [CHAR LIMIT=30] 
         */
        public static final int cellular_data_title=0x7f0b022a;
        /**  Package name for Certinstaller app
         */
        public static final int certinstaller_package=0x7f0b004f;
        /**  Title of button to change storage [CHAR LIMIT=25] 
         */
        public static final int change=0x7f0b0b10;
        /**  Title of dialog to change storage [CHAR LIMIT=25] 
         */
        public static final int change_storage=0x7f0b0b11;
        /**  Sound & notification > Other sounds: Title for the option enabling charging sounds. [CHAR LIMIT=30] 
         */
        public static final int charging_sounds_title=0x7f0b0a84;
        /**  Sound settings screen, the caption of the checkbox for having the notification volume be
         the same as the incoming call volume. 
         */
        public static final int checkbox_notification_same_as_incoming_call=0x7f0b03e5;
        /**  Shown when a password has been entered, and we're checking it 
         */
        public static final int checking_decryption=0x7f0b08b6;
        /**  Title for Choose Assist dialog [CHAR LIMIT=35] 
         */
        public static final int choose_assist_title=0x7f0b0b3d;
        /**  Title for profile selection dialog [CHAR LIMIT=30] 
         */
        public static final int choose_profile=0x7f0b0b2b;
        /**  The title of the activity to pick a time zone. 
         */
        public static final int choose_timezone=0x7f0b01c8;
        /**  Title for Choose voice input dialog [CHAR LIMIT=30] 
         */
        public static final int choose_voice_input_title=0x7f0b0b42;
        /**  Manage applications, individual application screen, button label under Launch by default heading.  This is used to clear any default actions that may be assigned to this app.  
         */
        public static final int clear_activities=0x7f0b05d5;
        /**  Setting title to revoke secure USB debugging authorizations 
         */
        public static final int clear_adb_keys=0x7f0b0699;
        /**  Manage applications, text label for button 
         */
        public static final int clear_cache_btn_text=0x7f0b05c2;
        /**  Manage applications, individual application screen, confirmation dialog message. Displays when user selects to "Clear data". It warns the user of the consequences of clearing the data for an app. 
         */
        public static final int clear_data_dlg_text=0x7f0b05f3;
        /**  Manage applications, individual application screen, confirmation dialog title. Displays when user selects to "Clear data". 
         */
        public static final int clear_data_dlg_title=0x7f0b05f2;
        /**  Manage applications, individual application dialog box message. Shown when there was an error trying to clear the data. 
         */
        public static final int clear_data_failed=0x7f0b05f8;
        /**  Manage applications, text for dialog if clear data fails
         */
        public static final int clear_failed_dlg_text=0x7f0b05fc;
        /**  Manage applications, title for dialog if clear data fails
         */
        public static final int clear_failed_dlg_title=0x7f0b05fb;
        /** MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
MTK HotKnot end 
 ClearMotion start 
         */
        public static final int clear_motion_summary=0x7f0b0128;
        public static final int clear_motion_title=0x7f0b0129;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to clear all data associated with tis app (for exampel, remove all cached emails for an Email app) 
         */
        public static final int clear_user_data_text=0x7f0b05d0;
        /**  Label for the color black. [CHAR LIMIT=35] 
         */
        public static final int color_black=0x7f0b0715;
        /**  Label for the color blue. [CHAR LIMIT=35] 
         */
        public static final int color_blue=0x7f0b0718;
        /**  Label for custom colors, formats as a HTML color. 
         */
        public static final int color_custom=0x7f0b0c0c;
        /**  Label for the color cyan. [CHAR LIMIT=35] 
         */
        public static final int color_cyan=0x7f0b0719;
        /**  Label for the color gray. [CHAR LIMIT=35] 
         */
        public static final int color_gray=0x7f0b0714;
        /**  Label for the color green. [CHAR LIMIT=35] 
         */
        public static final int color_green=0x7f0b0717;
        /**  Label for the color magenta. [CHAR LIMIT=35] 
         */
        public static final int color_magenta=0x7f0b071b;
        /**  Label for no color (transparent). [CHAR LIMIT=35] 
         */
        public static final int color_none=0x7f0b0712;
        /**  Orange label.  [CHAR LIMIT=40] 
         */
        public static final int color_orange=0x7f0b0a25;
        /**  Purple label.  [CHAR LIMIT=40] 
         */
        public static final int color_purple=0x7f0b0a26;
        /**  Label for the color red. [CHAR LIMIT=35] 
         */
        public static final int color_red=0x7f0b0716;
        /**  Label for color selection title in sim settings [CHAR LIMIT=35] 
         */
        public static final int color_title=0x7f0b0710;
        /**  Label for default color. This lets the app pick the color. [CHAR LIMIT=35] 
         */
        public static final int color_unspecified=0x7f0b0711;
        /**  Label for the color white. [CHAR LIMIT=35] 
         */
        public static final int color_white=0x7f0b0713;
        /**  Label for the color yellow. [CHAR LIMIT=35] 
         */
        public static final int color_yellow=0x7f0b071a;
        public static final int computing_size=0x7f0b0605;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Configuration screen
         */
        public static final int config_list_label=0x7f0b0c04;
        /**  Title for application configuration settings [CHAR LIMIT=30] 
         */
        public static final int configure_apps=0x7f0b0b29;
        /**  Title for configuring input method settings [CHAR LIMIT=35] 
         */
        public static final int configure_input_method=0x7f0b0687;
        /**  Warning dialog message to confirm user wishes to enable experimental multi-window mode feature 
         */
        public static final int confirm_enable_multi_window_text=0x7f0b08f2;
        public static final int confirm_enable_multi_window_title=0x7f0b08f1;
        /**  Warning dialog message to confirm user wishes to enable OEM unlock and disable theft protection features 
         */
        public static final int confirm_enable_oem_unlock_text=0x7f0b06a3;
        /**  Confirmation dialog title to ensure user wishes to enable OEM unlock and disable theft protection features 
         */
        public static final int confirm_enable_oem_unlock_title=0x7f0b06a2;
        /**  Content description for the fingerprint icon when the user is prompted to enter his credentials. Not shown on the screen. [CHAR LIMIT=NONE] 
         */
        public static final int confirm_fingerprint_icon_content_description=0x7f0b0288;
        /**  Prompt for the user to confirm the new full-backup password by re-entering it 
         */
        public static final int confirm_new_backup_pw_prompt=0x7f0b0980;
        /**  Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] 
         */
        public static final int connected_via_passpoint=0x7f0b000d;
        /**  Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] 
         */
        public static final int connected_via_wfa=0x7f0b000c;
        /**  About phone settings screen, setting option name to see a list of contributors 
         */
        public static final int contributors_title=0x7f0b0574;
        /**  Manage applications, Header name used for other controls 
         */
        public static final int controls_label=0x7f0b05c4;
        /**  Subtitle for possible options 
         */
        public static final int controls_subtitle=0x7f0b0764;
        /**  About phone settings screen, setting option name to see copyright-related info 
         */
        public static final int copyright_title=0x7f0b0576;
        /**  Strings for Dialog create button 
         */
        public static final int create=0x7f0b014f;
        /**  Title of preference of what type of credential storage this device has: hardware or software [CHAR LIMIT=30] 
         */
        public static final int credential_storage_type=0x7f0b0828;
        /**  Summary text for preference showing what type of credential storage this device has when it is stored in a hardware-backed storage (as opposed to "software only") [CHAR LIMIT=NONE] 
         */
        public static final int credential_storage_type_hardware=0x7f0b0829;
        /**  Summary text for preference showing what type of credential storage this device has when it is stored in software only (as opposed to "hardware-backed") [CHAR LIMIT=NONE] 
         */
        public static final int credential_storage_type_software=0x7f0b082a;
        /**  Description of dialog to explain that a lock screen password is required to use credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_configure_lock_screen_hint=0x7f0b0837;
        /**  Toast message [CHAR LIMIT=30] 
         */
        public static final int credentials_enabled=0x7f0b0836;
        /**  Toast message [CHAR LIMIT=30] 
         */
        public static final int credentials_erased=0x7f0b0834;
        /**  Title of preference to install certificates from SD card [CHAR LIMIT=30] 
 Title of preference to install certificates from SD card [CHAR LIMIT=30] 
         */
        public static final int credentials_install=0x7f0b0821;
        /**  Summary of preference to install certificates from SD card [CHAR LIMIT=NONE] 
 Summary of preference to install certificates from SD card [CHAR LIMIT=NONE] 
         */
        public static final int credentials_install_summary=0x7f0b0822;
        /**  Toast message [CHAR LIMIT=30] when credential storage containing private keys and certificates could not be erased (opposite of string credentials_erased) 
         */
        public static final int credentials_not_erased=0x7f0b0835;
        /**  Description of the input box for the old password [CHAR LIMIT=30] 
         */
        public static final int credentials_old_password=0x7f0b082e;
        public static final int credentials_password_too_short=0x7f0b0830;
        /**  Title of preference to reset credential storage [CHAR LIMIT=30] 
         */
        public static final int credentials_reset=0x7f0b0823;
        /**  Description of dialog to reset credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_hint=0x7f0b082f;
        /**  Summary of preference to reset credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_summary=0x7f0b0824;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_warning=0x7f0b0832;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_warning_plural=0x7f0b0833;
        /**  Error message for users that aren't allowed to see or modify credentials [CHAR LIMIT=none] 
         */
        public static final int credentials_settings_not_available=0x7f0b082b;
        /**  Title of preference group for credential storage settings [CHAR LIMIT=30] 
         */
        public static final int credentials_title=0x7f0b0820;
        /**  Title of dialog to enable credential storage [CHAR LIMIT=30] 
         */
        public static final int credentials_unlock=0x7f0b082c;
        /**  Description of dialog to enable credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_unlock_hint=0x7f0b082d;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_wrong_password=0x7f0b0831;
        /**  Button text to start encryption process 
 Button text to start encryption process 
         */
        public static final int crypt_keeper_button_text=0x7f0b028d;
        /**  Title of the final confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_confirm_title=0x7f0b0292;
        /**  Informational text when encryption fails 
 Informational text when encryption fails 
         */
        public static final int crypt_keeper_data_corrupt_summary=0x7f0b029d;
        /**  Title of the encryption screen when decrypting the device failed 
         */
        public static final int crypt_keeper_data_corrupt_title=0x7f0b029c;
        /**  Informational text in the first confirmation screen before starting device encryption 
 Informational text in the first confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_desc=0x7f0b028c;
        /**  Dialog message, shown when encryption cannot proceed because a PIN/Password is needed 
         */
        public static final int crypt_keeper_dialog_need_password_message=0x7f0b0291;
        /**  Dialog title, shown when encryption cannot proceed because a PIN/Password is needed 
         */
        public static final int crypt_keeper_dialog_need_password_title=0x7f0b0290;
        /**  Title of the preferences item to control encryption 
 Title of the preferences item to control encryption 
         */
        public static final int crypt_keeper_encrypt_title=0x7f0b028a;
        /**  Summary of the preferences item to control encryption, when encryption is active 
         */
        public static final int crypt_keeper_encrypted_summary=0x7f0b028b;
        /**  Informational text on the password entry screen prompting the user for their password 
         */
        public static final int crypt_keeper_enter_password=0x7f0b0299;
        /**  Informational text when encryption fails 
 Informational text when encryption fails 
         */
        public static final int crypt_keeper_failed_summary=0x7f0b029b;
        /**  Title of the encryption screen when encrypting the device failed 
         */
        public static final int crypt_keeper_failed_title=0x7f0b029a;
        /**  Warning text in the final confirmation screen before starting device encryption 
 Warning text in the final confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_final_desc=0x7f0b0293;
        public static final int crypt_keeper_force_power_cycle=0x7f0b0297;
        /**  Warning string that will be displayed when encryption cannot be started 
         */
        public static final int crypt_keeper_low_charge_text=0x7f0b028e;
        /**  Title of the preferences category for preference items to control encryption 
         */
        public static final int crypt_keeper_settings_title=0x7f0b0289;
        /**  Informational text on the progress screen while encrypting the device 
 Informational text on the progress screen while encrypting the device 
         */
        public static final int crypt_keeper_setup_description=0x7f0b0295;
        public static final int crypt_keeper_setup_time_remaining=0x7f0b0296;
        /**  Title of the progress screen while encrypting the device 
         */
        public static final int crypt_keeper_setup_title=0x7f0b0294;
        /**  Image button description to switch input method 
         */
        public static final int crypt_keeper_switch_input_method=0x7f0b029e;
        /**  Warning string that will be displayed when encryption cannot be started 
         */
        public static final int crypt_keeper_unplugged_text=0x7f0b028f;
        /**  Warn user their device will be wiped if they make x more failed attempts 
         */
        public static final int crypt_keeper_warn_wipe=0x7f0b0298;
        /**  Button at the bottom of the CryptKeeper screen to make an emergency call. 
         */
        public static final int cryptkeeper_emergency_call=0x7f0b094b;
        /**  Button at the bottom of the CryptKeeper screen that lets the user return to a call 
         */
        public static final int cryptkeeper_return_to_call=0x7f0b094c;
        /**  Message shown when user enters wrong password 
         */
        public static final int cryptkeeper_wrong_password=0x7f0b08b4;
        /**  Message shown when user enters wrong pattern 
         */
        public static final int cryptkeeper_wrong_pattern=0x7f0b08b3;
        /**  Message shown when user enters wrong PIN 
         */
        public static final int cryptkeeper_wrong_pin=0x7f0b08b5;
        /**  Prompt for the user to enter their current full-backup password 
         */
        public static final int current_backup_pw_prompt=0x7f0b097e;
        public static final int current_contact_added=0x7f0b0c4e;
        /**  Title for the option to press to choose the current keyboard, also known as input method [CHAR LIMIT=35] 
         */
        public static final int current_input_method=0x7f0b0682;
        /**  MTK About phone end 
 C2K OM start 
         */
        public static final int current_operators_mccmnc=0x7f0b011a;
        /**  Summary specifying that this is the current screen lock setting [CHAR LIMIT=45] 
         */
        public static final int current_screen_lock=0x7f0b02ae;
        public static final int custom_build_version=0x7f0b0116;
        public static final int cyRam=0x7f0b0c61;
        public static final int cy_available_mem=0x7f0b0c65;
        public static final int cy_system_mem=0x7f0b0c66;
        public static final int cy_toast_free_mem=0x7f0b0c63;
        public static final int cy_toast_free_mem_none=0x7f0b0c62;
        public static final int cy_total_mem=0x7f0b0c64;
        public static final int cystorage_ram_summary=0x7f0b0c5f;
        public static final int cystorage_ram_text=0x7f0b0c60;
        /** A:DELSLMY-686 guoshuai 20160308(end)
 Modify:BUG_id DELSLMY-1399 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int cystorage_volume_summary=0x7f0b0c5d;
        public static final int cystorage_volume_text=0x7f0b0c5e;
        /**  Label for deuteranomaly (red-green color blindness) [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_deuteranomaly=0x7f0b06f7;
        /**  Label for disabling color space adjustment [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_disabled=0x7f0b06f5;
        /**  Label for converting display colors to grayscale, which simulates monochromacy (complete color blindness). [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_monochromacy=0x7f0b06f6;
        /**  Label for protanomaly (red-green color blindness) [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_protanomaly=0x7f0b06f8;
        /**  Label for tritanomaly (blue-yellow color blindness) [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_tritanomaly=0x7f0b06f9;
        /**  Title for the preference to configure the type of color space correction to apply. [CHAR LIMIT=NONE] 
         */
        public static final int daltonizer_type=0x7f0b06f3;
        /**  Summary shown for color space correction preference when its value is overridden by another preference [CHAR LIMIT=35] 
         */
        public static final int daltonizer_type_overridden=0x7f0b06f4;
        /** Dashboard strings
 Text to describe the dashboard fragment title [CHAR LIMIT=16] 
         */
        public static final int dashboard_title=0x7f0b0a36;
        public static final int data_conn_category_title=0x7f0b0143;
        public static final int data_enabler_summary=0x7f0b0146;
        public static final int data_enabler_title=0x7f0b0145;
        /**  RCSE Settings end[SKIP COMMENT] 
 User setting start 
 Background power saving end 
 User setting start 
 Background power saving end 
 User setting start 
         */
        public static final int data_enabler_waiting_message=0x7f0b0141;
        public static final int data_saving_title=0x7f0b0112;
        /**  Manage applications, individual application info screen, label under Storage heading.  The amount of sapce taken up by the app's data (for example, downloaded emails or something like that) 
         */
        public static final int data_size_label=0x7f0b05c9;
        /**  Summary for data usage preference [CHAR LIMIT=15] 
         */
        public static final int data_summary_format=0x7f0b0b0e;
        /**  Message for switching data SIM; switching takes a while 
         */
        public static final int data_switch_started=0x7f0b0a19;
        /**  Message about carrier data accounting.  [CHAR LIMIT=100] 
         */
        public static final int data_usage_accounting=0x7f0b08fb;
        /**  Title for app usage. [CHAR LIMIT=40] 
         */
        public static final int data_usage_app=0x7f0b08fc;
        /**  Title for app usage. [CHAR LIMIT=40] 
         */
        public static final int data_usage_app_info_label=0x7f0b08fd;
        /**  Title for application data usage separator in data usage list. [CHAR LIMIT=25] 
         */
        public static final int data_usage_app_items_header_text=0x7f0b0901;
        /**  Checkbox label that restricts background data usage of a specific application. [CHAR LIMIT=40] 
         */
        public static final int data_usage_app_restrict_background=0x7f0b092a;
        /**  Summary message for checkbox that restricts background data usage of a specific application. [CHAR LIMIT=64] 
         */
        public static final int data_usage_app_restrict_background_summary=0x7f0b092b;
        /**  Summary message for checkbox that restricts background data usage of a specific application when no networks have been limited. [CHAR LIMIT=84] 
         */
        public static final int data_usage_app_restrict_background_summary_disabled=0x7f0b092c;
        /**  Body of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_app_restrict_dialog=0x7f0b092e;
        /**  Title of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=48] 
         */
        public static final int data_usage_app_restrict_dialog_title=0x7f0b092d;
        /**  Label for application which has its data usage restricted. [CHAR LIMIT=16] 
         */
        public static final int data_usage_app_restricted=0x7f0b0917;
        /**  Button title for launching application-specific data usage settings. [CHAR LIMIT=32] 
         */
        public static final int data_usage_app_settings=0x7f0b0929;
        /**  Activity title for Appk data usage summary. [CHAR LIMIT=25] 
         */
        public static final int data_usage_app_summary_title=0x7f0b08fa;
        /**   Body of dialog shown when user disables global auto sync [CHAR LIMIT=none] 
         */
        public static final int data_usage_auto_sync_off_dialog=0x7f0b0933;
        /**   Title of dialog shown when user disables global auto sync [CHAR LIMIT=32] 
         */
        public static final int data_usage_auto_sync_off_dialog_title=0x7f0b0932;
        /**   Body of dialog shown when user enables global auto sync, for tablet [CHAR LIMIT=none] 
  Body of dialog shown when user enables global auto sync [CHAR LIMIT=none] 
         */
        public static final int data_usage_auto_sync_on_dialog=0x7f0b0931;
        /**   Title of dialog shown when user enables global auto sync [CHAR LIMIT=32] 
         */
        public static final int data_usage_auto_sync_on_dialog_title=0x7f0b0930;
        /**  Data Usage Background label.  [CHAR LIMIT=40] 
         */
        public static final int data_usage_background_label=0x7f0b0928;
        /**  Title for cellular data usage. [CHAR LIMIT=40] 
         */
        public static final int data_usage_cellular_data=0x7f0b08fe;
        /**  Summary String for Cellular data enable toggle. [CHAR LIMIT=33] 
         */
        public static final int data_usage_cellular_data_summary=0x7f0b090e;
        /**  Title for option to change data usage cycle day. [CHAR LIMIT=32] 
         */
        public static final int data_usage_change_cycle=0x7f0b0912;
        /**  Title for option to pick visible time range from a list available usage periods. [CHAR LIMIT=25] 
         */
        public static final int data_usage_cycle=0x7f0b0900;
        /**  Positive button title for data usage cycle editor, confirming that changes should be saved. [CHAR LIMIT=32] 
         */
        public static final int data_usage_cycle_editor_positive=0x7f0b0936;
        /**  Subtitle of dialog for editing data usage cycle reset date. [CHAR LIMIT=32] 
         */
        public static final int data_usage_cycle_editor_subtitle=0x7f0b0935;
        /**  Title of dialog for editing data usage cycle reset date. [CHAR LIMIT=48] 
         */
        public static final int data_usage_cycle_editor_title=0x7f0b0934;
        /**  Title for setting data limit. [CHAR LIMIT=40] 
         */
        public static final int data_usage_data_limit=0x7f0b08ff;
        /**  Checkbox label that will disable 2G-3G network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_3g_limit=0x7f0b091b;
        /**  Checkbox label that will disable 4G network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_4g_limit=0x7f0b091a;
        /**  Body of dialog shown to request confirmation that mobile data will be disabled. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_disable_mobile=0x7f0b0918;
        /**  Checkbox label that will disable mobile network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_mobile_limit=0x7f0b0919;
        /**  Checkbox label that will disable Wi-Fi network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_wifi_limit=0x7f0b091c;
        /**  Disclaimer string for data usage measured by device. [CHAR LIMIT=80] 
         */
        public static final int data_usage_disclaimer=0x7f0b094a;
        /**  Label shown when no applications used data during selected time period. [CHAR LIMIT=48] 
         */
        public static final int data_usage_empty=0x7f0b0914;
        /**  Toggle switch title for enabling 2G and 3G data network connections. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_3g=0x7f0b0925;
        /**  Toggle switch title for enabling 4G data network connection. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_4g=0x7f0b0926;
        /**  Toggle switch title for enabling all mobile data network connections. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_mobile=0x7f0b0924;
        /**  Data Usage Foreground label.  [CHAR LIMIT=40] 
         */
        public static final int data_usage_forground_label=0x7f0b0927;
        /**  Label for data usage occuring while application in background. [CHAR LIMIT=48] 
         */
        public static final int data_usage_label_background=0x7f0b0916;
        /**  Label for data usage occuring while application in foreground. [CHAR LIMIT=48] 
         */
        public static final int data_usage_label_foreground=0x7f0b0915;
        /**  Body of dialog shown before user limits mobile data usage. [CHAR LIMIT=NONE] 
 Body of dialog shown before user limits mobile data usage. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_limit_dialog_mobile=0x7f0b093a;
        /**  Title of dialog shown before user limits data usage. [CHAR LIMIT=48] 
         */
        public static final int data_usage_limit_dialog_title=0x7f0b0939;
        /**  Title of dialog for editing data usage limit in bytes. [CHAR LIMIT=48] 
         */
        public static final int data_usage_limit_editor_title=0x7f0b0938;
        /**  Title shown when current operation applies to mobile networks. [CHAR LIMIT=20] 
         */
        public static final int data_usage_list_mobile=0x7f0b0922;
        /**  Title shown when current operation applies to no networks. [CHAR LIMIT=20] 
         */
        public static final int data_usage_list_none=0x7f0b0923;
        /**  Title for menu option to allow background data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_allow_background=0x7f0b0904;
        /**  Title for menu option to enable global auto-sync of account data 
         */
        public static final int data_usage_menu_auto_sync=0x7f0b090b;
        /**  Title for menu option to show details for all cellular networks. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_cellular_networks=0x7f0b090d;
        /**  Title for menu option to hide Ethernet data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_hide_ethernet=0x7f0b0909;
        /**  Title for menu option to hide Wi-Fi data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_hide_wifi=0x7f0b0907;
        /**  Title for menu option to configure metered networks. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_metered=0x7f0b090a;
        /**  Title for menu option to restrict background data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_restrict_background=0x7f0b0903;
        /**  Title for menu option to enable mobile data when roaming. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_roaming=0x7f0b0902;
        /**  Title for menu option to show Ethernet data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_show_ethernet=0x7f0b0908;
        /**  Title for menu option to show Wi-Fi data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_show_wifi=0x7f0b0906;
        /**  Title for menu option to show details for all SIM cards. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_sim_cards=0x7f0b090c;
        /**  Title for menu option to show 4G mobile data usage separate from other mobile data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_split_4g=0x7f0b0905;
        /**  Dialog body for selecting paid networks. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_metered_body=0x7f0b0946;
        /**  Header for list of mobile networks. [CHAR LIMIT=32] 
         */
        public static final int data_usage_metered_mobile=0x7f0b0947;
        /**  Dialog title for selecting metered networks. [CHAR LIMIT=25] 
         */
        public static final int data_usage_metered_title=0x7f0b0945;
        /**  Header for list of Wi-Fi networks. [CHAR LIMIT=32] 
         */
        public static final int data_usage_metered_wifi=0x7f0b0948;
        /**  Body text prompting user to enable Wi-Fi to configure metered networks. [CHAR LIMIT=64] 
         */
        public static final int data_usage_metered_wifi_disabled=0x7f0b0949;
        /**  Body of dialog prompting user to change numerical day of month that data usage cycle should reset. [CHAR LIMIT=64] 
         */
        public static final int data_usage_pick_cycle_day=0x7f0b0913;
        /**  Combination of total network bytes sent and received by an application. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_received_sent=0x7f0b0942;
        /**  Body of dialog shown before user restricts background data usage. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_background=0x7f0b093c;
        /**  Body of dialog shown before user restricts background data usage. This is for multiuser tablets. [CHAR LIMIT=NONE] 
 Body of dialog shown before user restricts background data usage. This is for multiuser phones. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_background_multiuser=0x7f0b093d;
        /**  Title of dialog shown before user restricts background data usage. [CHAR LIMIT=48] 
         */
        public static final int data_usage_restrict_background_title=0x7f0b093b;
        /**  Body of dialog shown when user attempts to restrict background data before a network data limit has been set. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_denied_dialog=0x7f0b092f;
        /**  Activity title for network data usage summary. [CHAR LIMIT=25] 
         */
        public static final int data_usage_summary_title=0x7f0b08f9;
        /**  Label displaying current network data usage limit threshold. [CHAR LIMIT=18] 
         */
        public static final int data_usage_sweep_limit=0x7f0b093f;
        /**  Label displaying current network data usage warning threshold. [CHAR LIMIT=18] 
         */
        public static final int data_usage_sweep_warning=0x7f0b093e;
        /**  Tab title for showing 2G and 3G data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_3g=0x7f0b0921;
        /**  Tab title for showing 4G data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_4g=0x7f0b0920;
        /**  Tab title for showing Ethernet data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_ethernet=0x7f0b091e;
        /**  Tab title for showing combined mobile data usage. [CHAR LIMIT=20] 
         */
        public static final int data_usage_tab_mobile=0x7f0b091f;
        /**  Tab title for showing Wi-Fi data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_wifi=0x7f0b091d;
        /**  Label displaying total network data transferred during a specific time period. [CHAR LIMIT=64] 
         */
        public static final int data_usage_total_during_range=0x7f0b0943;
        /**  Label displaying total network data transferred during a specific time period, including a disclaimer that contrasts device versus carrier reporting. [CHAR LIMIT=80] 
 Label displaying total network data transferred during a specific time period, including a disclaimer that contrasts device versus carrier reporting. [CHAR LIMIT=80] 
         */
        public static final int data_usage_total_during_range_mobile=0x7f0b0944;
        /**  Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48] 
         */
        public static final int data_usage_uninstalled_apps=0x7f0b0940;
        /**  Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48] 
         */
        public static final int data_usage_uninstalled_apps_users=0x7f0b0941;
        /**  Title of dialog for editing data usage warning in bytes. [CHAR LIMIT=48] 
         */
        public static final int data_usage_warning_editor_title=0x7f0b0937;
        public static final int datausage_overview_mobile_title=0x7f0b010f;
        public static final int datausage_overview_mobile_usage=0x7f0b0110;
        public static final int datausage_overview_mobile_usage_warning=0x7f0b0111;
        /**  MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
 MTK HDMI end 
 MTK Data usage  start 
         */
        public static final int datausage_overview_tab=0x7f0b010c;
        public static final int datausage_overview_wifi_today=0x7f0b010d;
        public static final int datausage_overview_wifi_total=0x7f0b010e;
        /**  Date & time settings screen title 
         */
        public static final int date_and_time=0x7f0b01c7;
        /**  Main Settings screen setting option summary text for the item to go into the date and time settings. 
         */
        public static final int date_and_time_settings_summary=0x7f0b023b;
        /**  Main Settings screen setting option name to go into the date and time settings
         */
        public static final int date_and_time_settings_title=0x7f0b0239;
        /**  Title for Date & Time settings screen in SetupWizard [CHAR LIMIT=40] 
         */
        public static final int date_and_time_settings_title_setup_wizard=0x7f0b023a;
        /**  Title string shown above DatePicker, letting a user select system date
         [CHAR LIMIT=20] 
         */
        public static final int date_picker_title=0x7f0b024c;
        /**  Date & time setting screen setting check box title 
         */
        public static final int date_time_24hour=0x7f0b0243;
        /**  Date & time setting screen setting check box title [CHAR LIMIT=30] 
         */
        public static final int date_time_24hour_title=0x7f0b0242;
        /**  Date & time setting screen setting check box title if the date and time should be determined automatically [CHAR LIMIT=30] 
         */
        public static final int date_time_auto=0x7f0b023c;
        /**  Date & time setting screen setting option summary text when Automatic check box is clear
        [CHAR LIMIT=100] 
         */
        public static final int date_time_auto_summaryOff=0x7f0b023e;
        /**  Date & time setting screen setting option summary text when Automatic check box is selected
        (that is, when date and time should be determined automatically) [CHAR LIMIT=100] 
         */
        public static final int date_time_auto_summaryOn=0x7f0b023d;
        /** add BUG_ID:DWYYLM-42  liqiang 20151229 (start) 
add BUG_ID:DWYYLM-42  liqiang 20151229 (start) 
         */
        public static final int date_time_date_format=0x7f0b0c3b;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_date=0x7f0b0249;
        /**  Date & time setting screen setting option title [CHAR LIMIT=30] 
         */
        public static final int date_time_set_date_title=0x7f0b0248;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_time=0x7f0b0245;
        /**  Date & time setting screen setting option title [CHAR LIMIT=30] 
         */
        public static final int date_time_set_time_title=0x7f0b0244;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_timezone=0x7f0b0247;
        /**  Date & time setting screen setting option title [CHAR LIMIT=30] 
         */
        public static final int date_time_set_timezone_title=0x7f0b0246;
        /**  UI debug setting: select current app to debug [CHAR LIMIT=50] 
         */
        public static final int debug_app=0x7f0b08c0;
        /**  UI debug setting: no debug app has been set [CHAR LIMIT=50] 
         */
        public static final int debug_app_not_set=0x7f0b08c1;
        /**  UI debug setting: debug app has been set [CHAR LIMIT=50] 
         */
        public static final int debug_app_set=0x7f0b08c2;
        /**  Preference category for application debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_applications_category=0x7f0b08f3;
        /**  Preference category for app debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_debugging_category=0x7f0b08bf;
        /**  Preference category for drawing debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_drawing_category=0x7f0b08c8;
        /**  Preference category for hardware accelerated drawing debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_hw_drawing_category=0x7f0b08c9;
        /**  UI debug setting: show the amount of overdraw in apps using the GPU [CHAR LIMIT=25] 
         */
        public static final int debug_hw_overdraw=0x7f0b08d8;
        /**  Preference category for input debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_input_category=0x7f0b08c7;
        /**  Do not translate. 
         */
        public static final int debug_intent_sender_label=0x7f0b0218;
        /**  UI debug setting: show layout bounds information [CHAR LIMIT=25] 
         */
        public static final int debug_layout=0x7f0b08df;
        /**  UI debug setting: show layout bounds information summary [CHAR LIMIT=50] 
         */
        public static final int debug_layout_summary=0x7f0b08e0;
        /**  Preference category for monitoring debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_monitoring_category=0x7f0b08cb;
        /**  Title of warning dialog about the implications of enabling USB debugging 
 Preference category for networking debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_networking_category=0x7f0b06aa;
        /**  Setting Checkbox title whether to enable view attribute inspection 
 Setting Checkbox title whether to enable view attribute inspection 
         */
        public static final int debug_view_attributes=0x7f0b06a9;
        /**  Label of default app for current setting [CHAR LIMIT=40] 
         */
        public static final int default_app=0x7f0b0b46;
        /**  Title for Default Apps settings [CHAR LIMIT=30] 
         */
        public static final int default_apps_title=0x7f0b0b39;
        /**  Summary for No Default Assist settings [CHAR LIMIT=45] 
         */
        public static final int default_assist_none=0x7f0b0b3c;
        /**  Title for Default Assist settings [CHAR LIMIT=30] 
         */
        public static final int default_assist_title=0x7f0b0b3b;
        /**  Title for Default Browser settings [CHAR LIMIT=30] 
         */
        public static final int default_browser_title=0x7f0b0b43;
        /**  Summary for No Default Browser settings [CHAR LIMIT=45] 
         */
        public static final int default_browser_title_none=0x7f0b0b44;
        public static final int default_calls_switch_err_msg1=0x7f0b014a;
        public static final int default_data_switch_err_msg1=0x7f0b0113;
        public static final int default_date_format=0x7f0b0c3d;
        /**  [CHAR LIMIT=NONE] Advanced applications screen, preference title.  Choose the emergency application. 
         */
        public static final int default_emergency_app=0x7f0b05de;
        public static final int default_emergency_msg=0x7f0b0c4d;
        public static final int default_font=0x7f0b0bae;
        /**   Title for Default Phone app settings [CHAR LIMIT=30] 
         */
        public static final int default_phone_title=0x7f0b0b45;
        public static final int default_sms_switch_err_msg1=0x7f0b014b;
        /**  Option title for the default sound, context based on screen 
         */
        public static final int default_sound=0x7f0b0a68;
        /**  the following are for Settings Storage screen 
 Menu item/button 'delete' 
         */
        public static final int delete=0x7f0b08b8;
        public static final int delete_contact=0x7f0b0c4b;
        /**  Strings for Dialog deny button 
         */
        public static final int deny=0x7f0b0151;
        public static final int detail_tip=0x7f0b0c69;
        /**  Subtitle for application/subsystem details 
         */
        public static final int details_subtitle=0x7f0b0763;
        /**  Activity title for battery usage details for an app. or power consumer 
         */
        public static final int details_title=0x7f0b0762;
        /**  Warning text to user about the implications of enabling USB debugging 
         */
        public static final int dev_settings_warning_message=0x7f0b06bf;
        /**  Title of warning dialog about the implications of enabling developer settings 
         */
        public static final int dev_settings_warning_title=0x7f0b06be;
        /**  Setting checkbox title for Whether to enable USB debugging support on the phone. 
 Error message for users that aren't allowed to modify developer options [CHAR LIMIT=none] 
         */
        public static final int development_settings_not_available=0x7f0b0693;
        /**  Development Settings summary.  The summary of the item to take the user to Development settings.  Development settings are settings meant for application developers. 
         */
        public static final int development_settings_summary=0x7f0b0692;
        /**  Development Settings.  the title for the item to take the user to Development settings.  Development settings are settings meant for application developers.  
         */
        public static final int development_settings_title=0x7f0b0691;
        /**  Device admin add activity title 
         */
        public static final int device_admin_add_title=0x7f0b085c;
        /**  Device admin settings activity title 
         */
        public static final int device_admin_settings_title=0x7f0b0851;
        /**  Device admin warning message about policies an admin can use 
         */
        public static final int device_admin_status=0x7f0b085e;
        /**  In the security screen, the header title for settings related to device admins 
         */
        public static final int device_admin_title=0x7f0b02d7;
        /**  Device admin warning message about policies an admin can use 
         */
        public static final int device_admin_warning=0x7f0b085d;
        /**  [CHAR LIMIT=35] Feedback on the device 
         */
        public static final int device_feedback=0x7f0b0ada;
        /**  Device Info screen. Used for a status item's value when the proper value is not known 
         */
        public static final int device_info_default=0x7f0b0154;
        /**  The title of the activity to see random device info. 
         */
        public static final int device_info_label=0x7f0b0219;
        /**  About phone screen, show when a value of some status item is unavailable. 
         */
        public static final int device_info_not_available=0x7f0b0458;
        /**  Advanced (used for diagnostics) device info activity title [CHAR LIMIT=40] 
 Advanced (used for diagnostics) device info activity title [CHAR LIMIT=40] 
         */
        public static final int device_info_settings=0x7f0b044e;
        /**  Strings for BluetoothDevicePicker [CHAR LIMIT=40]
         */
        public static final int device_picker=0x7f0b01af;
        /**  Master Clear 
 SD card & phone storage settings screen, setting option name under Internal phone storage heading [CHAR LIMIT=30] 
         */
        public static final int device_reset_title=0x7f0b0515;
        /**  About phone screen, title of the item to go into the Phone status screen 
         */
        public static final int device_status=0x7f0b045a;
        /**  About phone screen, phone status screen title 
         */
        public static final int device_status_activity_title=0x7f0b0459;
        /**  About tablet screen, summary of the item that takes you to tablet status screen 
 About phone screen, summary of the item to go into the phone status screen 
         */
        public static final int device_status_summary=0x7f0b045b;
        /**  Sound & notification > Other sounds: Title for the option enabling touch sounds for dial pad tones. [CHAR LIMIT=30] 
         */
        public static final int dial_pad_tones_title=0x7f0b0a82;
        /**  [CHAR LIMIT=40] Sound & display settings screen, title of dialog for picking font size 
         */
        public static final int dialog_title_font_size=0x7f0b0430;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager disableNetwork API
         */
        public static final int disableNetwork=0x7f0b0bea;
        /**  UI debug setting: disable use of overlays? [CHAR LIMIT=25] 
         */
        public static final int disable_overlays=0x7f0b08d9;
        /**  UI debug setting: disable use of overlays summary [CHAR LIMIT=50] 
         */
        public static final int disable_overlays_summary=0x7f0b08da;
        /**  Message for a warning about disabling accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int disable_service_message=0x7f0b0727;
        /**  Title for a warning about disabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int disable_service_title=0x7f0b0726;
        /**  [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to disable an existing application. 
         */
        public static final int disable_text=0x7f0b05ce;
        /**  [CHAR LIMIT=25] Manage applications, text telling using an application is disabled. 
         */
        public static final int disabled=0x7f0b05eb;
        /**  Summary shown when trust agent settings is disabled because the user hasn't set up primary security 
         */
        public static final int disabled_because_no_backup_security=0x7f0b02db;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager disconnect API
         */
        public static final int disconnect=0x7f0b0bec;
        /**  [CHAR LIMIT=70] Rotate when screen is turned option 
         */
        public static final int display_auto_rotate_rotate=0x7f0b0ae9;
        /**  [CHAR LIMIT=70] Don't rotate when screen is turned option 
         */
        public static final int display_auto_rotate_stay_in_current=0x7f0b0aec;
        /**  [CHAR LIMIT=70] Keep the screen in landscape when rotated 
         */
        public static final int display_auto_rotate_stay_in_landscape=0x7f0b0aeb;
        /**  [CHAR LIMIT=70] Keep the screen in portrait when rotated 
         */
        public static final int display_auto_rotate_stay_in_portrait=0x7f0b0aea;
        /**  [CHAR LIMIT=45] Auto-rotate setting title 
         */
        public static final int display_auto_rotate_title=0x7f0b0ae8;
        /**  Label for chosen font size 
         */
        public static final int display_font_size_label=0x7f0b01ca;
        /**  The title of the activity to adjust display settings 
         */
        public static final int display_label=0x7f0b021a;
        /**  label for text to indicate sort options 
         */
        public static final int display_order_text=0x7f0b06d6;
        /**  Label of preview text when tweaking font size 
         */
        public static final int display_preview_label=0x7f0b01c9;
        /**  Sound & display settings screen, section header for settings related to display 
         */
        public static final int display_settings=0x7f0b040e;
        public static final int display_settings_title=0x7f0b03db;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". 
         */
        public static final int dlg_cancel=0x7f0b05f5;
        /**  Strings for Dialog close button [CHAR LIMIT=20] 
         */
        public static final int dlg_close=0x7f0b0152;
        /**  SD card eject confirmation dialog  [CHAR LIMIT=NONE] 
 SD card eject confirmation dialog  
         */
        public static final int dlg_confirm_unmount_text=0x7f0b048b;
        /**  SD card eject confirmation dialog title   [CHAR LIMIT=25] 
 SD card eject confirmation dialog title   
         */
        public static final int dlg_confirm_unmount_title=0x7f0b048a;
        /**  SD card eject error dialog text   [CHAR LIMIT=NONE] 
 SD card eject error dialog text   
         */
        public static final int dlg_error_unmount_text=0x7f0b048d;
        /**  SD card eject error dialog title   [CHAR LIMIT=30] 
 SD card eject error dialog title   
         */
        public static final int dlg_error_unmount_title=0x7f0b048c;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". Goes through with the clearing of the data. 
         */
        public static final int dlg_ok=0x7f0b05f4;
        /**  Strings for Dialog switch button [CHAR LIMIT=20] 
         */
        public static final int dlg_switch=0x7f0b0153;
        /**  Sound & notification > Other sounds: Value for the dock audio media with value 0: disabled. [CHAR LIMIT=30] 
         */
        public static final int dock_audio_media_disabled=0x7f0b0a89;
        /**  Sound & notification > Other sounds: Value for the dock audio media with value 1: enabled. [CHAR LIMIT=30] 
         */
        public static final int dock_audio_media_enabled=0x7f0b0a8a;
        /**  Sound & notification > Other sounds: Title for the option enabling dock audio media. [CHAR LIMIT=50] 
         */
        public static final int dock_audio_media_title=0x7f0b0a88;
        /**  Dock audio settings 
         */
        public static final int dock_audio_settings_title=0x7f0b03fb;
        /**  Dock audio summary for docked to car dock 
         */
        public static final int dock_audio_summary_car=0x7f0b03fd;
        /**  Dock audio summary for docked to desk dock 
         */
        public static final int dock_audio_summary_desk=0x7f0b03fc;
        /**  Dock audio summary for undocked 
 Dock audio summary for undocked 
         */
        public static final int dock_audio_summary_none=0x7f0b03fe;
        /**  Dock audio summary for docked to unknown 
         */
        public static final int dock_audio_summary_unknown=0x7f0b03ff;
        /**  Dock not found dialog text 
 Dock not found dialog text 
         */
        public static final int dock_not_found_text=0x7f0b0401;
        /**  Dock not found dialog title 
         */
        public static final int dock_not_found_title=0x7f0b0400;
        /**  Dock settings title, top level 
         */
        public static final int dock_settings=0x7f0b03f9;
        /**  Sound settings screen, dock settings summary
         */
        public static final int dock_settings_summary=0x7f0b03eb;
        /**  Dock settings title 
         */
        public static final int dock_settings_title=0x7f0b03fa;
        /**  Sound settings screen, setting option summary text when check box is clear 
 Sound settings screen, setting option summary text when check box is clear 
         */
        public static final int dock_sounds_enable_summary_off=0x7f0b0404;
        /**  Dock settings screen, setting option summary text when check box is selected 
 Dock settings screen, setting option summary text when check box is selected 
         */
        public static final int dock_sounds_enable_summary_on=0x7f0b0403;
        /**  Dock settings screen, dock events SFX setting check box label 
         */
        public static final int dock_sounds_enable_title=0x7f0b0402;
        /**  Sound & notification > Other sounds: Title for the option enabling docking sounds. [CHAR LIMIT=30] 
         */
        public static final int docking_sounds_title=0x7f0b0a85;
        public static final int does_not_exist=0x7f0b060e;
        /**  Summary for an App that dont open any domain URLs [CHAR LIMIT=45] 
         */
        public static final int domain_urls_summary_none=0x7f0b0b32;
        /**  Summary of number of App that can open one and only one domain URLs [CHAR LIMIT=45] 
         */
        public static final int domain_urls_summary_one=0x7f0b0b33;
        /**  Summary of number of App that can open several domain URLs [CHAR LIMIT=45] 
         */
        public static final int domain_urls_summary_some=0x7f0b0b34;
        /**  Label for the Domain URLs list that shows domain urls per App [CHAR LIMIT=30] 
         */
        public static final int domain_urls_title=0x7f0b0b31;
        /**  Button label for generic done action [CHAR LIMIT=20] 
         */
        public static final int done=0x7f0b0222;
        /**  Button to close the SSL CA cert warning dialog box, meaning the user is done reading.  [CHAR LIMIT=NONE] 
         */
        public static final int done_button=0x7f0b0988;
        /**  [CHAR LIMIT=NONE] Display settings screen, setting description for the ambient display feature. 
         */
        public static final int doze_summary=0x7f0b042e;
        /**  [CHAR LIMIT=30] Display settings screen, setting option name to change whether the ambient display feature is enabled. 
         */
        public static final int doze_title=0x7f0b042d;
        /**  Title of draw overlay screen [CHAR LIMIT=30] 
         */
        public static final int draw_overlay=0x7f0b0b8b;
        /**  System Alert Window settings 
 Title of Draw Overlay preference item [CHAR LIMIT=55] 
         */
        public static final int draw_overlay_title=0x7f0b0b8a;
        public static final int drm_reset_dialog_msg=0x7f0b0123;
        public static final int drm_reset_toast_msg=0x7f0b0124;
        public static final int drm_settings_summary=0x7f0b0122;
        /**  APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
 APN Settings end 
MTK DRM settings start 
         */
        public static final int drm_settings_title=0x7f0b0121;
        /**  Sound settings screen, setting check box label 
         */
        public static final int dtmf_tone_enable_title=0x7f0b03ec;
        public static final int emergency_assistant_note1=0x7f0b0c46;
        public static final int emergency_assistant_note2=0x7f0b0c47;
        public static final int emergency_contact=0x7f0b0c4a;
        public static final int emergency_interval_summary=0x7f0b0c4c;
        public static final int emergency_message_dispatched=0x7f0b0c57;
        public static final int emergency_message_edit=0x7f0b0c48;
        public static final int emergency_message_interval=0x7f0b0c49;
        public static final int emergency_off=0x7f0b0c5a;
        public static final int emergency_on=0x7f0b0c59;
        public static final int emergency_switch=0x7f0b0c5b;
        /** A: kuangyunfeng 20160112(end)
Add, DaiHongyi, JWBLB-54, emergency assistant, 20150520, Start
A: kuangyunfeng 20160112(end)
Add, DaiHongyi, JWBLB-54, emergency assistant, 20150520, Start
         */
        public static final int emergency_title=0x7f0b0c45;
        /**  Sound & notification > Other sounds: Value for the emergency tone option with value 1: alert. [CHAR LIMIT=30] 
         */
        public static final int emergency_tone_alert=0x7f0b0a8c;
        /**  Sound & notification > Other sounds: Value for the emergency tone option with value 0: silent. [CHAR LIMIT=30] 
         */
        public static final int emergency_tone_silent=0x7f0b0a8b;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int emergency_tone_summary=0x7f0b083a;
        /**  Sound settings screen, setting check box label 
         */
        public static final int emergency_tone_title=0x7f0b0839;
        /**  Sound & notification > Other sounds: Value for the emergency tone option with value 2: vibrate. [CHAR LIMIT=30] 
         */
        public static final int emergency_tone_vibrate=0x7f0b0a8d;
        /**  String displayed when list is empty 
         */
        public static final int empty_list_msg=0x7f0b0607;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager enableNetwork API
         */
        public static final int enableNetwork=0x7f0b0beb;
        public static final int enable_adb=0x7f0b0697;
        /**  Setting checkbox summary for Whether to enable USB debugging support on the phone 
         */
        public static final int enable_adb_summary=0x7f0b0698;
        /**  Manage applications, individual application screen, checkbox to control compatibility mode.  
         */
        public static final int enable_compatibility=0x7f0b05d8;
        /**  UI debug setting: enable/disable debug multi-window ui [CHAR LIMIT=25] 
         */
        public static final int enable_multi_window=0x7f0b08ef;
        /**  setting Checkbox summary whether to enable debug multi-window ui [CHAR_LIMIT=50] 
         */
        public static final int enable_multi_window_summary=0x7f0b08f0;
        /**  UI debug setting: enable various types of OpenGL traces [CHAR LIMIT=25] 
         */
        public static final int enable_opengl_traces_title=0x7f0b08dc;
        /**  Title for the preference to show a tile for a particular feature in the Quick Settings pane. [CHAR LIMIT=NONE] 
         */
        public static final int enable_quick_setting=0x7f0b06f2;
        /**  Warning that the device data will not be encrypted with password or PIN if
        enabling an accessibility service and there is a secure lock setup. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_encryption_warning=0x7f0b071f;
        /**  Message to the user to enter his password before enabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_password_reason=0x7f0b0723;
        /**  Message to the user to enter his pattern before enabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_pattern_reason=0x7f0b0721;
        /**  Message to the user to enter his PIN before enabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_pin_reason=0x7f0b0722;
        /**  Title for a warning about security implications of enabling an accessibility
         service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_title=0x7f0b071c;
        /**  Summary of checkbox setting that enables the terminal app. [CHAR LIMIT=64] 
         */
        public static final int enable_terminal_summary=0x7f0b06c7;
        /**  Title of checkbox setting that enables the terminal app. [CHAR LIMIT=32] 
         */
        public static final int enable_terminal_title=0x7f0b06c6;
        /**  [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to re-enable an existing application. 
         */
        public static final int enable_text=0x7f0b05cf;
        /**  Radio button text that doesn't require a password to decrypt [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_dont_require_password=0x7f0b0afb;
        /**  Radio button text that doesn't require a pattern to decrypt [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_dont_require_pattern=0x7f0b0afa;
        /**  Radio button text that doesn't require a PIN to decrypt [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_dont_require_pin=0x7f0b0af9;
        /**  Radio button text that require a password to start device [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_require_password=0x7f0b0af8;
        /**  Radio button text that require a pattern to start device [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_require_pattern=0x7f0b0af7;
        /**  Radio button text that require a PIN to start device [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_require_pin=0x7f0b0af6;
        /**  Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled. 
         */
        public static final int encrypt_talkback_dialog_message_password=0x7f0b0b01;
        /**  Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled. 
         */
        public static final int encrypt_talkback_dialog_message_pattern=0x7f0b0b00;
        /**  Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled. 
         */
        public static final int encrypt_talkback_dialog_message_pin=0x7f0b0aff;
        /**  Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25] 
         */
        public static final int encrypt_talkback_dialog_require_password=0x7f0b0afe;
        /**  Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25] 
         */
        public static final int encrypt_talkback_dialog_require_pattern=0x7f0b0afd;
        /**  Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25] 
         */
        public static final int encrypt_talkback_dialog_require_pin=0x7f0b0afc;
        /**  Encryption interstitial button to continue with the shown setting.  Appears on screen that asks the user to opt in/out of encrypting device with a pin/pattern/password. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_continue_button=0x7f0b0aef;
        /**  Encryption interstitial title. This screen asks the user whether the device will ask for a PIN / pattern / password before the device starts up. [CHAR LIMIT=30] 
         */
        public static final int encryption_interstitial_header=0x7f0b0aee;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_password=0x7f0b0af2;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_password_for_fingerprint=0x7f0b0af5;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pattern=0x7f0b0af1;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pattern_for_fingerprint=0x7f0b0af4;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pin=0x7f0b0af0;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pin_for_fingerprint=0x7f0b0af3;
        /**  Message of dialog confirming that user wants to protect external storage. [CHAR LIMIT=NONE] 
 Message of dialog confirming that user wants to protect external storage. [CHAR LIMIT=NONE] 
         */
        public static final int enforce_read_external_confirm_message=0x7f0b06c5;
        /**  Title of dialog confirming that user wants to protect external storage. [CHAR LIMIT=32] 
 Title of dialog confirming that user wants to protect external storage. [CHAR LIMIT=32] 
         */
        public static final int enforce_read_external_confirm_title=0x7f0b06c4;
        /**  Summary of checkbox setting that protects external storage. [CHAR LIMIT=64] 
 Summary of checkbox setting that protects external storage. [CHAR LIMIT=64] 
         */
        public static final int enforce_read_external_summary=0x7f0b06c3;
        /**  Title of checkbox setting that protects external storage. [CHAR LIMIT=32] 
 Title of checkbox setting that protects external storage. [CHAR LIMIT=32] 
         */
        public static final int enforce_read_external_title=0x7f0b06c2;
        /**  Enhaced 4G LTE Mode summary.  [CHAR LIMIT=100] 
         */
        public static final int enhanced_4g_lte_mode_summary=0x7f0b09f6;
        /**  Enhaced 4G LTE Mode title.  [CHAR LIMIT=50] 
         */
        public static final int enhanced_4g_lte_mode_title=0x7f0b09f5;
        /**  This is displayed to the user when the device needs to be decrypted 
         */
        public static final int enter_password=0x7f0b08b0;
        /**  Informational text on the pattern entry screen prompting the user for their pattern 
         */
        public static final int enter_pattern=0x7f0b08b2;
        /**  Informational text on the pin entry screen prompting the user for their pin 
         */
        public static final int enter_pin=0x7f0b08b1;
        /**  SD card & phone storage settings screen, label for check box to erase USB storage [CHAR LIMIT=30] 
 SD card & phone storage settings screen, label for check box to erase SD card [CHAR LIMIT=30] 
         */
        public static final int erase_external_storage=0x7f0b051c;
        /**  SD card & phone storage settings screen, description for check box to erase USB storage [CHAR LIMIT=NONE] 
 SD card & phone storage settings screen, description for check box to erase USB storage [CHAR LIMIT=NONE] 
         */
        public static final int erase_external_storage_description=0x7f0b051d;
        /**  APN error dialog messages: 
         */
        public static final int error_apn_empty=0x7f0b0507;
        /**  APN error dialog messages: 
         */
        public static final int error_mcc_not3=0x7f0b0508;
        /**  APN error dialog messages: 
         */
        public static final int error_mnc_not23=0x7f0b0509;
        /**  APN error dialog messages: 
         */
        public static final int error_name_empty=0x7f0b0506;
        /**  APN error dialog title 
         */
        public static final int error_title=0x7f0b0505;
        /**  Summary Title for saying that the preference is experimental and will evolve over time due to User feedback. [CHAR LIMIT=NONE] 
         */
        public static final int experimental_preference=0x7f0b0ae7;
        /**   Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's code on USB storage [CHARSIZE=40] 
         */
        public static final int external_code_size_label=0x7f0b05c8;
        /**   Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's data on USB storage [CHARSIZE=40] 
  Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's data on the SD card [CHARSIZE=40] 
         */
        public static final int external_data_size_label=0x7f0b05ca;
        /**  Extreme threats summary.  [CHAR LIMIT=62] 
         */
        public static final int extreme_threats_summary=0x7f0b09e8;
        /**  Extreme threats title.  [CHAR LIMIT=30] 
         */
        public static final int extreme_threats_title=0x7f0b09e7;
        /**  Toast that settings for an application is failed to open. 
         */
        public static final int failed_to_open_app_settings_toast=0x7f0b065f;
        /**  About phone screen, fcc equipment id label  [CHAR LIMIT=40] 
         */
        public static final int fcc_equipment_id=0x7f0b0453;
        /**  Text for menu option in ManageApps screen to present various menu options 
         */
        public static final int filter=0x7f0b05e4;
        /**  Label for showing all apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_all_apps=0x7f0b0b1e;
        /**  Text for filter option in ManageApps screen to display all installed
    applications 
         */
        public static final int filter_apps_all=0x7f0b05e6;
        /**  [CHAR LIMIT=NONE] Text for filter option in ManageApps screen to display disabled apps 
         */
        public static final int filter_apps_disabled=0x7f0b05e7;
        /**  Text for filter option in ManageApps screen to display list of
    packages installed on sdcard. [CHAR LIMIT=30] 
 Text for filter option in ManageApps screen to display list of
    packages installed on sdcard. 
         */
        public static final int filter_apps_onsdcard=0x7f0b05ea;
        /**  Text for filter option in ManageApps screen to display list of running
    packages only. 
         */
        public static final int filter_apps_running=0x7f0b05e9;
        /**  Text for filter option in ManageApps screen to display third party
    applications only 
         */
        public static final int filter_apps_third_party=0x7f0b05e8;
        /**  Title of dialog for presenting filter options 
         */
        public static final int filter_dlg_title=0x7f0b05e5;
        /**  Label for showing enabled apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_enabled_apps=0x7f0b0b1f;
        /**  Label for showing apps with blocked notifications in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_blocked_apps=0x7f0b0b22;
        /**  Label for showing apps with peeking disabled in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_no_peeking=0x7f0b0b25;
        /**  Label for showing apps with priority notifications in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_priority_apps=0x7f0b0b23;
        /**  Label for showing apps with sensitive notifications in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_sensitive_apps=0x7f0b0b24;
        /**  Label for showing apps that can draw overlays [CHAR LIMIT=45] 
         */
        public static final int filter_overlay_apps=0x7f0b0b95;
        /**  Label for showing personal apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_personal_apps=0x7f0b0b20;
        /**  Label for showing apps with domain URLs (data URI with http or https) in list [CHAR LIMIT=30] 
         */
        public static final int filter_with_domain_urls_apps=0x7f0b0b26;
        /**  Label for showing work apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_work_apps=0x7f0b0b21;
        /**  Label for showing apps that can write system settings [CHAR LIMIT=45] 
         */
        public static final int filter_write_settings_apps=0x7f0b0b9b;
        /**  Text shown when "Add fingerprint" button is disabled 
         */
        public static final int fingerprint_add_max=0x7f0b0287;
        /**  Preference to add another fingerprint 
         */
        public static final int fingerprint_add_title=0x7f0b0266;
        /**  switch for allowing fingerprint to be used for keyguard 
         */
        public static final int fingerprint_enable_keyguard_toggle_title=0x7f0b0267;
        /**  Button text shown at the end of enrollment that allows the user to add another fingerprint 
         */
        public static final int fingerprint_enroll_button_add=0x7f0b0282;
        /**  Button text shown at the end of enrollment that allows the user to move to the next step 
         */
        public static final int fingerprint_enroll_button_next=0x7f0b0283;
        /**  Button to confirm the last removing the last fingerprint. [CHAR LIMIT=20]
         */
        public static final int fingerprint_last_delete_confirm=0x7f0b0bd9;
        /**  Message shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=NONE]
         */
        public static final int fingerprint_last_delete_message=0x7f0b0bd8;
        /**  Title shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=35]
         */
        public static final int fingerprint_last_delete_title=0x7f0b0bd7;
        /**  Fingerprint managment category title - configuration options for managing enrolled fingerprints [CHAR LIMIT=22] 
         */
        public static final int fingerprint_manage_category_title=0x7f0b0264;
        /**  Fingerprint hint message when finger was not recognized.
         */
        public static final int fingerprint_not_recognized=0x7f0b0b38;
        /**  Fingerprint category title - configuration options for managing fingerprint enrollment [CHAR LIMIT=22] 
         */
        public static final int fingerprint_usage_category_title=0x7f0b0265;
        /**  Button shown when this activity is run from SetupWizard 
         */
        public static final int finish_button_label=0x7f0b08a6;
        /**  About phone screen, status item label  [CHAR LIMIT=40] 
         */
        public static final int firmware_version=0x7f0b0451;
        public static final int font_setting_title=0x7f0b0bad;
        /**  Do not translate. label for font size preview.  Does not need to be translated. 
         */
        public static final int font_size_preview_text=0x7f0b0184;
        /**  Button. Chosen when they want to save the chosen text size. 
         */
        public static final int font_size_save=0x7f0b0185;
        /**  UI debug setting: force hardware acceleration to render apps [CHAR LIMIT=25] 
         */
        public static final int force_hw_ui=0x7f0b08e5;
        /**  UI debug setting: force hardware acceleration summary [CHAR LIMIT=50] 
         */
        public static final int force_hw_ui_summary=0x7f0b08e6;
        /**  UI debug setting: force anti-aliasing to render apps [CHAR LIMIT=25] 
         */
        public static final int force_msaa=0x7f0b08e7;
        /**  UI debug setting: force anti-aliasing summary [CHAR LIMIT=50] 
         */
        public static final int force_msaa_summary=0x7f0b08e8;
        /**  UI debug setting: force right to left layout [CHAR LIMIT=37] 
         */
        public static final int force_rtl_layout_all_locales=0x7f0b08e1;
        /**  UI debug setting: force right to left layout summary [CHAR LIMIT=100] 
         */
        public static final int force_rtl_layout_all_locales_summary=0x7f0b08e2;
        /**  Manage applications, text label for button to kill / force stop an application 
         */
        public static final int force_stop=0x7f0b05c5;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when killing persistent apps
         */
        public static final int force_stop_dlg_text=0x7f0b0613;
        public static final int force_stop_dlg_title=0x7f0b0612;
        /**  Button label for generic forget action [CHAR LIMIT=20] 
         */
        public static final int forget=0x7f0b0220;
        /**  Label for free memory of device [CHAR LIMIT=25] 
         */
        public static final int free_memory=0x7f0b0b7b;
        /**  Summary for explanation of what full app data backup means. Manufacturers may wish to overlay this resource with their own text  
         */
        public static final int fullbackup_data_summary=0x7f0b0850;
        /**  Dialog title for confirmation to erase full backup data from server 
         */
        public static final int fullbackup_erase_dialog_message=0x7f0b084f;
        /**  Spoken description for the Bluetooth power control gadget. 
         */
        public static final int gadget_bluetooth=0x7f0b0817;
        /**  Brightness gadget value used to describe automatic brightness state. 
         */
        public static final int gadget_brightness_state_auto=0x7f0b081b;
        /**  Brightness gadget value used to describe maximum brightness state. 
         */
        public static final int gadget_brightness_state_full=0x7f0b081c;
        /**  Brightness gadget value used to describe half brightness state. 
         */
        public static final int gadget_brightness_state_half=0x7f0b081d;
        /**  Brightness gadget value used to describe minimum brightness state. 
         */
        public static final int gadget_brightness_state_off=0x7f0b081e;
        /**  Template for brightness gadget toggle button description. 
         */
        public static final int gadget_brightness_template=0x7f0b081a;
        /**  Spoken description for the Location power control gadget. 
         */
        public static final int gadget_location=0x7f0b0818;
        /**  Title for the screen that lets the user choose a gadget to add to the home screen
         (or other screens that can host gadgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int gadget_picker_title=0x7f0b06c8;
        /**  Gadget value used to describe off state. 
         */
        public static final int gadget_state_off=0x7f0b0813;
        /**  Gadget value used to describe on state. 
         */
        public static final int gadget_state_on=0x7f0b0812;
        /**  Template for gadget toggle button description. Populated examples are "Wi-Fi off" or "Wi-Fi turning on". 
         */
        public static final int gadget_state_template=0x7f0b0811;
        /**  Gadget value used to describe turning off state. 
         */
        public static final int gadget_state_turning_off=0x7f0b0815;
        /**  Gadget value used to describe turning on state. 
         */
        public static final int gadget_state_turning_on=0x7f0b0814;
        /**  Spoken description for the data synchronization gadget. 
         */
        public static final int gadget_sync=0x7f0b0819;
        /**  Power Control Widget 
         */
        public static final int gadget_title=0x7f0b080e;
        public static final int gadget_toggle_bluetooth=0x7f0b0810;
        public static final int gadget_toggle_wifi=0x7f0b080f;
        /**  Spoken description for the Wi-Fi power control gadget. 
         */
        public static final int gadget_wifi=0x7f0b0816;
        /**  On Language & input settings screen, heading. Inside the "Language & input settings" screen, this is the header for settings that relate to game controller devices. [CHAR LIMIT=40] 
         */
        public static final int game_controller_settings_category=0x7f0b0662;
        public static final int general_settings_title=0x7f0b00b9;
        /**  add     by  xieshanlin  20150204  BUG_ID:JWLWEL-123   (start)
 add     by  liqiang  20160416  BUG_ID:DELSLMY-1513  (start)
A:DELSLMY-686 guoshuai 20160308(end)
 add     by  liqiang  20160309  BUG_ID:DELSLMY-439  (start)
         */
        public static final int gesture_settings_title=0x7f0b0c31;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager getConfiguredNetworks API
         */
        public static final int getConfiguredNetworks=0x7f0b0bed;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager getConnectionInfo API
         */
        public static final int getConnectionInfo=0x7f0b0bee;
        /**  Warning message when changing a global setting for a tablet.[CHAR LIMIT=none] 
 Warning message when changing a global setting for a phone.[CHAR LIMIT=none] 
         */
        public static final int global_change_warning=0x7f0b09ca;
        /**  Warning message title for global font change [CHAR LIMIT=40] 
         */
        public static final int global_font_change_title=0x7f0b09cc;
        /**  Warning message title for global locale change [CHAR LIMIT=40] 
         */
        public static final int global_locale_change_title=0x7f0b09cb;
        public static final int gps_time_sync_attention_gps_off=0x7f0b012f;
        /**  MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
 MiraVision end 
MTK DateTime start
         */
        public static final int gps_time_sync_attention_gps_on=0x7f0b012e;
        /**  Sound settings screen, setting check box label 
         */
        public static final int haptic_feedback_enable_title=0x7f0b03ef;
        /**  On Text & language settings screen, category for physical keyboard text entry options. 
         */
        public static final int hardkeyboard_category=0x7f0b0658;
        /**  HDCP checking dialog title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int hdcp_checking_dialog_title=0x7f0b08be;
        /**  HDCP checking title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int hdcp_checking_title=0x7f0b08bd;
        public static final int hdmi_audio_output=0x7f0b0109;
        public static final int hdmi_audio_output_multi_channel=0x7f0b010b;
        public static final int hdmi_audio_output_stereo=0x7f0b010a;
        public static final int hdmi_auto=0x7f0b0103;
        public static final int hdmi_replace_hdmi=0x7f0b0104;
        public static final int hdmi_replace_mhl=0x7f0b0105;
        public static final int hdmi_scale_control=0x7f0b0106;
        public static final int hdmi_scale_no_scale=0x7f0b0107;
        public static final int hdmi_scale_scale_down=0x7f0b0108;
        /**  MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
 MTK Beam plus end 
 MTK HDMI start 
         */
        public static final int hdmi_settings=0x7f0b0100;
        public static final int hdmi_settings_summary=0x7f0b0101;
        /**  MTK Beam plus end 
 MTK HDMI start 
         */
        public static final int hdmi_toggler=0x7f0b00ff;
        public static final int hdmi_video_resolution=0x7f0b0102;
        /**  Header that appears at the top of Account Settings screen 
         */
        public static final int header_account_settings=0x7f0b08a3;
        /**  Title shown in AddAccount 
         */
        public static final int header_add_an_account=0x7f0b08a5;
        /**  Header title for those settings relating to application syncing. 
         */
        public static final int header_application_sync_settings=0x7f0b08a0;
        /**  Settings main menu category heading. Personal (Accounts, security, language, backup...). [CHAR LIMIT=40] 
         */
        public static final int header_category_access=0x7f0b015b;
        /**  Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40] 
         */
        public static final int header_category_connections=0x7f0b0158;
        /**  Settings main menu category heading. Device (Sound, display, battery, applications...). [CHAR LIMIT=40] 
         */
        public static final int header_category_device=0x7f0b0159;
        /**  Settings main menu category heading. Personal (Accounts, security, language, backup...). [CHAR LIMIT=40] 
         */
        public static final int header_category_personal=0x7f0b015a;
        /**  Settings main menu category heading. System (Updates, data, accessibility, about phone). [CHAR LIMIT=40] 
         */
        public static final int header_category_system=0x7f0b015c;
        /**  Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40] 
         */
        public static final int header_category_wireless_networks=0x7f0b0157;
        /**  Header for data and synchronization 
         */
        public static final int header_data_and_synchronization=0x7f0b08a1;
        /**  Running service details, description for running heavy-weight process. 
         */
        public static final int heavy_weight_stop_description=0x7f0b0645;
        /**  Help menu label [CHAR LIMIT=20] 
         */
        public static final int help_label=0x7f0b09e4;
        /**  Help URI, About phone [DO NOT TRANSLATE] 
         */
        public static final int help_uri_about=0x7f0b0c1c;
        /**  Help URI, Accessibility [DO NOT TRANSLATE] 
         */
        public static final int help_uri_accessibility=0x7f0b0c1a;
        /**  Help URI, Apps [DO NOT TRANSLATE] 
         */
        public static final int help_uri_apps=0x7f0b0c18;
        /**  Help URI, Android beam [DO NOT TRANSLATE] 
         */
        public static final int help_uri_beam=0x7f0b0c12;
        /**  Help URI, Dashboard [DO NOT TRANSLATE] 
         */
        public static final int help_uri_dashboard=0x7f0b0c11;
        /**  Help URI, Default [DO NOT TRANSLATE] 
         */
        public static final int help_uri_default=0x7f0b0c10;
        /**  Help URI, Display [DO NOT TRANSLATE] 
         */
        public static final int help_uri_display=0x7f0b0c13;
        /**  Help URI, Interruptions [DO NOT TRANSLATE] 
         */
        public static final int help_uri_interruptions=0x7f0b0c15;
        /**  Help URI, Notifications [DO NOT TRANSLATE] 
         */
        public static final int help_uri_notifications=0x7f0b0c17;
        /**  Help URI, Other sounds [DO NOT TRANSLATE] 
         */
        public static final int help_uri_other_sounds=0x7f0b0c16;
        /**  Help URI, Printing [DO NOT TRANSLATE] 
         */
        public static final int help_uri_printing=0x7f0b0c1b;
        /**  Help URI, Storage [DO NOT TRANSLATE] 
         */
        public static final int help_uri_storage=0x7f0b0c19;
        /**  Help URI, Wallpaper [DO NOT TRANSLATE] 
         */
        public static final int help_uri_wallpaper=0x7f0b0c14;
        /**  Help URL, Accounts [DO NOT TRANSLATE] 
         */
        public static final int help_url_accounts=0x7f0b0c24;
        /**  Help URL, Backup & reset [DO NOT TRANSLATE] 
         */
        public static final int help_url_backup_reset=0x7f0b0c26;
        /**  Help URL, Battery [DO NOT TRANSLATE] 
         */
        public static final int help_url_battery=0x7f0b0c23;
        /**  Help URL, Bluetooth [DO NOT TRANSLATE] 
         */
        public static final int help_url_bluetooth=0x7f0b0c1e;
        /**  Help URL, Choose lockscreen [DO NOT TRANSLATE] 
         */
        public static final int help_url_choose_lockscreen=0x7f0b0c25;
        /**  Help URL, Data usage [DO NOT TRANSLATE] 
         */
        public static final int help_url_data_usage=0x7f0b0c1f;
        /**  Help URL, Dreams [DO NOT TRANSLATE] 
         */
        public static final int help_url_dreams=0x7f0b0c28;
        /**  Help URL, Fingerprint [DO NOT TRANSLATE] 
         */
        public static final int help_url_fingerprint=0x7f0b0c2e;
        /**  Help URL, Location access [DO NOT TRANSLATE] 
         */
        public static final int help_url_location_access=0x7f0b0c2a;
        /**  Help URL, More [DO NOT TRANSLATE] 
         */
        public static final int help_url_more_networks=0x7f0b0c20;
        /**  Help URL, Tap & pay [DO NOT TRANSLATE] 
         */
        public static final int help_url_nfc_payment=0x7f0b0c2c;
        /**  Help URL, Remote display [DO NOT TRANSLATE] 
         */
        public static final int help_url_remote_display=0x7f0b0c2d;
        /**  Help URL, Security settings [DO NOT TRANSLATE] 
         */
        public static final int help_url_security=0x7f0b0c2b;
        /**  Help URL, Sound [DO NOT TRANSLATE] 
         */
        public static final int help_url_sound=0x7f0b0c22;
        /**  Help URL, Tethering [DO NOT TRANSLATE] 
         */
        public static final int help_url_tether=0x7f0b0c27;
        /**  Help URL, User settings [DO NOT TRANSLATE] 
         */
        public static final int help_url_users=0x7f0b0c29;
        /**  Help URL, Vpn [DO NOT TRANSLATE] 
         */
        public static final int help_url_vpn=0x7f0b0c21;
        /**  Help URL, WiFi [DO NOT TRANSLATE] 
         */
        public static final int help_url_wifi=0x7f0b0c1d;
        /**  MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
 MTK schedule power end 
 MTK Hetcomm start 
         */
        public static final int hetcom_setting_title=0x7f0b013e;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int hidden_ssid_label=0x7f0b0bf8;
        /**  Label for list to control apps that ignore battery saving restrictions [CHAR LIMIT=27]
         */
        public static final int high_power_apps=0x7f0b0b57;
        /**  Description of high power switch [CHAR LIMIT=NONE] 
         */
        public static final int high_power_desc=0x7f0b0b5b;
        /**  Filter for apps allowed to use a lot of power [CHAR LIMIT=25] 
         */
        public static final int high_power_filter_on=0x7f0b0b58;
        /**  Summary of app not allowed to use a lot of power [CHAR LIMIT=60] 
         */
        public static final int high_power_off=0x7f0b0b5a;
        /**  Summary of app allowed to use a lot of power [CHAR LIMIT=60] 
         */
        public static final int high_power_on=0x7f0b0b59;
        /**  Body text of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE] 
         */
        public static final int high_power_prompt_body=0x7f0b0c34;
        /**  Title of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE] 
         */
        public static final int high_power_prompt_title=0x7f0b0c33;
        /**  Summary of app which doesn't have a battery optimization setting [CHAR LIMIT=60] 
         */
        public static final int high_power_system=0x7f0b0c32;
        /**  Activity title for battery usage history details 
         */
        public static final int history_details_title=0x7f0b0761;
        /**  Home application selection - uninstall button [CHAR LIMIT=80] 
         */
        public static final int home_app_uninstall_button=0x7f0b09c8;
        /**  Main Settings screen setting option name to go into the display settings screen 
         */
        public static final int home_settings=0x7f0b03da;
        /**  Home settings screen, text indicating that a launcer does not support work profiles [CHAR LIMIT=100] 
         */
        public static final int home_work_profile_not_supported=0x7f0b03e6;
        public static final int hotknot_charging_warning=0x7f0b0127;
        /** MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
MTK DRM settings end 
MTK HotKnot start 
         */
        public static final int hotknot_explained_description=0x7f0b0126;
        /** MTK DRM settings end 
MTK HotKnot start 
         */
        public static final int hotknot_settings_title=0x7f0b0125;
        /**  Ignore battery optimizations off label [CHAR LIMIT=30] 
         */
        public static final int ignore_optimizations_off=0x7f0b0b83;
        /**  Ignore battery optimizations off description [CHAR LIMIT=NONE] 
         */
        public static final int ignore_optimizations_off_desc=0x7f0b0b85;
        /**  Ignore battery optimizations on label [CHAR LIMIT=30] 
         */
        public static final int ignore_optimizations_on=0x7f0b0b82;
        /**  Ignore battery optimizations on description [CHAR LIMIT=NONE] 
         */
        public static final int ignore_optimizations_on_desc=0x7f0b0b84;
        /**  Ignore battery optimizations dialog title [CHAR LIMIT=NONE] 
         */
        public static final int ignore_optimizations_title=0x7f0b0b86;
        /**  Warning message about security implications of enabling an input method, displayed as a dialog
         message when the user selects to enable an IME. 
         */
        public static final int ime_security_warning=0x7f0b065b;
        public static final int imei_information_summary=0x7f0b0b02;
        /**  Title and summary for SIM Status 
 Title for IMEI preference [CHAR LIMIT=30] 
 Title and summary for SIM Status 
         */
        public static final int imei_information_title=0x7f0b0aed;
        /**  UI debug setting: immediately destroy activities? [CHAR LIMIT=25] 
         */
        public static final int immediately_destroy_activities=0x7f0b08f4;
        /**  UI debug setting: immediately destroy activities summary [CHAR LIMIT=50] 
         */
        public static final int immediately_destroy_activities_summary=0x7f0b08f5;
        /**  Phone IMS registration required off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int ims_reg_required_off=0x7f0b0162;
        /**  Phone SMS over IMS IMS registration required on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int ims_reg_required_on=0x7f0b0161;
        /**  Settings item summary for active app [CHAR LIMIT=100] 
         */
        public static final int inactive_app_active_summary=0x7f0b0b69;
        /**  Settings item summary for inactive app [CHAR LIMIT=100] 
         */
        public static final int inactive_app_inactive_summary=0x7f0b0b68;
        /**  Settings item title for inactive apps [CHAR LIMIT=35] 
         */
        public static final int inactive_apps_title=0x7f0b0b67;
        /**  Auto-restore menu title [CHAR LIMIT=30] 
         */
        public static final int include_app_data_title=0x7f0b0842;
        /**  Sound settings screen, the title of the volume bar to adjust the incoming call volume 
         */
        public static final int incoming_call_volume_title=0x7f0b03e3;
        /**  Setting name for Input Method chooser 
         */
        public static final int input_method=0x7f0b0681;
        /**  Title for setting the visibility of input method selector [CHAR LIMIT=35] 
         */
        public static final int input_method_selector=0x7f0b0683;
        /**  An option to always hide input method selector [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_always_hide_title=0x7f0b0686;
        public static final int input_method_selector_always_hide_value=0x7f0b0ba7;
        /**  An option to always show input method selector [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_always_show_title=0x7f0b0685;
        public static final int input_method_selector_always_show_value=0x7f0b0ba6;
        /**  An option to always show input method selector automatically when needed [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_show_automatically_title=0x7f0b0684;
        /**  values for input method selector should be corresponding to the array index of titles 
         */
        public static final int input_method_selector_show_automatically_value=0x7f0b0ba5;
        public static final int input_method_selector_visibility_default_value=0x7f0b0ba8;
        /**  Title for settings of each IME [CHAR LIMIT=25] 
         */
        public static final int input_method_settings=0x7f0b0688;
        /**  Spoken description for IME settings image button [CHAR LIMIT=NONE] 
         */
        public static final int input_method_settings_button=0x7f0b0689;
        /**  Title for the settings of selecting active input methods of an IME [CHAR LIMIT=35] 
         */
        public static final int input_methods_and_subtype_enabler_title=0x7f0b068d;
        /**  Input Methods Settings localized format string for generating the appropriate "Foo settings" menu label for the Input Method named "Foo" [CHAR LIMIT=35] 
         */
        public static final int input_methods_settings_label_format=0x7f0b068c;
        /**  Input methods Settings 
         */
        public static final int input_methods_settings_title=0x7f0b0680;
        /**  Applications settings screen, message text of alert that appears if user selects the "Unknown sources" check box 
 Applications settings screen, message text of alert that appears if user selects the "Unknown sources" check box 
         */
        public static final int install_all_warning=0x7f0b05b8;
        /**  Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  
         */
        public static final int install_applications=0x7f0b05b4;
        /**  Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  [CHAR LIMIT=30] 
         */
        public static final int install_applications_title=0x7f0b05b5;
        /**  [CHAR LIMIT=NONE] Manage applications, individual application info screen, button label under Storage heading. Button to install an application for the user. 
         */
        public static final int install_text=0x7f0b05cd;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Unknown sources" checkbox  
         */
        public static final int install_unknown_applications=0x7f0b05b7;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Unknown sources" checkbox  [CHAR LIMIT=65] 
         */
        public static final int install_unknown_applications_title=0x7f0b05b6;
        /**  Manage applications, text for move error messages 
         */
        public static final int insufficient_storage=0x7f0b060d;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_account_label=0x7f0b01d0;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_action_label=0x7f0b01cd;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_data_label=0x7f0b01cb;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_resource_label=0x7f0b01cf;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_sendbroadcast_text=0x7f0b01cc;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_startactivity_text=0x7f0b01ce;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the phone's internal storage  
         */
        public static final int internal_memory=0x7f0b0473;
        /**  [CHAR LIMIT=15] Manage applications, label for chart showing internal storage use. 
         */
        public static final int internal_storage=0x7f0b05ee;
        /**  [CHAR LIMIT=30] Title for internal device storage that is capitalized for placement as a phrase into another sentence 
         */
        public static final int internal_storage_sentence=0x7f0b05ef;
        public static final int interval_every_ten_mins=0x7f0b0c52;
        public static final int interval_every_twenty_mins=0x7f0b0c53;
        public static final int interval_once=0x7f0b0c51;
        public static final int invalid_location=0x7f0b0610;
        public static final int invalid_size_value=0x7f0b0606;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int ipaddr_label=0x7f0b0bf9;
        public static final int ipo_summary_off=0x7f0b0131;
        /** MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
MTK DateTime end
 MTK IPO settings start 
         */
        public static final int ipo_title=0x7f0b0130;
        /**  [CHAR_LIMIT=NONE] Format to put the first item at the start of a series of 3 or more items in a list 
         */
        public static final int join_many_items_first=0x7f0b0601;
        /**  [CHAR_LIMIT=NONE] Format to put the last item at the end of a series of 3 or more items in a list 
         */
        public static final int join_many_items_last=0x7f0b0600;
        /**  [CHAR_LIMIT=NONE] Format to put the middle items together in a series of 4 or more items in a list 
         */
        public static final int join_many_items_middle=0x7f0b0602;
        /**  [CHAR_LIMIT=NONE] Format to put together two items in a list. 
         */
        public static final int join_two_items=0x7f0b05ff;
        /**  Setting Checkbox title whether to keep the screen on when plugged in to a power source 
         */
        public static final int keep_screen_on=0x7f0b069c;
        /**  setting Checkbox summary whether to keep the screen on when plugged in  
         */
        public static final int keep_screen_on_summary=0x7f0b069d;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int kernel_version=0x7f0b0455;
        /**  Label of the default keyboard layout.  [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_default_label=0x7f0b0668;
        /**  Button to configure keyboard layouts.  [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_dialog_setup_button=0x7f0b0666;
        /**  Hint describing how to switch keyboard layouts using the keyboard.  [CHAR LIMIT=48] 
         */
        public static final int keyboard_layout_dialog_switch_hint=0x7f0b0667;
        /**  Title for the keyboard layout preference dialog. [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_dialog_title=0x7f0b0665;
        /**  Title for the keyboard layout picker activity. [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_picker_title=0x7f0b0669;
        /**  On Language & keyboard settings screen, heading. Inside the "Language & keyboard settings" screen, this is the header for settings that relate to keyboard (enable/disable each keyboard, settings for each keyboard). 
         */
        public static final int keyboard_settings_category=0x7f0b0650;
        /**  Title of keyboard settings list item within voice input/output settings 
         */
        public static final int keyboard_settings_title=0x7f0b07d6;
        public static final int keywords_accounts=0x7f0b0a56;
        public static final int keywords_all_apps=0x7f0b0a5c;
        public static final int keywords_app=0x7f0b0a53;
        public static final int keywords_app_permissions=0x7f0b0a5d;
        public static final int keywords_battery=0x7f0b0a49;
        public static final int keywords_date_and_time=0x7f0b0a4d;
        public static final int keywords_default_apps=0x7f0b0a5e;
        public static final int keywords_default_phone_app=0x7f0b0a5b;
        public static final int keywords_display=0x7f0b0a41;
        public static final int keywords_display_auto_brightness=0x7f0b0a43;
        public static final int keywords_display_brightness_level=0x7f0b0a42;
        public static final int keywords_display_cast_screen=0x7f0b0a47;
        public static final int keywords_display_font_size=0x7f0b0a46;
        /**  Search keywords for display light/dark theme: dark theme, night mode, dim screen, invert brightness [CHAR LIMIT=NONE] 
         */
        public static final int keywords_display_night_mode=0x7f0b0a44;
        public static final int keywords_display_wallpaper=0x7f0b0a45;
        public static final int keywords_emergency_app=0x7f0b0a5a;
        public static final int keywords_factory_data_reset=0x7f0b0a4f;
        public static final int keywords_home=0x7f0b0a40;
        public static final int keywords_ignore_optimizations=0x7f0b0a5f;
        public static final int keywords_keyboard_and_ime=0x7f0b0a58;
        public static final int keywords_location=0x7f0b0a54;
        public static final int keywords_location_mode=0x7f0b0a55;
        /**  Search keywords for different screen unlock modes : slide to unlock, password, pattern and PIN [CHAR LIMIT=none] 
         */
        public static final int keywords_lockscreen=0x7f0b0a60;
        public static final int keywords_more_default_sms_app=0x7f0b0a3d;
        public static final int keywords_more_mobile_networks=0x7f0b0a3e;
        public static final int keywords_network_reset=0x7f0b0a4e;
        public static final int keywords_printing=0x7f0b0a50;
        public static final int keywords_reset_apps=0x7f0b0a59;
        public static final int keywords_sounds_and_notifications=0x7f0b0a51;
        public static final int keywords_sounds_and_notifications_interruptions=0x7f0b0a52;
        public static final int keywords_spell_checker=0x7f0b0a4a;
        public static final int keywords_storage=0x7f0b0a48;
        /**  Keyword for SYSTEM_ALERT_WINDOW 
         */
        public static final int keywords_system_alert_window=0x7f0b0b92;
        public static final int keywords_text_to_speech_output=0x7f0b0a4c;
        public static final int keywords_users=0x7f0b0a57;
        public static final int keywords_voice_input=0x7f0b0a4b;
        /** Search Keywords [CHAR LIMIT=NONE]
         */
        public static final int keywords_wifi=0x7f0b0a3c;
        public static final int keywords_wifi_calling=0x7f0b0a3f;
        /**  Keyword for WRITE_SETTINGS 
         */
        public static final int keywords_write_settings=0x7f0b0b99;
        /**  Title of Language and keyboard settings screen 
         */
        public static final int language_keyboard_settings_title=0x7f0b064e;
        /**  LocalePicker 
 Title for the locale picker activity 
         */
        public static final int language_picker_title=0x7f0b0216;
        /**  Title of setting on main settings screen.  This item will take the user to the screen to tweak settings realted to locale and text 
         */
        public static final int language_settings=0x7f0b064d;
        /**  On Language & keyboard settings screen, heading. Inside the "Language & keyboard settings" screen, this is the header for settings that relate to language (select the system language, user dictionary for the language). 
         */
        public static final int language_settings_category=0x7f0b064f;
        /**  choice for the font size spinner 
         */
        public static final int large_font=0x7f0b0183;
        /**  Last synced date/time for accounts that synced [CHAR LIMIT=none] 
         */
        public static final int last_synced=0x7f0b0895;
        /**  label for last time used 
         */
        public static final int last_time_used_label=0x7f0b06d8;
        /**  New strings needed for App Info 2 
 Preference label for app default launch settings [CHAR LIMIT=35]
         */
        public static final int launch_by_default=0x7f0b0b04;
        /**  Launch defaults preference summary with none set [CHAR LIMIT=40] 
         */
        public static final int launch_defaults_none=0x7f0b0b1d;
        /**  Launch defaults preference summary with some set [CHAR LIMIT=40] 
         */
        public static final int launch_defaults_some=0x7f0b0b1c;
        /**  Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
 Storage & USB settings end 
 MTK Storage Settings start 
         */
        public static final int launch_error=0x7f0b0137;
        /**  Setting Checkbox title whether to enable WiFi Scanning in the presence of traffic. [CHAR LIMIT=80] 
         */
        public static final int legacy_dhcp_client=0x7f0b06af;
        /**  Title of warning dialog about the implications of enabling USB debugging 
 Setting Checkbox summary whether to use DHCP client from Lollipop (Android 5.0) [CHAR LIMIT=130] 
         */
        public static final int legacy_dhcp_client_summary=0x7f0b06b9;
        /**  About phone settings screen, setting option name to go to dialog that shows legal info 
         */
        public static final int legal_information=0x7f0b0573;
        /**  About phone settings screen, setting option name to see licensing info 
         */
        public static final int license_title=0x7f0b0577;
        /**  [CHAR LIMIT=40] Display settings screen, setting option name to change whether the device wakes up when a lift gesture is detected. 
         */
        public static final int lift_to_wake_title=0x7f0b042c;
        /**  Link speed on Wifi Status screen 
         */
        public static final int link_speed=0x7f0b032b;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int link_speed_label=0x7f0b0bfc;
        /**  [CHAR LIMIT=NONE] Text when loading app list in notification settings 
         */
        public static final int loading_notification_apps=0x7f0b0a95;
        /**  Summary text of the "local backup password" setting when the user has already supplied a password 
         */
        public static final int local_backup_password_summary_change=0x7f0b0849;
        /**  Summary text of the "local backup password" setting when the user has not supplied a password 
         */
        public static final int local_backup_password_summary_none=0x7f0b0848;
        /**  Local (desktop) backup password menu title [CHAR LIMIT=25] 
         */
        public static final int local_backup_password_title=0x7f0b0847;
        /**  Toast message shown when setting a new local backup password fails due to the user not correctly typing the password again for confirmation [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_confirmation_mismatch=0x7f0b084b;
        /**  Toast message shown when the user successfully sets a new local backup password [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_success=0x7f0b084a;
        /**  Toast message shown when setting a new local backup password fails due to the user not supplying the correct existing password. The phrasing here is deliberately quite general. [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_validation_failure=0x7f0b084c;
        /**  Label for the default device locale. [CHAR LIMIT=35] 
         */
        public static final int locale_default=0x7f0b070f;
        /**  [CHAR LIMIT=none] Description text for location access switch 
         */
        public static final int location_access_summary=0x7f0b056f;
        /**  [CHAR LIMIT=45] Label for turning on/off location access completely. 
         */
        public static final int location_access_title=0x7f0b056e;
        /**  [CHAR LIMIT=30] Location settings screen, sub category for location services 
         */
        public static final int location_category_location_services=0x7f0b0557;
        /**  [CHAR LIMIT=30] Location settings screen, sub category for recent location requests 
         */
        public static final int location_category_recent_location_requests=0x7f0b0555;
        /**  [CHAR LIMIT=30] Security & location settings screen, setting check box label for GPS satellites 
         */
        public static final int location_gps=0x7f0b0567;
        /**  [CHAR LIMIT=30] Location settings screen, recent location requests high battery use
         */
        public static final int location_high_battery_use=0x7f0b0558;
        /**  [CHAR LIMIT=30] Location settings screen, recent location requests low battery use
         */
        public static final int location_low_battery_use=0x7f0b0559;
        /**  Help menu label [CHAR LIMIT=20] Location settings screen, overflow menu that takes the user
      to scanning settings activity 
         */
        public static final int location_menu_scanning=0x7f0b055e;
        /**  [CHAR LIMIT=130] Location mode screen, description for battery saving mode 
         */
        public static final int location_mode_battery_saving_description=0x7f0b055c;
        /**  [CHAR LIMIT=30] Location settings screen, battery saving location mode 
         */
        public static final int location_mode_battery_saving_title=0x7f0b0552;
        /**  [CHAR LIMIT=130] Location mode screen, description for high accuracy mode 
         */
        public static final int location_mode_high_accuracy_description=0x7f0b055b;
        /**  [CHAR LIMIT=30] Location settings screen, high accuracy location mode 
         */
        public static final int location_mode_high_accuracy_title=0x7f0b0551;
        /**  [CHAR LIMIT=30] Location settings screen, location off mode 
         */
        public static final int location_mode_location_off_title=0x7f0b0554;
        /**  [CHAR LIMIT=30] Location mode screen, screen title 
         */
        public static final int location_mode_screen_title=0x7f0b055a;
        /**  [CHAR LIMIT=130] Location mode screen, description for sensors only mode 
         */
        public static final int location_mode_sensors_only_description=0x7f0b055d;
        /**  [CHAR LIMIT=30] Location settings screen, device only location mode 
         */
        public static final int location_mode_sensors_only_title=0x7f0b0553;
        /**  [CHAR LIMIT=30] Location settings screen, setting preference screen box label for location mode 
         */
        public static final int location_mode_title=0x7f0b0550;
        /**  [CHAR LIMIT=130] Security & location settings screen, setting summary for Google location service check box
         */
        public static final int location_neighborhood_level=0x7f0b0565;
        /**  [CHAR LIMIT=130] Security & location settings screen, setting summary when Use wireless networks check box is selected, for wifi-only devices 
         */
        public static final int location_neighborhood_level_wifi=0x7f0b0566;
        /**  [CHAR LIMIT=30] Security & location settings screen, setting check box label for Google location service (cell ID, wifi, etc.) 
         */
        public static final int location_network_based=0x7f0b0564;
        /**  Location settings screen, displayed when there's no recent app accessing location 
         */
        public static final int location_no_recent_apps=0x7f0b0556;
        public static final int location_prefix=0x7f0b0c58;
        /**  Description text for Bluetooth always scanning 
         */
        public static final int location_scanning_bluetooth_always_scanning_description=0x7f0b0563;
        /**  [CHAR LIMIT=130] Description text for Bluetooth always scanning 
         */
        public static final int location_scanning_bluetooth_always_scanning_title=0x7f0b0562;
        /**  [CHAR LIMIT=30] Wireless background scanning settings screen, screen title 
         */
        public static final int location_scanning_screen_title=0x7f0b055f;
        /**  Preference description text for Wi-Fi always scanning 
         */
        public static final int location_scanning_wifi_always_scanning_description=0x7f0b0561;
        /**  [CHAR LIMIT=130] Preference title for Wi-Fi always scanning 
         */
        public static final int location_scanning_wifi_always_scanning_title=0x7f0b0560;
        /**  Main Settings screen setting option title for the item to take you to the location screen 
         */
        public static final int location_settings_title=0x7f0b025d;
        /**  [CHAR LIMIT=45] Section heading for location sources 
         */
        public static final int location_sources_heading=0x7f0b0570;
        /**  [CHAR LIMIT=100] Security & location settings screen, setting check box summary for GPS satellites on a tablet 
 [CHAR LIMIT=100] Security & location settings screen, setting check box summary for GPS satellites on a phone 
         */
        public static final int location_street_level=0x7f0b0568;
        /**  Security & location settings screen, section header for settings relating to location 
         */
        public static final int location_title=0x7f0b054c;
        /**  Security settings screen, setting option name to change screen timeout 
         */
        public static final int lock_after_timeout=0x7f0b024e;
        /**  Security settings screen, setting option summary to change screen timeout 
         */
        public static final int lock_after_timeout_summary=0x7f0b024f;
        /**  Security settings screen, setting option summary to change screen timeout, with additional explanation
         */
        public static final int lock_after_timeout_summary_with_exception=0x7f0b0251;
        /**  Security settings screen, setting option summary to change screen timeout, with additional explanation
         */
        public static final int lock_immediately_summary_with_exception=0x7f0b0250;
        /**  Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Message asking the user how they want their notifications to appear when the device is locked [CHAR LIMIT=NONE] 
         */
        public static final int lock_screen_notifications_interstitial_message=0x7f0b0a7e;
        /**  Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Title for the screen asking the user how they want their notifications to appear when the device is locked [CHAR LIMIT=30] 
         */
        public static final int lock_screen_notifications_interstitial_title=0x7f0b0a7f;
        /**  Sound & notification > Notification section: Value for lockscreen notifications: notifications will not appear on a secure lock screen
         [CHAR LIMIT=50] 
         */
        public static final int lock_screen_notifications_summary_disable=0x7f0b0a7d;
        /**  Sound & notification > Notification section: Value for lockscreen notifications: sensitive information will be
         hidden or redacted from notifications shown on a secure lock screen
         [CHAR LIMIT=50] 
         */
        public static final int lock_screen_notifications_summary_hide=0x7f0b0a7c;
        /**  Sound & notification > Notification section: Value for lockscreen notifications:  all information will be
         shown in notifications shown on a secure lock screen
         [CHAR LIMIT=50] 
         */
        public static final int lock_screen_notifications_summary_show=0x7f0b0a7b;
        /**  Sound & notification > Notification section: Title for the option controlling notifications on the lockscreen. [CHAR LIMIT=30] 
         */
        public static final int lock_screen_notifications_title=0x7f0b0a7a;
        /**  Message shown in screen lock picker while setting up the backup/fallback screen lock method for fingerprint. Users can choose to use this method to unlock the screen instead of fingerprint, or when fingerprint is not accepted. [CHAR LIMIT=80] [BACKUP_MESSAGE_ID=2799884038398627882] 
         */
        public static final int lock_settings_picker_fingerprint_message=0x7f0b0bda;
        /**   Title for security picker to choose the unlock method: None/Pattern/PIN/Password [CHAR LIMIT=22] 
         */
        public static final int lock_settings_picker_title=0x7f0b029f;
        /**  Lock Pattern settings 
 Security & location settings screen, header 
         */
        public static final int lock_settings_title=0x7f0b0595;
        /**  Toast shown when lock pattern or password successfully setup. [CHAR LIMIT=64] 
         */
        public static final int lock_setup=0x7f0b02d6;
        /**  Sound settings screen, setting check box label 
         */
        public static final int lock_sounds_enable_title=0x7f0b03ee;
        public static final int lockdown_vpn_already_connected=0x7f0b00a4;
        /**  Label for ChoosePassword/PIN OK button 
         */
        public static final int lockpassword_cancel_label=0x7f0b02d3;
        /**  Header shown to ask the user to select an unlock method [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_lock_generic_header=0x7f0b058b;
        /**  Lock Pattern settings 
 Header on first screen of choose password/PIN flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_password_header=0x7f0b0583;
        /**  Header on first screen of choose pattern flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_pattern_header=0x7f0b0584;
        /**  Header on first screen of choose password/PIN flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_pin_header=0x7f0b0585;
        /**  Header on password confirm screen if second password doesn't match the first. [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_passwords_dont_match=0x7f0b0589;
        /**  Header on pin confirm screen if second pin doesn't match the first. [CHAR LIMIT=30]
         */
        public static final int lockpassword_confirm_pins_dont_match=0x7f0b058a;
        /**  Message to be used to explain the user that he needs to enter his password to continue a
         particular operation. [CHAR LIMIT=70]
         */
        public static final int lockpassword_confirm_your_password_generic=0x7f0b0591;
        /**  Header on password confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_password_header=0x7f0b0586;
        /**  Message to be used to explain the user that he needs to enter his pattern to continue a
         particular operation. [CHAR LIMIT=70]
         */
        public static final int lockpassword_confirm_your_pattern_generic=0x7f0b058f;
        /**  Header on pattern confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_pattern_header=0x7f0b0587;
        /**  Message to be used to explain the user that he needs to enter his PIN to continue a
         particular operation. [CHAR LIMIT=70]
         */
        public static final int lockpassword_confirm_your_pin_generic=0x7f0b0590;
        /**  Header on password confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_pin_header=0x7f0b0588;
        /**  Hint shown after minimum password criteria is met 
         */
        public static final int lockpassword_continue_label=0x7f0b02c7;
        /**  Error shown when in PASSWORD mode and user enters an invalid character 
         */
        public static final int lockpassword_illegal_character=0x7f0b02cc;
        /**  Security & location settings screen, change security method screen instruction if user
         enters incorrect password [CHAR LIMIT=30] 
         */
        public static final int lockpassword_invalid_password=0x7f0b0593;
        /**  Security & location settings screen, change security method screen instruction if user
         enters incorrect PIN [CHAR LIMIT=30] 
         */
        public static final int lockpassword_invalid_pin=0x7f0b0592;
        /**  Label for ChoosePassword/PIN OK button 
         */
        public static final int lockpassword_ok_label=0x7f0b02d2;
        /**  Error shown when in PASSWORD mode and password has been used recently. Please keep this string short! 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_uppercase (2483949715040341677) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_numeric (9156410893744210033) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_symbols (5384442837439742233) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_nonletter (4175064976268466293) 
         */
        public static final int lockpassword_password_recently_used=0x7f0b02d0;
        /**  Error shown when in PASSWORD mode and password is all digits 
         */
        public static final int lockpassword_password_requires_alpha=0x7f0b02cd;
        /**  Error shown when in PASSWORD mode and password doesn't contain any digits 
         */
        public static final int lockpassword_password_requires_digit=0x7f0b02ce;
        /**  Error shown when in PASSWORD mode and password doesn't contain any symbols 
         */
        public static final int lockpassword_password_requires_symbol=0x7f0b02cf;
        /**  Toast shown if setting password was successful 
         */
        public static final int lockpassword_password_set_toast=0x7f0b058c;
        /**  Error shown in popup when password is too long 
         */
        public static final int lockpassword_password_too_long=0x7f0b02c8;
        /**  Hint shown in dialog screen when password is too short 
         */
        public static final int lockpassword_password_too_short=0x7f0b02c4;
        /**  Toast shown if setting pattern was successful 
         */
        public static final int lockpassword_pattern_set_toast=0x7f0b058e;
        /**  Error shown when in PIN mode and user enters a non-digit 
         */
        public static final int lockpassword_pin_contains_non_digits=0x7f0b02ca;
        /**  [CHAR_LIMIT=NONE] Error shown when the user tries to set an ascending or descending sequence of digits 
         */
        public static final int lockpassword_pin_no_sequential_digits=0x7f0b02d1;
        /**  Error shown when in PIN mode and PIN has been used recently. Please keep this string short! 
         */
        public static final int lockpassword_pin_recently_used=0x7f0b02cb;
        /**  Toast shown if setting PIN was successful 
         */
        public static final int lockpassword_pin_set_toast=0x7f0b058d;
        /**  Error shown in popup when PIN is too long 
         */
        public static final int lockpassword_pin_too_long=0x7f0b02c9;
        /**  Hint shown in dialog screen when PIN is too short 
         */
        public static final int lockpassword_pin_too_short=0x7f0b02c5;
        /**  Hint shown after minimum password criteria is met 
         */
        public static final int lockpassword_press_continue=0x7f0b02c6;
        /**  Security & location settings screen, setting option name 
         */
        public static final int lockpattern_change_lock_pattern_label=0x7f0b0596;
        /**  Security & location settings screen, change unlock pattern screen instruction when the user chooses "Change unlock pattern".  We first ask the user toe nter the current pattern, and this is the message seen 
         */
        public static final int lockpattern_change_lock_pin_label=0x7f0b0597;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  When they are ready to draw it once again to confirm it, they press this button. 
         */
        public static final int lockpattern_confirm_button_text=0x7f0b059f;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. Once they draw a new pattern and confirm it by drawing it again, they press this button to exit 
         */
        public static final int lockpattern_continue_button_text=0x7f0b05a2;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen to confirm pattern 
         */
        public static final int lockpattern_need_to_confirm=0x7f0b059d;
        /**  Security & location settings screen, change unlock pattern screen instruction if user
         draws incorrect pattern [CHAR LIMIT=30] 
         */
        public static final int lockpattern_need_to_unlock_wrong=0x7f0b0594;
        public static final int lockpattern_pattern_confirmed_header=0x7f0b059e;
        /**  Security & location settings screen, change unlock pattern screen message on top of screen after drawing pattern 
         */
        public static final int lockpattern_pattern_entered_header=0x7f0b059c;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen if user doesn't connect enough dots 
         */
        public static final int lockpattern_recording_incorrect_too_short=0x7f0b059b;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen while drawing pattern 
         */
        public static final int lockpattern_recording_inprogress=0x7f0b059a;
        /**  Security & location settings screen, change unlock pattern screen hint on bottom of screen.  We are telling them to press the menu button to see more options or help. 
         */
        public static final int lockpattern_recording_intro_footer=0x7f0b0599;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen.  This si when they are supposed to draw a new unlock pattern (for example, if they are changing their unlock patterns)..
         */
        public static final int lockpattern_recording_intro_header=0x7f0b0598;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  If they are nto satisfied with this pattern, they click this button to redraw the pattern. 
         */
        public static final int lockpattern_restart_button_text=0x7f0b05a0;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. If they are supposed to enter their current pattern before being able to draw another one, and they screw up, they hit this button to try again 
         */
        public static final int lockpattern_retry_button_text=0x7f0b05a1;
        /**  Security & location settings screen, setting option name when user has previously set an unlock pattern and wants to change to a new pattern 
         */
        public static final int lockpattern_settings_change_lock_pattern=0x7f0b05ab;
        /**  Security & location settings screen, setting option name when user has never set an unlock pattern 
         */
        public static final int lockpattern_settings_choose_lock_pattern=0x7f0b05aa;
        /**  Security & location settings screen, setting check box title. This controls whether the device locks immediately when the power button is pressed. [CHAR LIMIT=28]
         */
        public static final int lockpattern_settings_enable_power_button_instantly_locks=0x7f0b05a8;
        /**  Security & location settings screen, setting summary for the checkbox "Require pattern" 
         */
        public static final int lockpattern_settings_enable_summary=0x7f0b05a5;
        /**  Security & location settings screen, setting check box title. This setting controls whether tactile feedback will be produced when the user draws the pattern.
         */
        public static final int lockpattern_settings_enable_tactile_feedback_title=0x7f0b05a7;
        /**  Security & location settings screen, setting check box title if the unlock pattern MUST be drawn everytime they turn on the screen 
         */
        public static final int lockpattern_settings_enable_title=0x7f0b05a4;
        /**  Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the user moves his finger around while drawing the unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the user does not reveal his pattern while he unlocks the phone.
         */
        public static final int lockpattern_settings_enable_visible_pattern_title=0x7f0b05a6;
        /**  Security & location settings screen, the help instructions (an animation) caption 
         */
        public static final int lockpattern_settings_help_how_to_record=0x7f0b05ac;
        /**  Security & location settings screen, setting optional summary when a trust agent is enabled
         */
        public static final int lockpattern_settings_power_button_instantly_locks_summary=0x7f0b05a9;
        /**  Security & location settings screen, unlock screen activity title 
         */
        public static final int lockpattern_settings_title=0x7f0b05a3;
        /**  Security & location settings screen, confirm unlock pattern screen hint at the bottom after
         too many incorrect attempts [CHAR LIMIT=120]
         */
        public static final int lockpattern_too_many_failed_confirmation_attempts=0x7f0b05ad;
        /**  Label for LockPatternTutorial Cancel button 
         */
        public static final int lockpattern_tutorial_cancel_label=0x7f0b02d4;
        /**  Label for LockPatternTutorial Continue button 
         */
        public static final int lockpattern_tutorial_continue_label=0x7f0b02d5;
        public static final int lossless_cannot_found_device=0x7f0b00d4;
        public static final int lossless_connect_summary=0x7f0b00cf;
        public static final int lossless_on=0x7f0b00d0;
        public static final int lossless_playing=0x7f0b00d1;
        public static final int lossless_summary=0x7f0b00ce;
        public static final int lossless_title=0x7f0b00cd;
        public static final int lossless_toastmessage=0x7f0b00d2;
        public static final int lossless_volume_max=0x7f0b00d3;
        /**  Phone ram dump off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int lte_ram_dump_off=0x7f0b0166;
        /**  Phone ram dump on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int lte_ram_dump_on=0x7f0b0165;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int macaddr_label=0x7f0b0bfa;
        /**  Representation of a mAh value. [CHAR LIMIT=NONE] 
         */
        public static final int mah=0x7f0b079f;
        /**  Description of the main process in the details. 
         */
        public static final int main_running_process_description=0x7f0b0648;
        /**  Title of preference to manage device admins 
         */
        public static final int manage_device_admin=0x7f0b02d8;
        /**  Summary of preference to manage device policies 
         */
        public static final int manage_device_admin_summary=0x7f0b02d9;
        /**  Mobile plan [CHAR LIMIT=35]
         */
        public static final int manage_mobile_plan_title=0x7f0b0540;
        /**  Summary of preference to manage notification listeners, when none are enabled 
         */
        public static final int manage_notification_access_summary_zero=0x7f0b0a8f;
        /**  Sound & notification > Advanced section: Title for managing notification listeners option. [CHAR LIMIT=30] 
         */
        public static final int manage_notification_access_title=0x7f0b0a8e;
        /**  Manage applications screen, individual app screen, button label when the user wants to manage the space taken up by an app. 
         */
        public static final int manage_space_text=0x7f0b05e3;
        /**  Title of preference to manage trust agents 
         */
        public static final int manage_trust_agents=0x7f0b02da;
        /**  Summary of preference to manage device policies 
         */
        public static final int manage_trust_agents_summary=0x7f0b02dc;
        /**  Sound & notification > Advanced section: Title for managing Do Not Disturb access option. [CHAR LIMIT=40] 
         */
        public static final int manage_zen_access_title=0x7f0b0a93;
        /**  Applications settings screen, setting option summary for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_summary=0x7f0b05b0;
        /**  Applications settings screen, setting option name for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_title=0x7f0b05af;
        /**  Title for managed device admins on the list [CHAR_LIMIT=25] 
         */
        public static final int managed_device_admin_title=0x7f0b0858;
        /**  Message displayed when the device admin can only be disabled by deleting the work profile [CHAR_LIMIT=120] 
         */
        public static final int managed_profile_device_admin_info=0x7f0b0856;
        /**  Title for managed profile preference category [CHAR_LIMIT=25] 
         */
        public static final int managed_profile_location_category=0x7f0b054d;
        /**  [CHAR LIMIT=30] Text to show on managed profile location switch if MDM has locked down location access for managed profile
         */
        public static final int managed_profile_location_switch_lockdown=0x7f0b054f;
        /**  [CHAR LIMIT=30] Title for managed profile location switch  
         */
        public static final int managed_profile_location_switch_title=0x7f0b054e;
        /**  Label for the state of the work profile [CHAR LIMIT=80] 
         */
        public static final int managed_profile_not_available_label=0x7f0b088b;
        /**  Title for a work profile. [CHAR LIMIT=25] 
         */
        public static final int managed_user_title=0x7f0b0ae4;
        /**  Summary for work profile accounts group. [CHAR LIMIT=25] 
         */
        public static final int managing_admin=0x7f0b0ae6;
        /**  SD card & phone storage settings screen, instructions and list of current accounts.  The list of accounts follows this text[CHAR LIMIT=NONE] 
         */
        public static final int master_clear_accounts=0x7f0b0518;
        /**  SD card & phone storage settings screen, button on screen after user selects Factory data reset 
 SD card & phone storage settings screen, button on screen after user selects Factory data reset 
         */
        public static final int master_clear_button_text=0x7f0b051e;
        /**  Master clear confirmation screen title [CHAR LIMIT=30] 
         */
        public static final int master_clear_confirm_title=0x7f0b0522;
        /**  SD card & phone storage settings screen, message on screen after user selects Factory data reset [CHAR LIMIT=NONE] 
 SD card & phone storage settings screen, message on screen after user selects Factory data reset [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc=0x7f0b0517;
        /**  SD card & phone storage settings screen, list of items in user data storage (USB storage or SD card) that will be erased during this operation [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc_also_erases_external=0x7f0b051a;
        /**  SD card & phone storage settings screen, instructions about whether to also erase the external storage (SD card) when erasing the internal storage [CHAR LIMIT=NONE] 
 SD card & phone storage settings screen, instructions about whether to also erase the external storage (SD card) when erasing the internal storage [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc_erase_external_storage=0x7f0b051b;
        /**  Master clear failed message 
         */
        public static final int master_clear_failed=0x7f0b0521;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_button_text=0x7f0b0520;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_desc=0x7f0b051f;
        public static final int master_clear_final_desc_reboot=0x7f0b0c0a;
        /**  Error message for users that aren't allowed to factory reset [CHAR LIMIT=none] 
         */
        public static final int master_clear_not_available=0x7f0b0523;
        /**  SD card & phone storage settings screen, notification if other users are present on the device [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_other_users_present=0x7f0b0519;
        /**  Master clear progress screen text [CHAR LIMIT=75] 
         */
        public static final int master_clear_progress_text=0x7f0b0525;
        /**  Master clear progress screen title [CHAR LIMIT=30] 
         */
        public static final int master_clear_progress_title=0x7f0b0524;
        /**  SD card & phone storage settings screen, setting option name under Internal phone storage heading 
         */
        public static final int master_clear_title=0x7f0b0516;
        /**  Label for maximum memory use section [CHAR LIMIT=30] 
         */
        public static final int maximum_memory_use=0x7f0b0b70;
        /**  Preference category for media development settings. [CHAR LIMIT=50] 
         */
        public static final int media_category=0x7f0b08ca;
        /**  Sound & notification > Sound section: Title for the option managing media volume. [CHAR LIMIT=30] 
         */
        public static final int media_volume_option_title=0x7f0b0a6a;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int media_volume_summary=0x7f0b03e9;
        /**  Sound settings screen, setting option name 
         */
        public static final int media_volume_title=0x7f0b03e8;
        /**  choice for the font size spinner 
         */
        public static final int medium_font=0x7f0b0182;
        public static final int meeting_settings_title=0x7f0b00bb;
        public static final int meeting_summary=0x7f0b00a8;
        /**  [CHAR LIMIT=NONE] Activity title for process stats details on overall memory state 
         */
        public static final int mem_details_title=0x7f0b07be;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats memory state details for list of memory states 
         */
        public static final int mem_state_subtitle=0x7f0b07bf;
        /**  [CHAR LIMIT=NONE] Type of memory use that is available/free 
         */
        public static final int mem_use_free_type=0x7f0b07c5;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with kernel caches 
         */
        public static final int mem_use_kernel_cache_type=0x7f0b07c3;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with the kernel 
         */
        public static final int mem_use_kernel_type=0x7f0b07c1;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with native processes 
         */
        public static final int mem_use_native_type=0x7f0b07c2;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats memory state details for list of memory use 
         */
        public static final int mem_use_subtitle=0x7f0b07c0;
        /**  [CHAR LIMIT=NONE] Total of all memory use 
         */
        public static final int mem_use_total=0x7f0b07c6;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with kernel zram swap 
         */
        public static final int mem_use_zram_type=0x7f0b07c4;
        /**  [CHAR LIMIT=10] Running services, label for chart showing memory use. 
         */
        public static final int memory=0x7f0b062e;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of applications installed. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_apps_usage=0x7f0b0479;
        /**  SD card & phone storage settings title. The amount of free space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section. 
         */
        public static final int memory_available=0x7f0b0475;
        /**  SD card & phone storage settings title. The amount of free space for some storage partition when the volume is read-only. [CHAR LIMIT=64] 
         */
        public static final int memory_available_read_only=0x7f0b0476;
        /**  Average memory used by an app [CHAR LIMIT=25] 
         */
        public static final int memory_avg_desc=0x7f0b0b54;
        /**  Average memory usage key [CHAR LIMIT=25] 
         */
        public static final int memory_avg_use=0x7f0b0b52;
        /**  SD card & phone storage settings summary. Displayed when the total memory usage is being calculated. Will be replaced with a number like "12.3 GB" when finished calucating. [CHAR LIMIT=30] 
         */
        public static final int memory_calculating_size=0x7f0b0478;
        /**  Message of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48] 
         */
        public static final int memory_clear_cache_message=0x7f0b0488;
        /**  SD card status when it is mounted as read only. Will be appended to size, starts with an unbreakable space 
 Title of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48] 
         */
        public static final int memory_clear_cache_title=0x7f0b0487;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of all pictures, videos in /sdcard/DCIM, /sdcard/Pictures folders on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_dcim_usage=0x7f0b047c;
        /**  Label for details about an app's memory use [CHAR LIMIT=30] 
         */
        public static final int memory_details=0x7f0b0b73;
        /**  Title for screen showing recent memory usage of specific app [CHAR LIMIT=30]
         */
        public static final int memory_details_title=0x7f0b0b4d;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of /sdcard/Download on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_downloads_usage=0x7f0b047b;
        /**  Maximum memory used by an app [CHAR LIMIT=25] 
         */
        public static final int memory_max_desc=0x7f0b0b53;
        /**  Maximum memory usage key [CHAR LIMIT=25] 
         */
        public static final int memory_max_use=0x7f0b0b51;
        /**  Label for maximum amount of memory app has used [CHAR LIMIT=25] 
         */
        public static final int memory_maximum_usage=0x7f0b0b7e;
        /**  Storage item representing all cached data on device. [CHAR LIMIT=48] 
         */
        public static final int memory_media_cache_usage=0x7f0b047f;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of misc files on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_media_misc_usage=0x7f0b047e;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of media on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_media_usage=0x7f0b047a;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of audio files in /sdcard on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_music_usage=0x7f0b047d;
        /**  Label for the current performance of the device [CHAR LIMIT=25] 
         */
        public static final int memory_performance=0x7f0b0b78;
        /**  Title for screen showing recent memory usage of device [CHAR LIMIT=30]
         */
        public static final int memory_settings_title=0x7f0b0b4c;
        /**  SD card & phone storage settings screen heading.  The total amount of storage space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section 
         */
        public static final int memory_size=0x7f0b0477;
        /**  Label for app list of memory use [CHAR LIMIT=30] 
         */
        public static final int memory_usage=0x7f0b0b71;
        /**  Label for button that leads to list of apps and their memory usage [CHAR LIMIT=40]
         */
        public static final int memory_usage_apps=0x7f0b0b7c;
        /**  Formatting for memory description [CHAR LIMIT=25] 
         */
        public static final int memory_use_running_format=0x7f0b0b55;
        /**  Summary for how much memory an app has used [CHAR LIMIT=NONE] 
         */
        public static final int memory_use_summary=0x7f0b0b74;
        /**  Edit access point screen menu option to discard the user's changes for this APN 
         */
        public static final int menu_cancel=0x7f0b0504;
        /**  Edit access point screen menu option to delete this APN 
         */
        public static final int menu_delete=0x7f0b0501;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_12h=0x7f0b07c9;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_1d=0x7f0b07ca;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_3h=0x7f0b07c7;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_6h=0x7f0b07c8;
        /**  [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are hidden 
         */
        public static final int menu_hide_system=0x7f0b07cc;
        /**  APNs screen menu option to create a brand spanking new APN 
         */
        public static final int menu_new=0x7f0b0502;
        /**  [CHAR LIMIT=NONE] Menu for process stats to select duration of stats to show 
         */
        public static final int menu_proc_stats_duration=0x7f0b07bd;
        /**  [CHAR LIMIT=NONE] Menu for process stats to select which type of stats to show 
         */
        public static final int menu_proc_stats_type=0x7f0b07cf;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on background processes 
         */
        public static final int menu_proc_stats_type_background=0x7f0b07d0;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on cached processes 
         */
        public static final int menu_proc_stats_type_cached=0x7f0b07d2;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on foreground processes 
         */
        public static final int menu_proc_stats_type_foreground=0x7f0b07d1;
        /**  APNs screen menu option to reset default APN settings 
         */
        public static final int menu_restore=0x7f0b050b;
        /**  Edit access point screen menu option to save the user's changes for this APN to the persistent storage 
         */
        public static final int menu_save=0x7f0b0503;
        /**  [CHAR LIMIT=NONE] Menu for process stats to control whether stats are shown
         as percentages
         */
        public static final int menu_show_percentage=0x7f0b07cd;
        /**  [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are shown 
         */
        public static final int menu_show_system=0x7f0b07cb;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_last_unplugged=0x7f0b07a1;
        /**  Menu label for refreshing with latest usage numbers 
         */
        public static final int menu_stats_refresh=0x7f0b07a3;
        /**  Menu label for viewing battery usage total 
         */
        public static final int menu_stats_total=0x7f0b07a2;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_unplugged=0x7f0b07a0;
        /**  [CHAR LIMIT=NONE] Menu for process stats to control whether computation should be based
        on Uss (Unique Set Size) instead of Pss (Proportional Set Size) 
         */
        public static final int menu_use_uss=0x7f0b07ce;
        public static final int message_notification_sound_title=0x7f0b0c3f;
        /**  ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
 ClearMotion end 
 MiraVision start 
         */
        public static final int mira_vision_summary=0x7f0b012d;
        /**  ClearMotion end 
 MiraVision start 
         */
        public static final int mira_vision_title=0x7f0b012c;
        /**  Misc files [CHAR LIMIT=25] 
         */
        public static final int misc_files=0x7f0b08b9;
        /**  number of misc files selected [CHAR LIMIT=40] 
         */
        public static final int misc_files_selected_count=0x7f0b08ba;
        /**  number of bytes represented by the selected misc files [CHAR LIMIT=40] 
         */
        public static final int misc_files_selected_count_bytes=0x7f0b08bb;
        /**  Ask user to connect to the internet [CHAR_ LIMIT=50]
         */
        public static final int mobile_connect_to_internet=0x7f0b054b;
        /**  Setting Checkbox title whether to always keep cellular data active. [CHAR LIMIT=80] 
         */
        public static final int mobile_data_always_on=0x7f0b06b0;
        public static final int mobile_data_always_on_summary=0x7f0b06ba;
        /**  Ask user to insert a SIM card [CHAR_ LIMIT=50]
         */
        public static final int mobile_insert_sim_card=0x7f0b054a;
        /**  There is no mobile provisiong website for the operator which is the firat parameter [CHAR_ LIMIT=50]
         */
        public static final int mobile_no_provisioning_url=0x7f0b0549;
        /**  The SIM operator is not known [CHAR_ LIMIT=50]
         */
        public static final int mobile_unknown_sim_operator=0x7f0b0548;
        /**  UI debug setting: select current app to mock location [CHAR LIMIT=50] 
         */
        public static final int mock_location_app=0x7f0b06a6;
        /**  UI debug setting: no mock location app has been set [CHAR LIMIT=50] 
         */
        public static final int mock_location_app_not_set=0x7f0b06a7;
        /**  UI debug setting: mock location app has been set [CHAR LIMIT=50] 
         */
        public static final int mock_location_app_set=0x7f0b06a8;
        /**  About phone screen, status item label  [CHAR LIMIT=40] 
         */
        public static final int model_number=0x7f0b0452;
        public static final int mota_system_update_summary=0x7f0b0117;
        /**  Manage applications, text for Move button 
         */
        public static final int move_app=0x7f0b0609;
        /**  Manage applications, text for dialog moving an app 
         */
        public static final int move_app_failed_dlg_text=0x7f0b0615;
        /**  Manage applications, text for dialog when moving an app 
         */
        public static final int move_app_failed_dlg_title=0x7f0b0614;
        /**  Manage applications, text for Move button to move app to internal storage 
 Manage applications, text for Move button to move app to internal storage 
         */
        public static final int move_app_to_internal=0x7f0b060a;
        /**  Manage applications, text for Move button  to move app to sdcard [CHAR LIMIT=25] 
 Manage applications, text for Move button  to move app to sdcard 
         */
        public static final int move_app_to_sdcard=0x7f0b060b;
        /**  Manage applications, title for dialog when killing persistent apps
 Manage applications, text for Move button when move is in progress 
         */
        public static final int moving=0x7f0b060c;
        /**  SD card & phone storage settings item summary that will result in the phone connected to PC and MTP/PTP enabled.   [CHAR LIMIT=80] 
         */
        public static final int mtp_ptp_mode_summary=0x7f0b0489;
        public static final int music_plus_summary=0x7f0b00cc;
        public static final int music_plus_title=0x7f0b00cb;
        /**  Sound settings screen, music effects title [CHAR LIMIT=30]
         */
        public static final int musicfx_title=0x7f0b03df;
        /**  Edit Mvno Match Data Info of APN 
         */
        public static final int mvno_match_data=0x7f0b0500;
        /**  Edit Mvno Type Info of APN 
         */
        public static final int mvno_type=0x7f0b04ff;
        /**  C2K OM end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 C2K OM end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
 MTK About phone end 
 APN Settings start  
         */
        public static final int mvno_type_none=0x7f0b011e;
        /**  Network operators settings title.  [CHAR LIMIT=50] 
         */
        public static final int network_operators_settings=0x7f0b09f3;
        /**  Error message for users that aren't allowed to reset network settings [CHAR LIMIT=none] 
         */
        public static final int network_reset_not_available=0x7f0b0513;
        /**  Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant instead of the current Wifi Assistant app. [CHAR LIMIT=100] 
         */
        public static final int network_scorer_change_active_dialog_text=0x7f0b0546;
        /**  Wifi Assistant change wi-fi assistant title.  [CHAR LIMIT=40] 
         */
        public static final int network_scorer_change_active_dialog_title=0x7f0b0545;
        /**  Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant. [CHAR LIMIT=100] 
         */
        public static final int network_scorer_change_active_no_previous_dialog_text=0x7f0b0547;
        /**  Wireless controls, item title to go into the network settings 
         */
        public static final int network_settings_title=0x7f0b053f;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int network_state_label=0x7f0b0bf3;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int networkid_label=0x7f0b0bfb;
        /**  mobile network settings screen, setting option name 
         */
        public static final int networks=0x7f0b0237;
        /**  Prompt for the user to enter a new full-backup password 
         */
        public static final int new_backup_pw_prompt=0x7f0b097f;
        /**  Used in setup wizard Wi-Fi screen. The button label for going to the next screen and submitting. [CHAR LIMIT=20] 
         */
        public static final int next_label=0x7f0b0215;
        public static final int nfc_card_emulation=0x7f0b00e1;
        public static final int nfc_card_emulation_category_title=0x7f0b00e0;
        public static final int nfc_hce_pay_summary=0x7f0b00eb;
        /**  Content for text explaning how to pay at a payment terminal in a store 
         */
        public static final int nfc_how_it_works_content=0x7f0b09da;
        /**  Button the user can click to indicate he understood and dismiss the screen 
         */
        public static final int nfc_how_it_works_got_it=0x7f0b09db;
        /**  Header for text explaning how to pay at a payment terminal in a store 
         */
        public static final int nfc_how_it_works_title=0x7f0b09d9;
        /**  NFC More... title.  [CHAR LIMIT=40] 
         */
        public static final int nfc_more_title=0x7f0b09dc;
        /**  AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
 AudioProfile Settings end 
 MTK NFC settings start 
         */
        public static final int nfc_p2p_mode=0x7f0b00db;
        public static final int nfc_p2p_mode_summary=0x7f0b00dc;
        public static final int nfc_password_token=0x7f0b0092;
        /**  String indicating the label of the default payment app and a description of its state; eg Google Wallet - MasterCard 1234 
         */
        public static final int nfc_payment_app_and_desc=0x7f0b09d2;
        /**  Header text that can be clicked on to change the default payment app 
         */
        public static final int nfc_payment_default=0x7f0b09d0;
        /**  Summary text that is shown when no default app is set 
         */
        public static final int nfc_payment_default_not_set=0x7f0b09d1;
        /**  Always use the default app (independent of what app is open) 
         */
        public static final int nfc_payment_favor_default=0x7f0b09d6;
        /**  If open app supports TapPay, use that app instead of the default 
         */
        public static final int nfc_payment_favor_open=0x7f0b09d4;
        /**  Caption for button linking to a page explaining how Tap and Pay works
         */
        public static final int nfc_payment_how_it_works=0x7f0b09ce;
        /**  String shown when there are no NFC payment applications installed 
         */
        public static final int nfc_payment_no_apps=0x7f0b09cf;
        /**  Header for a dialog asking the user which payment app to use 
         */
        public static final int nfc_payment_pay_with=0x7f0b09d8;
        public static final int nfc_payment_set_default=0x7f0b09de;
        public static final int nfc_payment_set_default_instead_of=0x7f0b09df;
        /**  Label for the dialog that is shown when the user is asked to set a
         preferred payment application 
         */
        public static final int nfc_payment_set_default_label=0x7f0b09dd;
        public static final int nfc_payment_settings_title=0x7f0b09cd;
        /**  Header for what to do when the open app supports TapPay: use the default set app, or the open app 
         */
        public static final int nfc_payment_use_default=0x7f0b0c0f;
        /**  Description of NFC in the 1st level settings screen, for a tablet. [CHAR LIMIT=NONE] 
 Description of NFC in the 1st level settings screen, for a phone. [CHAR LIMIT=NONE] 
         */
        public static final int nfc_quick_toggle_summary=0x7f0b032e;
        /**  NFC settings 
 Used in the 1st-level settings screen to turn on NFC 
         */
        public static final int nfc_quick_toggle_title=0x7f0b032d;
        public static final int nfc_rw_tag_summary=0x7f0b00df;
        public static final int nfc_rw_tag_title=0x7f0b00de;
        public static final int nfc_tag_mode_category=0x7f0b00dd;
        /**  Sound & display settings screen, theme setting value to automatically switch between a light- or dark-colored user interface [CHAR LIMIT=30] 
         */
        public static final int night_mode_auto=0x7f0b041b;
        /**  Sound & display settings screen, theme setting value to prefer a light-colored user interface [CHAR LIMIT=30] 
         */
        public static final int night_mode_no=0x7f0b0419;
        /**  Sound & display settings screen, setting option summary to change the user interface theme [CHAR LIMIT=100] 
         */
        public static final int night_mode_summary=0x7f0b0418;
        /**  Sound & display settings screen, setting option name to change the user interface theme [CHAR LIMIT=30] 
         */
        public static final int night_mode_title=0x7f0b0417;
        /**  Sound & display settings screen, theme setting value to prefer a dark-colored user interface [CHAR LIMIT=30] 
         */
        public static final int night_mode_yes=0x7f0b041a;
        /**  Strings for Dialog no button 
         */
        public static final int no=0x7f0b014e;
        /**  UI debug setting: label for app picker to select no applicatiojn [CHAR LIMIT=50] 
         */
        public static final int no_application=0x7f0b08c4;
        /**  [CHAR LIMIT=25] Text shown when there are no applications to display. 
         */
        public static final int no_applications=0x7f0b05ed;
        /**  Summary for app with no battery usage [CHAR LIMIT=NONE] 
         */
        public static final int no_battery_summary=0x7f0b0b5d;
        /**  Summary of data item when no data usage [CHAR LIMIT=40] 
         */
        public static final int no_data_usage=0x7f0b0b7f;
        /**  [CHAR LIMIT=25] Text shown when there are no default Apps 
         */
        public static final int no_default_apps=0x7f0b0622;
        /**  Message when there are no available device admins to display 
         */
        public static final int no_device_admins=0x7f0b0855;
        public static final int no_emergency_contact=0x7f0b0c50;
        public static final int no_internet_access_remember=0x7f0b039a;
        /**  Dialog text to tell the user that the selected network does not have Internet access. 
         */
        public static final int no_internet_access_text=0x7f0b0399;
        /**  Summary for no memory use for an app [CHAR LIMIT=NONE] 
         */
        public static final int no_memory_use_summary=0x7f0b0b75;
        /**  String to show in the list of notification listeners, when none is installed 
 String.format failed for translation 
 no translation found for manage_notification_access_summary_nonzero (7930130030691218387) 
 String.format failed for translation 
 no translation found for manage_notification_access_summary_nonzero (7930130030691218387) 
         */
        public static final int no_notification_listeners=0x7f0b0a90;
        /**  [CHAR LIMIT=25] Text shown when there are no services running 
         */
        public static final int no_running_services=0x7f0b0629;
        /**  Message displayed when there are no active services in a process. 
         */
        public static final int no_services=0x7f0b063f;
        /**  Message when there are no available trust agents to display 
         */
        public static final int no_trust_agents=0x7f0b0859;
        public static final int normal_date_format=0x7f0b0c3c;
        /**  [CHAR LIMIT=30] Manage applications, text telling using an application is not installed for the current user. The key part is that it's not installed. 
         */
        public static final int not_installed=0x7f0b05ec;
        /**  [CHAR LIMIT=NONE] Content description for per-app notification
         settings button 
         */
        public static final int notification_app_settings_button=0x7f0b0ad9;
        /**  Summary for a warning message about security implications of enabling a notification
          listener, displayed as a dialog message. [CHAR LIMIT=NONE] 
         */
        public static final int notification_listener_security_warning_summary=0x7f0b0a92;
        /**  Title for a warning message about security implications of enabling a notification
          listener, displayed as a dialog message. [CHAR LIMIT=NONE] 
         */
        public static final int notification_listener_security_warning_title=0x7f0b0a91;
        public static final int notification_log_title=0x7f0b0863;
        /**  Sound & notification > Notification section: Title for the pulse notification light option. [CHAR LIMIT=30] 
         */
        public static final int notification_pulse_title=0x7f0b0a79;
        /**  Sound & notification > Sound section: Title for the option defining the default notification ringtone. [CHAR LIMIT=30] 
         */
        public static final int notification_ringtone_title=0x7f0b0a75;
        /**  Sound & notification: Notification section header [CHAR LIMIT=30] 
         */
        public static final int notification_section_header=0x7f0b0a77;
        /**  Sounds and Notification 
 Sound & notification: Settings header. [CHAR LIMIT=30] 
         */
        public static final int notification_settings=0x7f0b0a69;
        /**  [CHAR LIMIT=20] Notifications settings: Apps section header 
         */
        public static final int notification_settings_apps_title=0x7f0b0ad8;
        /**  Sound settings screen, setting option title
         */
        public static final int notification_sound_dialog_title=0x7f0b03e7;
        /**  Sound settings screen, setting option name 
         */
        public static final int notification_sound_title=0x7f0b03e2;
        /**  Sound & notification > Sound section: Title for the option managing notification volume. [CHAR LIMIT=30] 
         */
        public static final int notification_volume_option_title=0x7f0b0a6d;
        /**  Sound settings screen, the title of the volume bar to adjust the notification volume 
         */
        public static final int notification_volume_title=0x7f0b03e4;
        /**  App notification summary with notifications disabled [CHAR LIMIT=40] 
         */
        public static final int notifications_disabled=0x7f0b0b14;
        /**  App notification summary with notifications enabled [CHAR LIMIT=40] 
         */
        public static final int notifications_enabled=0x7f0b0b13;
        /**  Label for notification settings for an specific app [CHAR LIMIT=40] 
         */
        public static final int notifications_label=0x7f0b0b12;
        /**  App notification summary with notification peeking disabled [CHAR LIMIT=40] 
         */
        public static final int notifications_no_peeking=0x7f0b0b17;
        /**  App notification summary with notifications priority [CHAR LIMIT=40] 
         */
        public static final int notifications_priority=0x7f0b0b16;
        /**  App notification summary with notifications sensitive [CHAR LIMIT=40] 
         */
        public static final int notifications_sensitive=0x7f0b0b15;
        /**  App notification summary with 3 items [CHAR LIMIT=15] 
         */
        public static final int notifications_three_items=0x7f0b0b19;
        /**  App notification summary with 2 items [CHAR LIMIT=15] 
         */
        public static final int notifications_two_items=0x7f0b0b18;
        /**  Description of NFC in the 1st level settings screen. [CHAR LIMIT=NONE] 
         */
        public static final int nsd_quick_toggle_summary=0x7f0b0336;
        /**  Network service discovery settings 
 Used in the 1st-level settings screen to turn on NSD 
         */
        public static final int nsd_quick_toggle_title=0x7f0b0335;
        /**  Full package name of OEM preferred device feedback reporter [DO NOT TRANSLATE] 
         */
        public static final int oem_preferred_feedback_reporter=0x7f0b0c30;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int oem_radio_info_label=0x7f0b0203;
        /**  setting Checkbox title whether to enable OEM unlock [CHAR_LIMIT=35] 
         */
        public static final int oem_unlock_enable=0x7f0b06a0;
        /**  setting Checkbox summary whether to enable OEM unlock [CHAR_LIMIT=50] 
         */
        public static final int oem_unlock_enable_summary=0x7f0b06a1;
        public static final int off_text=0x7f0b012b;
        /**  Button label for generic OK action [CHAR LIMIT=20] 
         */
        public static final int okay=0x7f0b021f;
        public static final int on_text=0x7f0b012a;
        /**  Message to user that Home Settings will be hidden because there is now only one available home application 
         */
        public static final int only_one_home_message=0x7f0b09c9;
        /**  Summary for on-screen keyboard settings 
         */
        public static final int onscreen_keyboard_settings_summary=0x7f0b068e;
        /**  Opening string on the dialog that prompts the user to confirm that they really want to delete their existing work profile. The administration app icon and name appear after the final colon. [CHAR LIMIT=NONE] 
         */
        public static final int opening_paragraph_delete_profile_unknown_company=0x7f0b0ae5;
        /**  Sound & notification > Sound section: Title for the other sounds option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int other_sound_settings=0x7f0b0a81;
        public static final int outdoor_settings_title=0x7f0b00bc;
        public static final int outdoor_summary=0x7f0b00a9;
        /**  UI debug setting: simulate secondary display devices using overlays [CHAR LIMIT=25] 
         */
        public static final int overlay_display_devices_title=0x7f0b08ee;
        /**  Main settings screen item's title to go into the overlay settings screen [CHAR LIMIT=30] 
         */
        public static final int overlay_settings=0x7f0b0b93;
        /**  Hint text shown in owner info edit text [CHAR LIMIT=50] 
         */
        public static final int owner_info_settings_edit_text_hint=0x7f0b0258;
        /**  Description of how many characters are used in owner info [CHAR LIMIT=40]
         */
        public static final int owner_info_settings_status=0x7f0b0257;
        /**  Text shown for summary of owner info setting (if none set) [CHAR LIMIT=40]
         */
        public static final int owner_info_settings_summary=0x7f0b0256;
        /**  Text shown for title of owner info setting [CHAR LIMIT=20]
         */
        public static final int owner_info_settings_title=0x7f0b0253;
        /**  Subtitle for list of packages 
         */
        public static final int packages_subtitle=0x7f0b0765;
        /**  Content for Passpoint network 
         */
        public static final int passpoint_content=0x7f0b0380;
        /**  Label for Passpoint network 
         */
        public static final int passpoint_label=0x7f0b037f;
        /**  Manage applications, individual application info screen, heading for settings related to the app's permissions. for example, it may list all the permissions the app has. 
         */
        public static final int permissions_label=0x7f0b05c0;
        /**  Label for setting which controls whether app can draw overlays [CHAR LIMIT=45] 
         */
        public static final int permit_draw_overlay=0x7f0b0b8f;
        /**  Label for setting which controls whether app has usage access [CHAR LIMIT=45] 
         */
        public static final int permit_usage_access=0x7f0b0b49;
        /**  Label for setting which controls whether app can write system settings [CHAR LIMIT=45] 
         */
        public static final int permit_write_settings=0x7f0b0b9f;
        /**  Personal data section title 
         */
        public static final int personal_data_section_title=0x7f0b083e;
        /**  Title for personal device admins on the list [CHAR_LIMIT=25] 
         */
        public static final int personal_device_admin_title=0x7f0b0857;
        /**  The title of the activity to see phone info 
 The title of the activity to see phone info 
         */
        public static final int phone_info_label=0x7f0b021b;
        /**  On Text & language settings screen, setting option name. title of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language=0x7f0b0651;
        /**  On Text & language settings screen, setting option name. summary of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language_summary=0x7f0b0652;
        /**  On Pico TTS Settings screen, text to mark a voice as installed 
         */
        public static final int pico_installed=0x7f0b0805;
        /**  On Pico TTS Settings screen, text to mark the section for the various languages and voices that are available 
         */
        public static final int pico_languages_and_voices=0x7f0b0804;
        /**  On Pico TTS Settings screen, text to mark a voice as not installed 
         */
        public static final int pico_not_installed=0x7f0b0806;
        /**  On Pico TTS Settings screen, summary text to indicate that a voice is female 
         */
        public static final int pico_voice_summary_female=0x7f0b0807;
        /**  On Pico TTS Settings screen, summary text to indicate that a voice is male 
         */
        public static final int pico_voice_summary_male=0x7f0b0808;
        /**  Instructions telling the user that the operation to unlock the keyguard with SIM PIN failed. Displayed in one line in a large font.  [CHAR LIMIT=40] 
         */
        public static final int pin_failed=0x7f0b044d;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int ping_test_label=0x7f0b01fe;
        /**  Label for the phase2 
         */
        public static final int please_select_phase2=0x7f0b0382;
        /**  UI debug setting: show pointer location? [CHAR LIMIT=25] 
         */
        public static final int pointer_location=0x7f0b08ce;
        /**  UI debug setting: show pointer location summary [CHAR LIMIT=50] 
         */
        public static final int pointer_location_summary=0x7f0b08cf;
        /**  On Language & input settings screen, heading. Inside the "Language & input settings" screen, this is the header for settings that relate to mouse and trackpad devices. [CHAR LIMIT=40] 
         */
        public static final int pointer_settings_category=0x7f0b0660;
        /**  On Language & input settings screen, setting summary.  Setting for mouse pointer speed. [CHAR LIMIT=35] 
         */
        public static final int pointer_speed=0x7f0b0661;
        /**  Label for power consumed by Bluetooth 
         */
        public static final int power_bluetooth=0x7f0b076a;
        /**  Label for power consumed by the camera 
         */
        public static final int power_camera=0x7f0b0768;
        /**  Label for power consumed by Cell idle 
         */
        public static final int power_cell=0x7f0b076b;
        /**  Display time remaining until battery is charged [CHAR_LIMIT=60] 
         */
        public static final int power_charge_remaining=0x7f0b074a;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging 
         */
        public static final int power_charging=0x7f0b074c;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration=0x7f0b074d;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration_ac=0x7f0b074e;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration_usb=0x7f0b074f;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration_wireless=0x7f0b0750;
        /**  Display time remaining until battery is discharged [CHAR_LIMIT=60] 
         */
        public static final int power_discharge_remaining=0x7f0b0749;
        /**  [CHAR_LIMIT=40] Label for battery level chart when discharging with duration 
         */
        public static final int power_discharging_duration=0x7f0b074b;
        /**  Label for power consumed by the flashlight 
         */
        public static final int power_flashlight=0x7f0b0767;
        /**  Label for power consumed when Idle 
 Label for power consumed when Idle 
         */
        public static final int power_idle=0x7f0b076d;
        /**  Label for power that we computed too much for 
         */
        public static final int power_overcounted=0x7f0b076f;
        /**  Label for power consumed by Calling 
         */
        public static final int power_phone=0x7f0b076c;
        /**  Label for power consumed by the screen 
         */
        public static final int power_screen=0x7f0b0766;
        /**  Label for power that we aren't able to account for 
         */
        public static final int power_unaccounted=0x7f0b076e;
        /**  Display the battery level and status [CHAR_LIMIT=60] 
         */
        public static final int power_usage_level_and_status=0x7f0b0748;
        /**  [CHAR_LIMIT=40] Label for list of apps using battery in power use UI 
         */
        public static final int power_usage_list_summary=0x7f0b0751;
        /**  Message to show when battery usage data is not available [CHAR LIMIT=30] 
         */
        public static final int power_usage_not_available=0x7f0b0747;
        /**  Activity title summary for App Fuel Gauge summary 
         */
        public static final int power_usage_summary=0x7f0b0746;
        /**  Activity title for App Fuel Gauge summary 
         */
        public static final int power_usage_summary_title=0x7f0b0745;
        /**  Label for power consumed by Wi-Fi 
         */
        public static final int power_wifi=0x7f0b0769;
        public static final int pref_summary_notification_ringtone1=0x7f0b0c41;
        public static final int pref_summary_notification_ringtone2=0x7f0b0c43;
        public static final int pref_title_notification_ringtone1=0x7f0b0c40;
        public static final int pref_title_notification_ringtone2=0x7f0b0c42;
        /**  Preference item that lets the user change password 
         */
        public static final int preference_change_password_title=0x7f0b08a2;
        /**  Preferred Network offload Footer.  [CHAR LIMIT=100] 
         */
        public static final int preferred_network_offload_footer=0x7f0b0a2e;
        /**  Preferred Network offload Header.  [CHAR LIMIT=25] 
         */
        public static final int preferred_network_offload_header=0x7f0b0a2d;
        /**  Preferred Network offload Popup.  [CHAR LIMIT=100] 
         */
        public static final int preferred_network_offload_popup=0x7f0b0a2f;
        /**  Preferred Network offload title.  [CHAR LIMIT=25] 
         */
        public static final int preferred_network_offload_title=0x7f0b0a2c;
        /**  Preferred network type summary.  [CHAR LIMIT=100] 
         */
        public static final int preferred_network_type_summary=0x7f0b09f8;
        /**  Preferred network type title.  [CHAR LIMIT=50] 
         */
        public static final int preferred_network_type_title=0x7f0b09f7;
        /**  Template for the label of the state for a blocked print job. [CHAR LIMIT=25] 
         */
        public static final int print_blocked_state_title_template=0x7f0b0742;
        /**  Title for the button to cancel a print job. [CHAR LIMIT=25] 
         */
        public static final int print_cancel=0x7f0b073d;
        /**  Template for the label for a cancelling print job. [CHAR LIMIT=25] 
         */
        public static final int print_cancelling_state_title_template=0x7f0b0740;
        /**  Template for the label of the state for a failed print job. [CHAR LIMIT=25] 
         */
        public static final int print_failed_state_title_template=0x7f0b0741;
        /**  Summary for the disabled state of a print feature. [CHAR LIMIT=10] 
         */
        public static final int print_feature_state_off=0x7f0b0734;
        /**  Summary for the enabled state of a print feature. [CHAR LIMIT=10] 
         */
        public static final int print_feature_state_on=0x7f0b0733;
        /**  Template for the summary of a print job. [CHAR LIMIT=25] 
         */
        public static final int print_job_summary=0x7f0b073e;
        /**  Title of the action bar button to got to add a printer. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_printer=0x7f0b0736;
        /**  Title for print menu item to launch the add printers activity. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_printers=0x7f0b0732;
        /**  Title of the action bar button to got to Play Store to download a print service. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_service=0x7f0b0735;
        /**  Title for the search action bar menu item. [CHAR LIMIT=20] 
         */
        public static final int print_menu_item_search=0x7f0b0737;
        /**  Title for print menu item to launch a settings activity. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_settings=0x7f0b0731;
        /**  Title for the prompt shown as a placeholder if no printers are found while searching. [CHAR LIMIT=50] 
         */
        public static final int print_no_printers_found=0x7f0b0730;
        /**  Title for the prompt shown as a placeholder if no print serivices are installed. [CHAR LIMIT=50] 
         */
        public static final int print_no_services_installed=0x7f0b072f;
        /**  Title for the print job settings screen. [CHAR LIMIT=25] 
         */
        public static final int print_print_job=0x7f0b073b;
        /**  Title for the menu item to open the print jobs screen. [CHAR LIMIT=25] 
         */
        public static final int print_print_jobs=0x7f0b073a;
        /**  Template for the label of the state for a ongoing print job. [CHAR LIMIT=25] 
         */
        public static final int print_printing_state_title_template=0x7f0b073f;
        /**  Title for the button to restart a print job. [CHAR LIMIT=25] 
         */
        public static final int print_restart=0x7f0b073c;
        /**  Utterance to announce that the search box is hidden. This is spoken to a blind user. [CHAR LIMIT=none] 
         */
        public static final int print_search_box_hidden_utterance=0x7f0b0744;
        /**  Utterance to announce that the search box is shown. This is spoken to a blind user. [CHAR LIMIT=none] 
         */
        public static final int print_search_box_shown_utterance=0x7f0b0743;
        /**  Title for the prompt if no printers are available and the system is searching for such. [CHAR LIMIT=50] 
         */
        public static final int print_searching_for_printers=0x7f0b0738;
        /**  Title for the prompt if no printers are available because the print service is disabled. [CHAR LIMIT=50] 
         */
        public static final int print_service_disabled=0x7f0b0739;
        /**  Summary for a warning message about security implications of enabling a print service,
         displayed as a dialog message when the user selects to enable a print service. [CHAR LIMIT=NONE] 
         */
        public static final int print_service_security_warning_summary=0x7f0b072e;
        /**  Title for a warning message about security implications of enabling a print service,
         displayed as a dialog message when the user selects to enable a print service (tablet). [CHAR LIMIT=NONE] 
         */
        public static final int print_service_security_warning_title=0x7f0b072d;
        /**  Title in main settings screen for printing settings [CHAR LIMIT=15] 
         */
        public static final int print_settings=0x7f0b072b;
        /**  Title for print service settings screen [CHAR LIMIT=25] 
         */
        public static final int print_settings_title=0x7f0b072c;
        /**  Backup and reset settings menu title 
         */
        public static final int privacy_settings=0x7f0b083b;
        /**  Privacy settings activity title 
         */
        public static final int privacy_settings_title=0x7f0b083c;
        /**  Label for dex2oat process in battery usage used for the optimization of one or more apps 
         */
        public static final int process_dex2oat_label=0x7f0b07a6;
        /**  Label for process [CHAR LIMIT=25] 
         */
        public static final int process_format=0x7f0b0b56;
        /**  Label for kernel threads in battery usage 
         */
        public static final int process_kernel_label=0x7f0b07a4;
        /**  Label for mediaserver process in battery usage 
         */
        public static final int process_mediaserver_label=0x7f0b07a5;
        /**  Message that a process's provider is in use. 
         */
        public static final int process_provider_in_use_description=0x7f0b064a;
        /**  Message that a process's service is in use. 
         */
        public static final int process_service_in_use_description=0x7f0b0649;
        /**  [CHAR LIMIT=NONE] Label for item showing details of average RAM use 
         */
        public static final int process_stats_bg_ram_use=0x7f0b07b9;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for base memory needed for caches 
         */
        public static final int process_stats_os_cache=0x7f0b07b7;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for all kernel memory 
         */
        public static final int process_stats_os_kernel=0x7f0b07b5;
        /**  [CHAR LIMIT=NONE] Label OS "process" app 
         */
        public static final int process_stats_os_label=0x7f0b07b3;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for all native processes 
         */
        public static final int process_stats_os_native=0x7f0b07b4;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for all zram memory 
         */
        public static final int process_stats_os_zram=0x7f0b07b6;
        /**  [CHAR LIMIT=NONE] Label for item showing details of average RAM use 
         */
        public static final int process_stats_ram_use=0x7f0b07b8;
        /**  [CHAR LIMIT=NONE] Label for item showing percent of time spent running 
         */
        public static final int process_stats_run_time=0x7f0b07ba;
        /**  [CHAR LIMIT=NONE] Activity title summary for Process Stats summary 
         */
        public static final int process_stats_summary=0x7f0b07ac;
        /**  [CHAR LIMIT=NONE] Activity title for Process Stats summary 
         */
        public static final int process_stats_summary_title=0x7f0b07ab;
        /**  [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
         timeDuration is a duration such as "1h 30m" 
         */
        public static final int process_stats_total_duration=0x7f0b07ae;
        /**  [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
         timeDuration is a duration such as "1h 30m" 
         */
        public static final int process_stats_total_duration_percentage=0x7f0b07af;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_background=0x7f0b07b0;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_cached=0x7f0b07b2;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_foreground=0x7f0b07b1;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats processes list 
         */
        public static final int processes_subtitle=0x7f0b07bb;
        /**  Text shown for title of profile info setting [CHAR LIMIT=20]
         */
        public static final int profile_info_settings_title=0x7f0b025b;
        /**  Title for screen to set a profile owner [CHAR LIMIT=40] 
         */
        public static final int profile_owner_add_title=0x7f0b085f;
        /** Bluetooth settings screen, text that appears in heading bar when scanning for devices 
         */
        public static final int progress_scanning=0x7f0b01a9;
        /**  What to show in messaging that refers to this provider, e.g. AccountSyncSettings 
         */
        public static final int provider_label=0x7f0b08aa;
        /**  HTTP proxy settings. The button to save. 
         */
        public static final int proxy_action_text=0x7f0b01d7;
        /**  HTTP proxy settings. Button to clear the proxy box. 
         */
        public static final int proxy_clear_text=0x7f0b01d2;
        /**  HTTP proxy settings. The button to restore the defaults. 
         */
        public static final int proxy_defaultView_text=0x7f0b01d6;
        /**  HTTP proxy settings. Title if there is an error
         */
        public static final int proxy_error=0x7f0b01da;
        /**  HTTP proxy settings. Button to get rid of error box
         */
        public static final int proxy_error_dismiss=0x7f0b01db;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_host_set_port=0x7f0b01df;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_port=0x7f0b01de;
        /**  HTTP proxy settings. The error if the exclusion list is not valid 
         */
        public static final int proxy_error_invalid_exclusion_list=0x7f0b01dd;
        /**  HTTP proxy settings. The error if the hostname is not valid 
         */
        public static final int proxy_error_invalid_host=0x7f0b01dc;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_invalid_port=0x7f0b01e0;
        /**  HTTP proxy settings. The hint text for proxy exclusion list. [CHAR LIMIT=50]
         */
        public static final int proxy_exclusionlist_hint=0x7f0b01d5;
        /**  HTTP proxy settings. The exclusion list label. 
         */
        public static final int proxy_exclusionlist_label=0x7f0b01d4;
        /**  HTTP proxy settings. The hint text field for the hostname. [CHAR LIMIT=50] 
         */
        public static final int proxy_hostname_hint=0x7f0b01d9;
        /**  HTTP proxy settings. The text field for the hostname 
         */
        public static final int proxy_hostname_label=0x7f0b01d8;
        /**  HTTP proxy settings. The hint text field for port. 
         */
        public static final int proxy_port_hint=0x7f0b0bcb;
        /**  HTTP proxy settings. The port number label. 
         */
        public static final int proxy_port_label=0x7f0b01d3;
        /**  The title of the activity to adjust proxy settings 
         */
        public static final int proxy_settings_label=0x7f0b021d;
        /**  HTTP proxy settings title 
         */
        public static final int proxy_settings_title=0x7f0b01d1;
        /**  HTTP proxy settings. Hint for Proxy-Auto Config URL. 
         */
        public static final int proxy_url_hint=0x7f0b0bcc;
        /**  HTTP proxy settings. Title for Proxy-Auto Config URL.  [CHAR LIMIT=25] 
         */
        public static final int proxy_url_title=0x7f0b01e2;
        /**  HTTP proxy settings. Warning message about limited application support [CHAR LIMIT=100]
         */
        public static final int proxy_warning_limited_support=0x7f0b01e1;
        /**  Text used as a search hint into the search box 
         */
        public static final int query_hint_text=0x7f0b0a39;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_cid=0x7f0b017e;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connected=0x7f0b0176;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connecting=0x7f0b0175;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_disconnected=0x7f0b0174;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_suspended=0x7f0b0177;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_asu=0x7f0b017c;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_bytes=0x7f0b017a;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_dbm=0x7f0b017b;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_packets=0x7f0b0179;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_lac=0x7f0b017d;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_getPDP=0x7f0b016a;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewADN=0x7f0b0167;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewFDN=0x7f0b0168;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewSDN=0x7f0b0169;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_idle=0x7f0b0171;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_offhook=0x7f0b0173;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_ringing=0x7f0b0172;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_in=0x7f0b016f;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_not=0x7f0b0170;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_emergency=0x7f0b016d;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_in=0x7f0b016b;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_off=0x7f0b016e;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_out=0x7f0b016c;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_unknown=0x7f0b0178;
        /**  Main Settings screen settings summary text for the "Wireless controls" setting 
         */
        public static final int radio_controls_summary=0x7f0b0229;
        /**  Main Settings screen settings title for things like airplane mode, tethering, NFC, VPN.  This will take you to another screen with those settings.  [CHAR LIMIT=30] 
         */
        public static final int radio_controls_title=0x7f0b0227;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_band_mode_label=0x7f0b01f8;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_redirect_label=0x7f0b01eb;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_status_label=0x7f0b01f3;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_cellinfo_label=0x7f0b01e5;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_current_network_label=0x7f0b01ee;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_attempts_label=0x7f0b01e7;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_successes_label=0x7f0b01ef;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_dcrtinfo_label=0x7f0b01e6;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gprs_service_label=0x7f0b01e8;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_disconnects_label=0x7f0b01ed;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_service_label=0x7f0b01f1;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_http_client_test=0x7f0b01fd;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_imei_label=0x7f0b01ea;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_message_waiting_label=0x7f0b01f6;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_neighboring_location_label=0x7f0b01e4;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_network_type_label=0x7f0b01f9;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_phone_number_label=0x7f0b01f7;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_hostname=0x7f0b01fc;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_ipaddr=0x7f0b01fb;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_received_label=0x7f0b01f0;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_resets_label=0x7f0b01ec;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_sent_label=0x7f0b01f4;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_radio_resets_label=0x7f0b01f5;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_roaming_label=0x7f0b01e9;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_set_perferred_label=0x7f0b01fa;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_location_label=0x7f0b01e3;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_strength_label=0x7f0b01f2;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_label=0x7f0b01ff;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_refresh_label=0x7f0b0201;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_update_label=0x7f0b0200;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_toggle_dns_check_label=0x7f0b0202;
        /**  Description of app rarely running [CHAR LIMIT=45] 
         */
        public static final int rarely_running=0x7f0b0b50;
        /**  Background power saving end 
 RCSE Settings start[SKIP COMMENT] 
         */
        public static final int rcse_settings_title=0x7f0b0140;
        /**  Remove account message in dialog [CHAR LIMIT=NONE] 
 Remove account message in dialog [CHAR LIMIT=NONE] 
         */
        public static final int really_remove_account_message=0x7f0b08a8;
        /**  Title of remove message for remove account dialog 
         */
        public static final int really_remove_account_title=0x7f0b08a7;
        /**  Manage app screen, shown when the activity is busy recomputing the size of each app 
         */
        public static final int recompute_size=0x7f0b05f1;
        /**  Text to display in regulatory info screen (from device overlay). 
         */
        public static final int regulatory_info_text=0x7f0b0a0f;
        /**  About phone settings screen, setting option name to show regulatory information [CHAR LIMIT=25] 
         */
        public static final int regulatory_information=0x7f0b0575;
        /**  This is shown if the autheticator for a given account fails to remove it. [CHAR LIMIT=NONE] 
         */
        public static final int remove_account_failed=0x7f0b08a9;
        /**  Button label to remove current account 
         */
        public static final int remove_account_label=0x7f0b08a4;
        /**  Label for button to remove the active device admin 
         */
        public static final int remove_device_admin=0x7f0b0853;
        /**  Button label to remove the work profile [CHAR LIMIT=35] 
         */
        public static final int remove_managed_profile_label=0x7f0b088c;
        /**  repeat title.  Allows the user to set how oftem to repeat alert reminders.
         For example, they may have alerts just once or every 2 or 15 minutes.  [CHAR LIMIT=30] 
         */
        public static final int repeat_title=0x7f0b09ed;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Reset all of user's app preferences. 
         */
        public static final int reset_app_preferences=0x7f0b05df;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Confirmation button of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_button=0x7f0b05e2;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Body of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_desc=0x7f0b05e1;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Title of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_title=0x7f0b05e0;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset network settings 
         */
        public static final int reset_network_button_text=0x7f0b050f;
        /**  Reset settings complete toast text [CHAR LIMIT=75] 
         */
        public static final int reset_network_complete_toast=0x7f0b0514;
        /**  Reset settings confirmation screen title [CHAR LIMIT=30] 
         */
        public static final int reset_network_confirm_title=0x7f0b0512;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset network settings [CHAR LIMIT=NONE] 
         */
        public static final int reset_network_desc=0x7f0b050e;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset settings button 
         */
        public static final int reset_network_final_button_text=0x7f0b0511;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset settings button 
         */
        public static final int reset_network_final_desc=0x7f0b0510;
        /**  Reset Network 
 SD card & phone storage settings screen, setting option name under Backup & Restore heading 
         */
        public static final int reset_network_title=0x7f0b050d;
        /**  The message of dialog indicated restoring default APN settings in progress 
         */
        public static final int restore_default_apn=0x7f0b050a;
        /**  APNs screen toast message to inform reset default APN settings is completed 
         */
        public static final int restore_default_apn_completed=0x7f0b050c;
        /**  PIN entry dialog title for entering the administrator PIN [CHAR LIMIT=none] 
         */
        public static final int restr_pin_enter_admin_pin=0x7f0b0adb;
        /**  Restrictions summary for changing bluetooth configuration [CHAR LIMIT=100] 
         */
        public static final int restriction_bluetooth_config_summary=0x7f0b0a03;
        /**  Restrictions title for changing bluetooth configuration [CHAR LIMIT=35] 
         */
        public static final int restriction_bluetooth_config_title=0x7f0b0a02;
        /**  Restrictions summary for allowing location sharing [CHAR LIMIT=100] 
         */
        public static final int restriction_location_enable_summary=0x7f0b0a08;
        /**  Restrictions title for allowing location sharing [CHAR LIMIT=35] 
         */
        public static final int restriction_location_enable_title=0x7f0b0a07;
        /**  Restrictions screen - menu label to change restrictions pin [CHAR LIMIT=25] 
         */
        public static final int restriction_menu_change_pin=0x7f0b09e2;
        /**  Restrictions screen - reset menu to reset to unrestricted [CHAR LIMIT=25] 
         */
        public static final int restriction_menu_reset=0x7f0b09e1;
        /**  Restrictions summary for allowing NFC transfers (tablet) [CHAR LIMIT=100] 
 Restrictions summary for allowing NFC transfers (phone) [CHAR LIMIT=100] 
         */
        public static final int restriction_nfc_enable_summary=0x7f0b0a06;
        /**  Restrictions summary for allowing NFC transfers (tablet) [CHAR LIMIT=100] 
         */
        public static final int restriction_nfc_enable_summary_config=0x7f0b0a05;
        /**  Restrictions title for allowing NFC transfers [CHAR LIMIT=35] 
         */
        public static final int restriction_nfc_enable_title=0x7f0b0a04;
        /**  Restriction settings title [CHAR LIMIT=35] 
         */
        public static final int restriction_settings_title=0x7f0b09e0;
        /**  Restrictions summary for configuring wifi and mobile [CHAR LIMIT=100] 
         */
        public static final int restriction_wifi_config_summary=0x7f0b0a01;
        /**  Restrictions title for configuring wifi and mobile [CHAR LIMIT=35] 
         */
        public static final int restriction_wifi_config_title=0x7f0b0a00;
        /**  MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
 MTK Wireless settings end 
 AudioProfile Settings start 
         */
        public static final int ring_summary=0x7f0b00a5;
        public static final int ring_vibrate_summary=0x7f0b00a6;
        /**  Sound & notification > Sound section: Title for the option managing ringer volume. [CHAR LIMIT=30] 
         */
        public static final int ring_volume_option_title=0x7f0b0a6c;
        /**  Sound settings screen, setting option name 
         */
        public static final int ring_volume_title=0x7f0b03e0;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int ringtone_summary=0x7f0b03dd;
        /**  Sound & notification > Sound section: Title for the option defining the phone ringtone. [CHAR LIMIT=30] 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
         */
        public static final int ringtone_title=0x7f0b0a74;
        /**  mobile network settings screen, setting check box title 
         */
        public static final int roaming=0x7f0b022f;
        /**  mobile network settings screen, setting option summary text when check box is clear 
         */
        public static final int roaming_disable=0x7f0b0231;
        /**  mobile network settings screen, setting option summary text when check box is selected 
         */
        public static final int roaming_enable=0x7f0b0230;
        /**  mobile network settings screen, dialog message when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_reenable_message=0x7f0b0232;
        /**  mobile network settings screen, title of dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_reenable_title=0x7f0b0236;
        /**  mobile network settings screen, button on dialog box that appears when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_turn_it_on_button=0x7f0b0233;
        /**  mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_warning=0x7f0b0234;
        /**  mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box. This is for multiuser tablets [CHAR LIMIT=none] 
 mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box. This is for multiuser phones [CHAR LIMIT=none] 
         */
        public static final int roaming_warning_multiuser=0x7f0b0235;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int rssi_label=0x7f0b0bf5;
        /**  Label for frequency that the app is runnig (e.g. always, sometimes, etc.) [CHAR LIMIT=25] 
         */
        public static final int running_frequency=0x7f0b0b7d;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents a removed 
         */
        public static final int running_process_item_removed_user_label=0x7f0b0631;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents another user 
         */
        public static final int running_process_item_user_label=0x7f0b0630;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
         used by apps. 
         */
        public static final int running_processes_header_apps_prefix=0x7f0b0639;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing portion
         of free RAM that is used by cached apps. 
         */
        public static final int running_processes_header_cached_prefix=0x7f0b063c;
        /**  [CHAR LIMIT=NONE] Bottom test of the header leading in to the running
         processes/services list. 
         */
        public static final int running_processes_header_footer=0x7f0b0637;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
         that is free. 
         */
        public static final int running_processes_header_free_prefix=0x7f0b063a;
        /**  [CHAR_LIMIT=20] Running processes/services header: formatter for RAM use amount. 
         */
        public static final int running_processes_header_ram=0x7f0b063d;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
         used by system. 
         */
        public static final int running_processes_header_system_prefix=0x7f0b0638;
        /**  [CHAR LIMIT=NONE] Top title of the header of the running processes/services list. 
         */
        public static final int running_processes_header_title=0x7f0b0636;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing total RAM
         used by everything. 
         */
        public static final int running_processes_header_used_prefix=0x7f0b063b;
        /**  Descriptive text of a running process: plural process, plural service. 
         */
        public static final int running_processes_item_description_p_p=0x7f0b0635;
        /**  Descriptive text of a running process: plural process, singular service. 
         */
        public static final int running_processes_item_description_p_s=0x7f0b0634;
        /**  Descriptive text of a running process: singular process, plural service. 
         */
        public static final int running_processes_item_description_s_p=0x7f0b0633;
        /**  Descriptive text of a running process: singular process, singular service. 
         */
        public static final int running_processes_item_description_s_s=0x7f0b0632;
        /**  Title for list of services. 
         */
        public static final int runningservicedetails_processes_title=0x7f0b0641;
        /**  Title for list of services. 
         */
        public static final int runningservicedetails_services_title=0x7f0b0640;
        /**  Details about an application's running services. 
         */
        public static final int runningservicedetails_settings_title=0x7f0b063e;
        /**  Running service details, stop confirmation descriptive text. Displays when user selects selects to stop a system service. 
 Running service details, stop confirmation descriptive text. Displays when user selects selects to stop a system service. 
         */
        public static final int runningservicedetails_stop_dlg_text=0x7f0b064c;
        /**  Running service details, stop confirmation dialog title. Displays when user selects selects to stop a system service. 
         */
        public static final int runningservicedetails_stop_dlg_title=0x7f0b064b;
        /**  Services settings screen, setting option summary for the user to go to the screen to view running services  
         */
        public static final int runningservices_settings_summary=0x7f0b0626;
        /**  Services settings screen, setting option name for the user to go to the screen to view running services 
         */
        public static final int runningservices_settings_title=0x7f0b0625;
        /**  Runtime permissions preference summary, shown when the app has no permissions granted. [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_summary_no_permissions_granted=0x7f0b0b1a;
        /**  Runtime permissions preference summary, shown when the app requests no permissions. [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_summary_no_permissions_requested=0x7f0b0b1b;
        /**  Button label for generic save action [CHAR LIMIT=20] 
         */
        public static final int save=0x7f0b0221;
        /**  Summary for saved networks 
         */
        public static final int saved_network=0x7f0b000b;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int scan_list_label=0x7f0b0bfd;
        /**  MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
 MTK Bluetooth Settings end 
 MTK schedule power start 
         */
        public static final int schedule_power_on_off_settings_title=0x7f0b013d;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling application screen compatibility 
         */
        public static final int screen_compatibility_label=0x7f0b05bf;
        /**  Manage applications, individual application info screen, screen, message text under screen compatibility heading 
         */
        public static final int screen_compatibility_text=0x7f0b05d6;
        /**  Sound & notification > Other sounds: Title for the option enabling touch sounds for screen locking sounds. [CHAR LIMIT=30] 
         */
        public static final int screen_locking_sounds_title=0x7f0b0a83;
        /**  [CHAR LIMIT=300] Screen pinning description 
         */
        public static final int screen_pinning_description=0x7f0b0adf;
        /**  [CHAR LIMIT=28] Screen pinning title 
         */
        public static final int screen_pinning_title=0x7f0b0ade;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_none=0x7f0b0ae3;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_password=0x7f0b0ae2;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_pattern=0x7f0b0ae0;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_pin=0x7f0b0ae1;
        /**  Sound & display settings screen, setting option name to change screen timeout 
         */
        public static final int screen_timeout=0x7f0b041c;
        /**  Sound & display settings screen, setting option summary to change screen timeout 
         */
        public static final int screen_timeout_summary=0x7f0b041e;
        public static final int screen_timeout_summary_never=0x7f0b0c05;
        /**  Sound & display settings screen, setting option name to change screen timeout [CHAR LIMIT=30] 
         */
        public static final int screen_timeout_title=0x7f0b041d;
        /**  Dream settings screen, button label for settings for a specific screensaver 
         */
        public static final int screensaver_settings_button=0x7f0b042a;
        /**  Dream settings screen, caption for when dreams are disabled 
         */
        public static final int screensaver_settings_disabled_prompt=0x7f0b0427;
        /**  Dream settings screen, button label to start dreaming 
         */
        public static final int screensaver_settings_dream_start=0x7f0b0429;
        /**  Display settings screen, summary fragment for screen saver options, activated when docked  
         */
        public static final int screensaver_settings_summary_dock=0x7f0b0425;
        /**  Display settings screen, summary fragment for screen saver options, activated when docked or asleep and charging 
         */
        public static final int screensaver_settings_summary_either_long=0x7f0b0422;
        /**  Dream settings screen, dialog option, activated when docked or asleep and charging 
         */
        public static final int screensaver_settings_summary_either_short=0x7f0b0423;
        /**  Display settings screen, summary for screen saver options, screen saver is turned off 
         */
        public static final int screensaver_settings_summary_off=0x7f0b0426;
        /**  Display settings screen, summary fragment for screen saver options, activated when asleep and charging 
         */
        public static final int screensaver_settings_summary_sleep=0x7f0b0424;
        /**  Display settings screen, trigger for screen saver options 
         */
        public static final int screensaver_settings_title=0x7f0b0421;
        /**  Dream settings screen, action label, when to dream 
         */
        public static final int screensaver_settings_when_to_dream=0x7f0b0428;
        /**  The title of the activity to adjust SD card settings [CHAR LIMIT=25] 
 The title of the activity to adjust SD card settings
         */
        public static final int sd_card_settings_label=0x7f0b021c;
        /**  [CHAR LIMIT=15] Manage applications, label for chart showing SD card storage use. 
 [CHAR LIMIT=15] Manage applications, label for chart showing SD card storage use. 
         */
        public static final int sd_card_storage=0x7f0b05f0;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   [CHAR LIMIT=25] 
 SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject=0x7f0b0480;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   [CHAR LIMIT=30] 
 SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject_summary=0x7f0b0481;
        /**  SD card eject progress text   
         */
        public static final int sd_ejecting_summary=0x7f0b0490;
        /**  SD card eject progress title   
         */
        public static final int sd_ejecting_title=0x7f0b048f;
        /**  SD card & phone storage settings item title that will result in the phone formatting the USB storage.   [CHAR LIMIT=25] 
 SD card & phone storage settings item title that will result in the phone formatting the SD card.   [CHAR LIMIT=25] 
         */
        public static final int sd_format=0x7f0b0485;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.   [CHAR LIMIT=80] 
 SD card & phone storage settings item title that will result in the phone unmounting the SD card.   [CHAR LIMIT=80] 
         */
        public static final int sd_format_summary=0x7f0b0486;
        /**  SD card & phone storage settings item title for toggling PTP mode on and off.  When PTP mode is on the device will appear on the USB bus as a PTP camera device instead of an MTP music player.   
 SD card & phone storage settings item summary that is displayed when no SD card is inserted.  This version of the string can probably never come up on current hardware. [CHAR LIMIT=25] 
 SD card & phone storage settings item summary that is displayed when no SD card is inserted 
         */
        public static final int sd_insert_summary=0x7f0b0482;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the SD card [CHAR LIMIT=30] 
 SD card & phone storage settings screen heading. This is displayed above items that pertain to the SD card 
         */
        public static final int sd_memory=0x7f0b0474;
        /**  Storage setting item that will mount USB storage if it unmounted. A user should never see this. [CHAR LIMIT=25] 
 SD card & phone storage settings item title that will result in the phone mounting the SD card. 
         */
        public static final int sd_mount=0x7f0b0483;
        /**  Subtext for Mount USB storage in Storage settings. User should never see this since we use automount. 
 Subtext for Mount SD Card in Storage settings. User should never see this since we use automount. 
         */
        public static final int sd_mount_summary=0x7f0b0484;
        /**  Instructions after the user changes the mass storage settings 
         */
        public static final int sdcard_changes_instructions=0x7f0b0209;
        /**  Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted [CHAR LIMIT=25] 
 Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted 
         */
        public static final int sdcard_format=0x7f0b0180;
        /**  Title for a notification shown. [CHAR LIMIT=25] 
 Title for a notification shown. 
         */
        public static final int sdcard_setting=0x7f0b0186;
        /**  Th label for the available (free) sapce on the SD card 
         */
        public static final int sdcard_settings_available_bytes_label=0x7f0b020d;
        /**  Error message when the SD card was removed without properly unmounting [CHAR LIMIT=30] 
 Error message when the SD card was removed without properly unmounting 
         */
        public static final int sdcard_settings_bad_removal_status=0x7f0b0210;
        /**  Message when the SD card is being used by the computer as mass storage [CHAR LIMIT=30] 
 Message when the SD card is being used by the computer as mass storage 
         */
        public static final int sdcard_settings_mass_storage_status=0x7f0b020e;
        /**  Message when there is no SD card present [CHAR LIMIT=30] 
 Message when there is no SD card present 
         */
        public static final int sdcard_settings_not_present_status=0x7f0b020c;
        /**  Message when the SD card is mounted as read only [CHAR LIMIT=30] 
 Message when the SD card is mounted as read only 
         */
        public static final int sdcard_settings_read_only_status=0x7f0b0213;
        /**  Message when it is scanning the SD card for new files [CHAR LIMIT=30]  
 Message when it is scanning the SD card for new files 
         */
        public static final int sdcard_settings_scanning_status=0x7f0b0212;
        /**  Enable USB mass storage mode checkbox title 
         */
        public static final int sdcard_settings_screen_mass_storage_text=0x7f0b020a;
        /**  The label for total bytes on SD card 
         */
        public static final int sdcard_settings_total_bytes_label=0x7f0b020b;
        /**  Message when it is safe to remove the SD card [CHAR LIMIT=30] 
 Message when it is safe to remove the SD card 
         */
        public static final int sdcard_settings_unmounted_status=0x7f0b020f;
        /**  Label for used bytes on the SD card 
         */
        public static final int sdcard_settings_used_bytes_label=0x7f0b0211;
        /**  Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer  [CHAR LIMIT=25] 
 Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer  
         */
        public static final int sdcard_unmount=0x7f0b017f;
        /**  Text used as a search hint into the search box 
         */
        public static final int search_menu=0x7f0b0a38;
        /**  Text used to identify the search query suggestions / recent searches 
         */
        public static final int search_recents_queries_label=0x7f0b0a3a;
        /**  Text used to identify the search results 
         */
        public static final int search_results_label=0x7f0b0a3b;
        /**  Search strings 
 Text to describe the search results fragment title [CHAR LIMIT=16] 
         */
        public static final int search_results_title=0x7f0b0a37;
        /**  Main Settings screen, setting option name to go into search settings 
         */
        public static final int search_settings=0x7f0b040c;
        /**  Main Settings screen, setting option summary to go into search settings 
         */
        public static final int search_settings_summary=0x7f0b040d;
        /**  Warning that the device data will not be encrypted with password or PIN if
         choosing a secure lock and there is an enabled accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int secure_lock_encryption_warning=0x7f0b0720;
        /**  Summary for settings checkbox to disable widgets when the setting has been disabled by an installed device admin [CHAR LIMIT=50] 
         */
        public static final int security_enable_widgets_disabled_summary=0x7f0b0255;
        /**  Text shown for title of settings checkbox to enable widgets [CHAR LIMIT=20]
         */
        public static final int security_enable_widgets_title=0x7f0b0254;
        /**  MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
 MTK Storage Settings end 
MTK Security Settings start 
         */
        public static final int security_not_set=0x7f0b0138;
        /**  In the security screen, the header title for settings related to  Passwords
         */
        public static final int security_passwords_title=0x7f0b0262;
        /**  About phone screen, status item label  [CHAR LIMIT=60] 
         */
        public static final int security_patch=0x7f0b0c07;
        /**  Manage applications, individual application info screen, text that appears under the "Permissions" heading after the app has tried to send to a premium SMS. [CHAR LIMIT=50] 
         */
        public static final int security_settings_billing_desc=0x7f0b0603;
        /**  Manage applications, individual application info screen, text that appears under the "Permissions" heading. This describes the permissions that the application has. 
 Manage applications, individual application info screen, text that appears under the "Permissions" heading. This describes the permissions that the application has. 
         */
        public static final int security_settings_desc=0x7f0b05fd;
        /**  [CHAR_LIMIT=NONE] Manage applications, individual application info screen, text that appears under the "Permissions" heading.
         This describes the permissions that the application has.  It is used when multiple packages are contributing
         to the permissions and need to be listed here. 
 [CHAR_LIMIT=NONE] Manage applications, individual application info screen, text that appears under the "Permissions" heading.
         This describes the permissions that the application has.  It is used when multiple packages are contributing
         to the permissions and need to be listed here. 
         */
        public static final int security_settings_desc_multi=0x7f0b05fe;
        /**  Button text shown in fingerprint dialog that allows the user to delete the fingerprint template [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_dialog_delete=0x7f0b0277;
        /**  Label text shown in fingerprint dialog for renaming a fingerprint template [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_dialog_name_label=0x7f0b0275;
        /**  Button text shown in fingerprint dialog that allows the user to rename a fingerprint template [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_dialog_ok=0x7f0b0276;
        /**  Text shown in fingerprint settings explaining what the fingerprint can be used for. [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_disclaimer=0x7f0b0284;
        /**  Text shown in fingerprint settings explaining what the fingerprint can be used for in the case unlocking is disabled [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_disclaimer_lockscreen_disabled=0x7f0b0285;
        /**  Button text to exit fingerprint wizard after everything is done [CHAR LIMIT=15] 
         */
        public static final int security_settings_fingerprint_enroll_done=0x7f0b027f;
        /**  Dialog message for dialog which shows when finger cannot be enrolled. [CHAR LIMIT=45] 
         */
        public static final int security_settings_fingerprint_enroll_error_dialog_title=0x7f0b0bd4;
        /**  Dialog message for dialog which shows when finger cannot be enrolled due to an internal error or fingerprint can't be read. 
         */
        public static final int security_settings_fingerprint_enroll_error_generic_dialog_message=0x7f0b0bd6;
        /**  Dialog message for dialog which shows when finger cannot be enrolled due to being idle too long. 
         */
        public static final int security_settings_fingerprint_enroll_error_timeout_dialog_message=0x7f0b0bd5;
        /**  Content description of graphic that shows where the fingerprint of the device is [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_find_sensor_content_description=0x7f0b0274;
        /**  Message shown in fingerprint enrollment dialog to locate the sensor 
         */
        public static final int security_settings_fingerprint_enroll_find_sensor_message=0x7f0b0273;
        /**  Introduction title shown in fingerprint enrollment dialog to locate the sensor [CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_find_sensor_title=0x7f0b0272;
        /**  Message shown in fingerprint enrollment dialog once enrollment is completed 
         */
        public static final int security_settings_fingerprint_enroll_finish_message=0x7f0b027d;
        /**  Title shown in fingerprint enrollment dialog once enrollment is completed [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_finish_title=0x7f0b027c;
        /**  Button text to cancel enrollment from the introduction [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_introduction_cancel=0x7f0b0270;
        /**  Button text to continue to the next screen from the introduction [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_introduction_continue=0x7f0b0271;
        /**  Introduction detail message shown in fingerprint enrollment dialog [CHAR LIMIT=NONE]
         */
        public static final int security_settings_fingerprint_enroll_introduction_message=0x7f0b026d;
        /**  Introduction detail message shown in fingerprint enrollment dialog to warn the user [CHAR LIMIT=NONE]
         */
        public static final int security_settings_fingerprint_enroll_introduction_message_warning=0x7f0b026e;
        /**  Link text shown bellow the warning to learn morn about fingerprint risk [CHAR LIMIT=22]
         */
        public static final int security_settings_fingerprint_enroll_introduction_risk_link_text=0x7f0b026f;
        /**  Introduction title shown in fingerprint enrollment to introduce the fingerprint feature[CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_introduction_title=0x7f0b026c;
        /**  Text shown in fingerprint enroll when we didn't observe progress for a few seconds. [CHAR LIMIT=100] 
         */
        public static final int security_settings_fingerprint_enroll_lift_touch_again=0x7f0b0286;
        /**  Introduction message shown in fingerprint enrollment dialog when the user needs to choose an
         alternate screen unlock (pin, pattern or password) as a backup to fingerprint. 
         */
        public static final int security_settings_fingerprint_enroll_onboard_message=0x7f0b0269;
        /**  Introduction message shown in fingerprint enrollment dialog, first item to describe what
         the user needs to do. 
         */
        public static final int security_settings_fingerprint_enroll_onboard_message_1=0x7f0b026a;
        /**  Introduction message shown in fingerprint enrollment dialog, second item to describe what
         the user needs to do. 
         */
        public static final int security_settings_fingerprint_enroll_onboard_message_2=0x7f0b026b;
        /**  Introduction title shown in fingerprint enrollment dialog [CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_onboard_title=0x7f0b0268;
        /**  Message shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_repeat_message=0x7f0b027b;
        /**  Title shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=28] 
         */
        public static final int security_settings_fingerprint_enroll_repeat_title=0x7f0b027a;
        /**  Button text to setup screen lock in onboard dialog [CHAR LIMIT=34] 
         */
        public static final int security_settings_fingerprint_enroll_setup_screen_lock=0x7f0b027e;
        /**  Message shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_start_message=0x7f0b0279;
        /**  Title shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=29]
         */
        public static final int security_settings_fingerprint_enroll_start_title=0x7f0b0278;
        /**  Dialog message for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=45] 
         */
        public static final int security_settings_fingerprint_enroll_touch_dialog_message=0x7f0b0281;
        /**  Dialog title for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=45] 
         */
        public static final int security_settings_fingerprint_enroll_touch_dialog_title=0x7f0b0280;
        /**  message shown in summary field when no fingerprints are registered 
         */
        public static final int security_settings_fingerprint_preference_summary_none=0x7f0b0bce;
        /**  Title shown for menu item that launches fingerprint settings or enrollment [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_preference_title=0x7f0b0263;
        /**  Manage applications, text for permission to send to premium SMS short codes. [CHAR LIMIT=40] 
         */
        public static final int security_settings_premium_sms_desc=0x7f0b0604;
        /**  Main Settings screen setting option summary text for the item tot ake you to the security and location screen 
         */
        public static final int security_settings_summary=0x7f0b0260;
        /**  Main Settings screen setting option title for the item to take you to the security screen 
         */
        public static final int security_settings_title=0x7f0b025f;
        /**   action to select all [CHAR LIMIT=30] 
         */
        public static final int select_all=0x7f0b08bc;
        public static final int select_all_contact=0x7f0b0c56;
        /**  UI debug setting: title for app picker dialog [CHAR LIMIT=50] 
         */
        public static final int select_application=0x7f0b08c3;
        /**  Label for screen showing to select device policy 
         */
        public static final int select_device_admin_msg=0x7f0b0854;
        /**  UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59] 
 UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59] 
         */
        public static final int select_logd_size_dialog_title=0x7f0b06a5;
        /**  UI debug setting: limit size of Android logger buffers 
 UI debug setting: limit size of Android logger buffers 
         */
        public static final int select_logd_size_title=0x7f0b06a4;
        /**  MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
 MTK IPO settings end 
 Storage & USB settings start 
         */
        public static final int select_memory=0x7f0b0132;
        /**  Message for selecting sim for call in settings.  [CHAR LIMIT=40] 
         */
        public static final int select_sim_for_calls=0x7f0b0a1a;
        /**  Message for selecting sim for data in settings.  [CHAR LIMIT=40] 
         */
        public static final int select_sim_for_data=0x7f0b0a18;
        /**  UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59] 
         */
        public static final int select_usb_configuration_dialog_title=0x7f0b06b6;
        /**  UI debug setting: select USB configuration 
         */
        public static final int select_usb_configuration_title=0x7f0b06b5;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int selinux_status=0x7f0b0457;
        /**  These statuses are displayed when a device was built with SE Android supoprt.
    These are displayed by the settings app in the about section. 
         */
        public static final int selinux_status_disabled=0x7f0b0984;
        public static final int selinux_status_enforcing=0x7f0b0986;
        public static final int selinux_status_permissive=0x7f0b0985;
        /**  [CHAR LIMIT=10] Running services, summary of background processes 
         */
        public static final int service_background_processes=0x7f0b062c;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_client_name=0x7f0b062b;
        /**  [CHAR LIMIT=10] Running services, summary of foreground processes 
         */
        public static final int service_foreground_processes=0x7f0b062d;
        /**  Running service details, manage a service that is running for some other reason. 
         */
        public static final int service_manage=0x7f0b0643;
        /**  Running service details, default description for services that are managed. 
         */
        public static final int service_manage_description=0x7f0b0647;
        /**  Text to label a process entry with the process name. 
         */
        public static final int service_process_name=0x7f0b062f;
        /**  Label for a service item when it is restarting 
         */
        public static final int service_restarting=0x7f0b0627;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_started_by_app=0x7f0b062a;
        /**  Running service details, stop a service that has started itself. 
         */
        public static final int service_stop=0x7f0b0642;
        /**  Running service details, default description for services that are started. 
         */
        public static final int service_stop_description=0x7f0b0644;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats services list 
         */
        public static final int services_subtitle=0x7f0b07bc;
        /**  Data synchronization settings screen, setting option name 
         */
        public static final int settings_backup=0x7f0b0897;
        /**  Data synchronization settings screen, setting option summary text when check box is selected 
         */
        public static final int settings_backup_summary=0x7f0b0898;
        /**  Accessibility settings: button for lauching settings for an accessibility service 
         */
        public static final int settings_button=0x7f0b072a;
        /**  Title of the Settings activity shown within the application itself. 
         */
        public static final int settings_label=0x7f0b0223;
        /**  Title of the Settings activity shown in the Launcher. [CHAR LIMIT=20] 
         */
        public static final int settings_label_launcher=0x7f0b0224;
        /**  About phone settings screen, Open source license dialog title until license is fully loaded 
         */
        public static final int settings_license_activity_loading=0x7f0b057e;
        /**  About phone settings, Legal information setting option name and title of dialog box holding license info 
         */
        public static final int settings_license_activity_title=0x7f0b057c;
        /**  About phone settings screen, Open source license dialog message when licenses cannot be loaded 
         */
        public static final int settings_license_activity_unavailable=0x7f0b057d;
        /**  Package name for Settings app
         */
        public static final int settings_package=0x7f0b004e;
        /**  About phone settings screen, Safety Legal dialog title until the link is fully loaded 
         */
        public static final int settings_safetylegal_activity_loading=0x7f0b0582;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_activity_title=0x7f0b0580;
        /**  About phone settings screen, Safety legal dialog message when data network is not connected 
         */
        public static final int settings_safetylegal_activity_unreachable=0x7f0b0581;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_title=0x7f0b057f;
        /**  Label for option to select a settings panel as a shortcut 
         */
        public static final int settings_shortcut=0x7f0b0225;
        /**  Content of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=NONE] 
         */
        public static final int setup_fingerprint_enroll_enrolling_skip_message=0x7f0b0bd2;
        /**  Title of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=40] 
         */
        public static final int setup_fingerprint_enroll_enrolling_skip_title=0x7f0b0bd1;
        /**  Label of the button for the user to stay on fingerprint setup screen [CHAR LIMIT=20] 
         */
        public static final int setup_fingerprint_enroll_enrolling_stay_button=0x7f0b0bd3;
        /**  Message shown when fingerprint enrollment is completed during setup wizard [CHAR LIMIT=NONE] 
         */
        public static final int setup_fingerprint_enroll_finish_message=0x7f0b0bcf;
        /**  Message shown when fingerprint enrollment is completed, telling user about the fingerprint icon that will be shown whenever they can use their fingerprint [CHAR LIMIT=NONE] 
         */
        public static final int setup_fingerprint_enroll_finish_message_secondary=0x7f0b0bd0;
        /**  NFC Wi-Fi pairing/setup strings
 Write NFC tag for Wi-Fi pairing/setup title [CHAR_LIMIT=30]
         */
        public static final int setup_wifi_nfc_tag=0x7f0b0a61;
        /**  Button for going to the previous screen or step [CHAR LIMIT=40] 
 Button for going to the previous screen or step [CHAR LIMIT=40] 
 Button for going to the previous screen or step [CHAR LIMIT=40] 
 Button for going to the previous screen or step [CHAR LIMIT=40] 
         */
        public static final int setup_wizard_back_button_label=0x7f0b0054;
        /**  Button for going to the next screen or step [CHAR LIMIT=40] 
 Button for going to the next screen or step [CHAR LIMIT=40] 
 Button for going to the next screen or step [CHAR LIMIT=40] 
 Button for going to the next screen or step [CHAR LIMIT=40] 
         */
        public static final int setup_wizard_next_button_label=0x7f0b0053;
        /**  Extreme threats summary.  [CHAR LIMIT=60] 
         */
        public static final int severe_threats_summary=0x7f0b09ea;
        /**  Severe threats title.  [CHAR LIMIT=30] 
         */
        public static final int severe_threats_title=0x7f0b09e9;
        /**  UI debug setting: show all ANRs? [CHAR LIMIT=25] 
         */
        public static final int show_all_anrs=0x7f0b08f7;
        /**  UI debug setting: show all ANRs summary [CHAR LIMIT=50] 
         */
        public static final int show_all_anrs_summary=0x7f0b08f8;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Show background cached processes. 
         */
        public static final int show_background_processes=0x7f0b05dd;
        /**  UI debug setting: show how CPU is being used? [CHAR LIMIT=25] 
         */
        public static final int show_cpu_usage=0x7f0b08e3;
        /**  UI debug setting: show cpu usage summary [CHAR LIMIT=50] 
         */
        public static final int show_cpu_usage_summary=0x7f0b08e4;
        /**  [CHAR LIMIT=NONE] Device Info screen. Okay we get it, stop pressing, you already have it on 
         */
        public static final int show_dev_already=0x7f0b0156;
        /**  [CHAR LIMIT=NONE] Device Info screen. Confirmation that developer settings are enabled 
         */
        public static final int show_dev_on=0x7f0b0155;
        /**  UI debug setting: show when hardware layers get updated [CHAR LIMIT=25] 
         */
        public static final int show_hw_layers_updates=0x7f0b08d6;
        /**  UI debug setting: show hardware layers updates summary [CHAR LIMIT=50] 
         */
        public static final int show_hw_layers_updates_summary=0x7f0b08d7;
        /**  UI debug setting: show where window updates happen with GPU rendering? [CHAR LIMIT=25] 
         */
        public static final int show_hw_screen_updates=0x7f0b08d4;
        /**  UI debug setting: show GPU rendering screen updates summary [CHAR LIMIT=50] 
         */
        public static final int show_hw_screen_updates_summary=0x7f0b08d5;
        /**  UI debug setting: show when non-rectangular clip operations are used [CHAR LIMIT=100] 
         */
        public static final int show_non_rect_clip=0x7f0b08e9;
        /**  Text shown next to checkbox for showing owner info on LockScreen [CHAR LIMIT=50]
         */
        public static final int show_owner_info_on_lockscreen_label=0x7f0b0252;
        /**  On Security & location settings screen, setting check box name. Title of the checkbox to set whether password edit fields will show the most recent character typed and then hide it, or just hide it right away.  By hide, I mean mask it out. 
         */
        public static final int show_password=0x7f0b065a;
        /**  Text shown next to checkbox for showing profile info on LockScreen [CHAR LIMIT=50]
         */
        public static final int show_profile_info_on_lockscreen_label=0x7f0b025a;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Show running services. 
         */
        public static final int show_running_services=0x7f0b05dc;
        /**  UI debug setting: show where surface updates happen? [CHAR LIMIT=25] 
         */
        public static final int show_screen_updates=0x7f0b08d2;
        /**  UI debug setting: show surface updates summary [CHAR LIMIT=50] 
         */
        public static final int show_screen_updates_summary=0x7f0b08d3;
        /**  UI debug setting: show touches? [CHAR LIMIT=25] 
         */
        public static final int show_touches=0x7f0b08d0;
        /**  UI debug setting: show touches location summary [CHAR LIMIT=50] 
         */
        public static final int show_touches_summary=0x7f0b08d1;
        public static final int silent_settings_title=0x7f0b00ba;
        public static final int silent_summary=0x7f0b00a7;
        /**  SIM card lock settings screen, SIM PIN dialog message when wrong PIN is entered  [CHAR LIMIT=40] 
         */
        public static final int sim_bad_pin=0x7f0b043f;
        /**  Title for call back. [CHAR LIMIT=60] 
         */
        public static final int sim_call_back_title=0x7f0b0a29;
        /**  Checkbox to always use for calls.  [CHAR LIMIT=40] 
         */
        public static final int sim_calls_always_use=0x7f0b0a17;
        /**  When a user chooses this "Ask first" preference for the SIM to use for phone calls, they'll be prompted to choose a SIM every time they initiate a call [CHAR LIMIT=50] 
         */
        public static final int sim_calls_ask_first_prefs_title=0x7f0b0a34;
        /**  Label for a numbered SIM card.  [CHAR LIMIT=40] 
         */
        public static final int sim_card_number_title=0x7f0b0a1c;
        /**  Select label Title of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_card_select_title=0x7f0b0a24;
        /**  Message that SIM cards have changed.  [CHAR LIMIT=40] 
         */
        public static final int sim_cards_changed_message=0x7f0b0a13;
        /**  Message smmary that SIM cards have changed.  [CHAR LIMIT=60] 
         */
        public static final int sim_cards_changed_message_summary=0x7f0b0a14;
        /**  Message that Cellular data is unavailable.  [CHAR LIMIT=40] 
         */
        public static final int sim_cellular_data_unavailable=0x7f0b0a15;
        /**  Message summary that Cellular data is unavailable.  [CHAR LIMIT=60] 
         */
        public static final int sim_cellular_data_unavailable_summary=0x7f0b0a16;
        /**  Message confirming the user wishes to change the default data SIM from one to another.  [CHAR LIMIT=NONE] 
         */
        public static final int sim_change_data_message=0x7f0b0449;
        /**  Title asking user if they wish to change the default sim for cellular data.  [CHAR LIMIT=30] 
         */
        public static final int sim_change_data_title=0x7f0b0448;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN  [CHAR LIMIT=40] 
         */
        public static final int sim_change_failed=0x7f0b0441;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_change_pin=0x7f0b043e;
        /**  SIM card lock settings screen, SIM PIN dialog message when the entered PIN is correct [CHAR LIMIT=40] 
         */
        public static final int sim_change_succeeded=0x7f0b0442;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_disable_sim_lock=0x7f0b043a;
        /**  Carrier label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_carrier=0x7f0b0a21;
        /**  Color label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_color=0x7f0b0a23;
        /**  Name label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_name=0x7f0b0a1e;
        /**  Number label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_number=0x7f0b0a22;
        /**  Title label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_title=0x7f0b0a20;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enable_sim_lock=0x7f0b0439;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40] 
         */
        public static final int sim_enter_cancel=0x7f0b0445;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enter_new=0x7f0b043c;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40] 
         */
        public static final int sim_enter_ok=0x7f0b0444;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enter_old=0x7f0b043b;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enter_pin=0x7f0b0438;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN [CHAR LIMIT=40] 
         */
        public static final int sim_lock_failed=0x7f0b0443;
        public static final int sim_lock_info_detail_title=0x7f0b0c68;
        public static final int sim_lock_info_title=0x7f0b0c67;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is clear  [CHAR LIMIT=40] 
 SIM card lock settings screen, setting option summary text when SIM lock check box is clear  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_off=0x7f0b0436;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is selected  [CHAR LIMIT=40] 
 SIM card lock settings screen, setting option summary text when SIM lock check box is selected  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_on=0x7f0b0435;
        /**  SIM lock settings title  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_settings=0x7f0b0431;
        /**  Security & location settings screen, setting option name  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_settings_category=0x7f0b0432;
        /**  Security & location settings screen, section heading for settings related to sim card locking  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_settings_title=0x7f0b0433;
        /**  Multiple SIMs found summary.  [CHAR LIMIT=100] 
         */
        public static final int sim_multi_sims_summary=0x7f0b0447;
        /**  Multiple SIMs found title.  [CHAR LIMIT=40] 
         */
        public static final int sim_multi_sims_title=0x7f0b0446;
        /**  Hint for SIM name in sim name editor dialog.  [CHAR LIMIT=40] 
         */
        public static final int sim_name_hint=0x7f0b0a1f;
        /**  Message informing the user that no SIM card is inserted  [CHAR LIMIT=60] 
         */
        public static final int sim_no_inserted_msg=0x7f0b0a27;
        /**  Message under title informing the user to touch to go to SIM Cards in Settings.  [CHAR LIMIT=40] 
         */
        public static final int sim_notification_summary=0x7f0b0a32;
        /**  Title for SIM card notification.  [CHAR LIMIT=40] 
         */
        public static final int sim_notification_title=0x7f0b0a31;
        /**  Title for other call settings. [CHAR LIMIT=60] 
         */
        public static final int sim_other_call_settings=0x7f0b0a2b;
        /**  Title for outgoing back. [CHAR LIMIT=60] 
         */
        public static final int sim_outgoing_call_title=0x7f0b0a2a;
        /**  SIM card lock settings screen, setting option name to change the SIM PIN  [CHAR LIMIT=40] 
         */
        public static final int sim_pin_change=0x7f0b0437;
        /**  SIM card lock settings screen, setting check box label  [CHAR LIMIT=40] 
         */
        public static final int sim_pin_toggle=0x7f0b0434;
        /**  SIM card lock settings screen, SIM PIN dialog message when PINs don't match  [CHAR LIMIT=40] 
         */
        public static final int sim_pins_dont_match=0x7f0b0440;
        /**  This is a divider in the SIM cards preferences that is the header of various settings where the user chooses which SIM to use for phone calls, data, and SMS messages [CHAR LIMIT=50] 
         */
        public static final int sim_pref_divider=0x7f0b0a33;
        /**  Message for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=NONE] 
         */
        public static final int sim_preferred_message=0x7f0b044b;
        /**  Title for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=30] 
         */
        public static final int sim_preferred_title=0x7f0b044a;
        /**  SIM card lock settings screen, Re-type new PIN.  [CHAR LIMIT=40] 
         */
        public static final int sim_reenter_new=0x7f0b043d;
        /**  Title for selecting a SIM card.  [CHAR LIMIT=40] 
         */
        public static final int sim_select_card=0x7f0b0a1b;
        /**  When a SIM preference hasn't been selected yet, this string is displayed as the pref summary until the user chooses a SIM subscription from the preference list [CHAR LIMIT=50] 
         */
        public static final int sim_selection_required_pref=0x7f0b0a35;
        /**  Summary for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40] 
         */
        public static final int sim_settings_summary=0x7f0b0a12;
        /**  Title for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40] 
         */
        public static final int sim_settings_title=0x7f0b0a11;
        /**  Title for SIM card settings during Setup Wizard.  [CHAR LIMIT=40] 
         */
        public static final int sim_setup_wizard_title=0x7f0b0a10;
        /**  Summary text describing signal strength to the user.  [CHAR LIMIT=60] 
         */
        public static final int sim_signal_strength=0x7f0b0a30;
        public static final int sim_slot=0x7f0b005d;
        /**  Name label of Sim card that is empty.  [CHAR LIMIT=40] 
         */
        public static final int sim_slot_empty=0x7f0b0a1d;
        /**  SIM status title  [CHAR LIMIT=40] 
         */
        public static final int sim_status_title=0x7f0b0a28;
        /**  UI debug setting: simulate color space anomalies. [CHAR LIMIT=25] 
         */
        public static final int simulate_color_space=0x7f0b08db;
        public static final int sip_call_summary=0x7f0b00c4;
        public static final int sip_call_title=0x7f0b00c3;
        /**  Used in setup wizard Wi-Fi screen.  The button label for going to the next screen without submitting. [CHAR LIMIT=20] 
         */
        public static final int skip_label=0x7f0b0214;
        public static final int slot_number=0x7f0b0b03;
        /**  choice for the font size spinner 
         */
        public static final int small_font=0x7f0b0181;
        /**  Add, JWLW-1141, zhangzixiao, 20131118, End 
A: kuangyunfeng 20160112(start)
A: kuangyunfeng 20160112(start)
 Add, JWLW-1141, zhangzixiao, 20131118, End 
A: kuangyunfeng 20160112(start)
A: kuangyunfeng 20160112(start)
         */
        public static final int smart_movtion_title=0x7f0b0c44;
        /**  SMS Application [CHAR LIMIT=35]
         */
        public static final int sms_application_title=0x7f0b0541;
        public static final int sms_change_default_dialog_text=0x7f0b0543;
        public static final int sms_change_default_dialog_title=0x7f0b0542;
        public static final int sms_change_default_no_previous_dialog_text=0x7f0b0544;
        /**  check box SMS Messges title [CHAR LIMIT=30] 
         */
        public static final int sms_messages_title=0x7f0b022c;
        /**  Phone SMS over IMS off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int sms_over_ims_off=0x7f0b0160;
        /**  Phone SMS over IMS on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int sms_over_ims_on=0x7f0b015f;
        public static final int sms_vibrate_summary=0x7f0b00d9;
        public static final int software_updates_more_summary=0x7f0b0119;
        public static final int software_updates_more_title=0x7f0b0118;
        /**  Description of app sometimes running [CHAR LIMIT=45] 
         */
        public static final int sometimes_running=0x7f0b0b4f;
        /**  Menu item for Sorting list by average memory use [CHAR LIMIT=NONE]
         */
        public static final int sort_avg_use=0x7f0b0b76;
        /**  Menu item for Sorting list by maximum memory use [CHAR LIMIT=NONE] 
         */
        public static final int sort_max_use=0x7f0b0b77;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Sorts all of the apps in the list alphabetically. 
         */
        public static final int sort_order_alpha=0x7f0b05da;
        /**  Manage applications screen, menu item. Sorts all of the apps in the list based on their file size.  This is used to uninstall when space is getting low. 
         */
        public static final int sort_order_size=0x7f0b05db;
        /**  Category title for phone call's ringtone and vibration settings in the Sound Setting.
         [CHAR LIMIT=40] 
         */
        public static final int sound_category_call_ringtone_vibrate_title=0x7f0b0864;
        public static final int sound_category_calls_title=0x7f0b00be;
        public static final int sound_category_feedback_title=0x7f0b00bd;
        /** add BUG_ID:DWYYLM-42  liqiang 20151229 (end) 
Add, JWLW-1141, zhangzixiao, 20131118, Start 
add BUG_ID:DWYYLM-42  liqiang 20151229 (end) 
Add, JWLW-1141, zhangzixiao, 20131118, Start 
         */
        public static final int sound_category_message_notification_title=0x7f0b0c3e;
        public static final int sound_category_sound_title=0x7f0b0862;
        /**  Category title for system-wide notification and feedback settings in the Sound Setting.
         [CHAR LIMIT=40] 
         */
        public static final int sound_category_system_title=0x7f0b0865;
        /**  Sound settings screen, setting check box label 
         */
        public static final int sound_effects_enable_title=0x7f0b03ed;
        public static final int sound_enhancement_title=0x7f0b00ca;
        /**  Sound settings screen heading 
         */
        public static final int sound_settings=0x7f0b03dc;
        /**  Image button description for spell checker language. 
         */
        public static final int spellchecker_language=0x7f0b065e;
        /**  Image button description for spell checker quick settings. 
         */
        public static final int spellchecker_quick_settings=0x7f0b065d;
        /**  Warning message about security implications of enabling a spell checker, displayed as a dialog
         message when the user selects to enable a spell checker. 
         */
        public static final int spellchecker_security_warning=0x7f0b065c;
        /**   Title for spell checker settings 
         */
        public static final int spellcheckers_settings_title=0x7f0b097d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int ssid_label=0x7f0b0bf7;
        /**  Title of Dialog warning users of SSL monitoring. [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_dialog_title=0x7f0b0989;
        /**  Text of message to show to users whose administrator has installed a SSL CA Cert.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_info_message=0x7f0b098a;
        /**  Label on button that will take the user to the Trusted Credentials settings page.  [CHAR LIMIT=NONE]
         */
        public static final int ssl_ca_cert_settings_button=0x7f0b098c;
        /**  Shows up when there is a user SSL CA Cert installed on the
         device.  Indicates to the user that SSL traffic can be intercepted.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_warning=0x7f0b0987;
        /**  Text of warning to show to users that have a SSL CA Cert installed.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_warning_message=0x7f0b098b;
        /**  Shown when password is correct, and we're starting Android 
         */
        public static final int starting_android=0x7f0b08b7;
        /**  Text to inform the user to tap a tag to complete the setup process 
         */
        public static final int status_awaiting_tap=0x7f0b0a63;
        /**  About phone, status item title.  How much time the device has had its main CPU awake. 
         */
        public static final int status_awake_time=0x7f0b0472;
        /**  About phone, status item title.  The bluetooth adapter's hardware address
         */
        public static final int status_bt_address=0x7f0b046e;
        public static final int status_cdma_signal_strength=0x7f0b011d;
        public static final int status_current_cellid=0x7f0b011c;
        public static final int status_current_sidnid=0x7f0b011b;
        /**  About phone, status item title. The status of data access.  For example, the value may be "Connected" 
         */
        public static final int status_data_state=0x7f0b0468;
        /**  Text displayed in error cases (failure to write to tag) 
         */
        public static final int status_failed_to_write=0x7f0b0a66;
        /**  About phone, status item title.  The ICCID of the current LTE device. [CHAR LIMIT=30] 
         */
        public static final int status_icc_id=0x7f0b0465;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei=0x7f0b0c08;
        /**  MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
 MTK Dta usage  end 
 MTK About phone start 
         */
        public static final int status_imei_slot1=0x7f0b0114;
        public static final int status_imei_slot2=0x7f0b0115;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei_sv=0x7f0b0c09;
        /**  Text to inform the user that the network key entered was incorrect 
         */
        public static final int status_invalid_password=0x7f0b0a64;
        /**  About phone, status item title for the latest area info cell broadcast received (Brazil only). 
         */
        public static final int status_latest_area_info=0x7f0b0467;
        /**  About phone, status item title.  The phone MEID number of the current LTE/CDMA device. [CHAR LIMIT=30] 
         */
        public static final int status_meid_number=0x7f0b0464;
        /**  About phone, status item title.  The phone MIN number of the current device.
         */
        public static final int status_min_number=0x7f0b0461;
        /**  About phone, status item title.  The phone MSID number of the current device.
         */
        public static final int status_msid_number=0x7f0b0462;
        /**  About phone, status item title for the type of data phone network we're connected to, for example 3G or Edge or GPRS 
         */
        public static final int status_network_type=0x7f0b0466;
        /**  About tablet, status item title.  The Mobile Directory Number [CHAR LIMIT=30] 
 About phone, status item title.  The phone number of the current device [CHAR LIMIT=30] 
         */
        public static final int status_number=0x7f0b0460;
        /**  About phone, status item title. The cell carrier that the user is connected to.  
         */
        public static final int status_operator=0x7f0b046c;
        /**  About phone, status item title.  The phone PRL Version of the current device.
         */
        public static final int status_prl_version=0x7f0b0463;
        /**  About phone, status item title, The status for roaming.  For example, the value might be "Not roaming" 
         */
        public static final int status_roaming=0x7f0b046b;
        /**  About phone, status item title.  The hardware serial number. [CHAR LIMIT=30]
         */
        public static final int status_serial_number=0x7f0b046f;
        /**  About phone, status item title. The status of whether we have service.  for example, the value may be "In service" 
         */
        public static final int status_service_state=0x7f0b0469;
        /**  About phone, status item title. The  current cell tower signal strength 
         */
        public static final int status_signal_strength=0x7f0b046a;
        /**  Text displayed when tag is not writable 
         */
        public static final int status_tag_not_writable=0x7f0b0a67;
        /**  About phone, status item value if the actual value is not available. 
         */
        public static final int status_unavailable=0x7f0b0470;
        /**  About phone, status item title.  How long the device has been running since its last reboot. 
         */
        public static final int status_up_time=0x7f0b0471;
        /**  About phone, status item title.  The MAC address of the Wi-Fi network adapter. 
         */
        public static final int status_wifi_mac_address=0x7f0b046d;
        public static final int status_wimax_mac_address=0x7f0b08af;
        /**  Text displayed when tag successfully writen 
         */
        public static final int status_write_success=0x7f0b0a65;
        /**  Item title describing storage used by apps [CHAR LIMIT=48]
         */
        public static final int storage_detail_apps=0x7f0b04bb;
        /**  Item title describing storage used by audio [CHAR LIMIT=48]
         */
        public static final int storage_detail_audio=0x7f0b04be;
        /**  Item title describing storage used by cached data [CHAR LIMIT=48]
         */
        public static final int storage_detail_cached=0x7f0b04bf;
        /**  Body of dialog informing user about other files on a storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_detail_dialog_other=0x7f0b04c2;
        /**  Body of dialog informing user about other users on a storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_detail_dialog_user=0x7f0b04c3;
        /**  Item title that will launch a file explorer [CHAR LIMIT=48]
         */
        public static final int storage_detail_explore=0x7f0b04c1;
        /**  Item title describing storage used by images [CHAR LIMIT=48]
         */
        public static final int storage_detail_images=0x7f0b04bc;
        /**  Item title describing storage used by other data [CHAR LIMIT=48]
         */
        public static final int storage_detail_other=0x7f0b04c0;
        /**  Item title describing storage used by videos [CHAR LIMIT=48]
         */
        public static final int storage_detail_videos=0x7f0b04bd;
        /**  Dialog body informing user about an unmountable storage device. [CHAR LIMIT=NONE]
         */
        public static final int storage_dialog_unmountable=0x7f0b04b4;
        /**  Dialog body informing user about an unmounted storage device. [CHAR LIMIT=NONE]
         */
        public static final int storage_dialog_unmounted=0x7f0b04b3;
        /**  Dialog body informing user about an unsupported storage device. [CHAR LIMIT=NONE]
         */
        public static final int storage_dialog_unsupported=0x7f0b04b5;
        /**  Section header above list of external storage devices [CHAR LIMIT=30]
         */
        public static final int storage_external_title=0x7f0b04a7;
        /**  Toast informing that storage format operation failed. [CHAR LIMIT=64]
         */
        public static final int storage_format_failure=0x7f0b04b1;
        /**  Toast informing that storage format operation was successful. [CHAR LIMIT=64]
         */
        public static final int storage_format_success=0x7f0b04b0;
        /**  Body of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_forget_confirm=0x7f0b04ba;
        /**  Title of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=32]
         */
        public static final int storage_internal_forget_confirm_title=0x7f0b04b9;
        /**  Body of dialog informing user about consequences of forgetting an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_forget_details=0x7f0b04b8;
        /**  Body of dialog informing user about consequences of formatting an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_format_details=0x7f0b04b6;
        /**  Section header above list of internal storage devices [CHAR LIMIT=30]
         */
        public static final int storage_internal_title=0x7f0b04a6;
        /**  Body of dialog informing user about consequences of ejecting an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_unmount_details=0x7f0b04b7;
        /**  Manage applications, individual application info screen, section heading for stuff relating to an app's storage settings. 
         */
        public static final int storage_label=0x7f0b05bc;
        /**  Settings item summary when storage is running low [CHAR LIMIT=NONE] 
         */
        public static final int storage_low_summary=0x7f0b0492;
        /**  Settings item title when storage is running low [CHAR LIMIT=32] 
         */
        public static final int storage_low_title=0x7f0b0491;
        /**  Storage setting.  Menu option for exploring a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_explore=0x7f0b049c;
        /**  Storage setting.  Menu option for forgetting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_forget=0x7f0b049a;
        /**  Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_format=0x7f0b0496;
        /**  Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_format_private=0x7f0b0498;
        /**  Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_format_public=0x7f0b0497;
        /**  Storage setting.  Menu option for migrating data to a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_migrate=0x7f0b0499;
        /**  Storage setting.  Menu option for mounting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_mount=0x7f0b0494;
        /**  Storage setting.  Menu option for renaming a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_rename=0x7f0b0493;
        /**  Storage setting.  Menu option for setting up a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_set_up=0x7f0b049b;
        /**  Storage setting.  Menu option for unmounting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_unmount=0x7f0b0495;
        /**  Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
         */
        public static final int storage_mount_failure=0x7f0b04ad;
        /**  Toast informing that storage mount operation was successful. [CHAR LIMIT=64]
         */
        public static final int storage_mount_success=0x7f0b04ac;
        /**  Section header above list of other users storage [CHAR LIMIT=32] 
         */
        public static final int storage_other_users=0x7f0b04a5;
        /**  Title of dialog prompting user to rename a storage volume [CHAR LIMIT=32]
         */
        public static final int storage_rename_title=0x7f0b04b2;
        /**  Main settings screen item's title to go into the storage settings screen [CHAR LIMIT=25] 
         */
        public static final int storage_settings=0x7f0b045c;
        /**  [CHAR LIMIT=100] Main settings screen item's summary for the SD card and storage settings 
 [CHAR LIMIT=100] Main settings screen item's summary for the SD card and storage settings 
         */
        public static final int storage_settings_summary=0x7f0b045f;
        /**  Storage settings screen title 
         */
        public static final int storage_settings_title=0x7f0b045e;
        /**  Summary of a single storage volume used space. [CHAR LIMIT=24] 
         */
        public static final int storage_size_large=0x7f0b04a9;
        /**  add     by  xieshanlin  20150204  BUG_ID:JWLWEL-123   ( end )
 Summary for app storage preference [CHAR LIMIT=15] 
 Summary for app storage preference 
         */
        public static final int storage_summary_format=0x7f0b0b05;
        /**  Storage setting.  Title for USB transfer settings [CHAR LIMIT=30]
         */
        public static final int storage_title_usb=0x7f0b049d;
        /**  External storage label 
 Summary describing external storage for applications [CHAR LIMIT=25] 
         */
        public static final int storage_type_external=0x7f0b0b0c;
        /**  Internal storage label 
 Summary describing internal storage for applications [CHAR LIMIT=25] 
         */
        public static final int storage_type_internal=0x7f0b0b0b;
        /**  Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
         */
        public static final int storage_unmount_failure=0x7f0b04af;
        /**  Toast informing that storage unmount operation was successful. [CHAR LIMIT=64]
         */
        public static final int storage_unmount_success=0x7f0b04ae;
        /**  Main settings screen item's title to go into the storage & USB settings screen [CHAR LIMIT=25] 
         */
        public static final int storage_usb_settings=0x7f0b045d;
        /**  Title of storage preference to control where app is stored 
         */
        public static final int storage_used=0x7f0b0b0f;
        /**  Summary of a single storage volume, constrasting available and total storage space. [CHAR LIMIT=48]
         */
        public static final int storage_volume_summary=0x7f0b04a8;
        /**  Summary of a single storage volume total space. [CHAR LIMIT=48]
         */
        public static final int storage_volume_used=0x7f0b04aa;
        /**  Summary of a single storage volume total space. [CHAR LIMIT=48]
         */
        public static final int storage_volume_used_total=0x7f0b04ab;
        /**  Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_format_confirm_body=0x7f0b04ca;
        /**  Next button text of wizard step prompting user to format a storage device [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_format_confirm_next=0x7f0b04cd;
        /**  Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_format_confirm_public_body=0x7f0b04cc;
        /**  Title of wizard step prompting user to format a storage device [CHAR LIMIT=32] 
 syntax error in translation for storage_wizard_format_confirm_body (4401758710076806509) org.xmlpull.v1.XmlPullParserException: expected: /string read: b (position:END_TAG </b>@1:86 in     <string name="storage_wizard_format_confirm_body" msgid="4401758710076806509"></b>"<xliff:g id="NAME_0">^1</xliff:g>NAME_0需要格式化，以策安全。\n\n<xliff:g id="NAME_1">^1</xliff:g>經格式化後只能用於這部裝置。\n\n"<b>"格式化將清除目前儲存在<xliff:g id="NAME_2">^1</xliff:g>的所有資料。為免遺失資料，請先備份。"</string>
)  
         */
        public static final int storage_wizard_format_confirm_public_title=0x7f0b04cb;
        /**  Title of wizard step prompting user to format a storage device [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_format_confirm_title=0x7f0b04c9;
        /**  Body of wizard step showing formatting progress [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_format_progress_body=0x7f0b04cf;
        /**  Title of wizard step showing formatting progress [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_format_progress_title=0x7f0b04ce;
        /**  Summary of wizard choice to use storage device as external storage [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_init_external_summary=0x7f0b04c6;
        /**  Title of wizard choice to use storage device as external storage [CHAR LIMIT=64] 
         */
        public static final int storage_wizard_init_external_title=0x7f0b04c5;
        /**  Summary of wizard choice to use storage device as internal storage [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_init_internal_summary=0x7f0b04c8;
        /**  Title of wizard choice to use storage device as internal storage [CHAR LIMIT=64] 
         */
        public static final int storage_wizard_init_internal_title=0x7f0b04c7;
        /**  Title of wizard step prompting user to setup a storage device [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_init_title=0x7f0b04c4;
        /**  Body of wizard step prompting user to migrate data to new storage [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_body=0x7f0b04d1;
        /**  Body of wizard step providing details about data migration [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_confirm_body=0x7f0b04d5;
        /**  Title of wizard button prompting user to start data migration [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_confirm_next=0x7f0b04d6;
        /**  Title of wizard step prompting user to start data migration [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_confirm_title=0x7f0b04d4;
        /**  Body of wizard step providing details about data migration [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_details=0x7f0b04d8;
        /**  Title of wizard choice to migrate data at later time [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_later=0x7f0b04d3;
        /**  Title of wizard choice to migrate data right now [CHAR LIMIT=64] 
         */
        public static final int storage_wizard_migrate_now=0x7f0b04d2;
        /**  Title of wizard step showing migration progress [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_progress_title=0x7f0b04d7;
        /**  Title of wizard step prompting user to migrate data to new storage [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_title=0x7f0b04d0;
        /**  Body of wizard step prompting user to move an app [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_move_confirm_body=0x7f0b04dd;
        /**  Title of wizard step prompting user to move an app [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_move_confirm_title=0x7f0b04dc;
        /**  Body of wizard step showing app move progress [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_move_progress_body=0x7f0b04df;
        /**  Title of wizard button offering to cancel move [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_move_progress_cancel=0x7f0b04e0;
        /**  Title of wizard step showing app move progress [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_move_progress_title=0x7f0b04de;
        /**  Body of wizard step indicating that external storage is ready [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_ready_external_body=0x7f0b04da;
        /**  Body of wizard step indicating that internal storage is ready [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_ready_internal_body=0x7f0b04db;
        /**  Title of wizard step indicating that storage is ready [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_ready_title=0x7f0b04d9;
        /**  Title of wizard step prompting user to start data migration [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_slow_body=0x7f0b04e1;
        /**  Services settings screen, setting option summary for the user to go to the screen to app storage use 
         */
        public static final int storageuse_settings_summary=0x7f0b0624;
        /**  [CHAR LIMIT=25] Services settings screen, setting option name for the user to go to the screen to view app storage use 
         */
        public static final int storageuse_settings_title=0x7f0b0623;
        /**  UI debug setting: always enable strict mode? [CHAR LIMIT=25] 
         */
        public static final int strict_mode=0x7f0b08cc;
        /**  UI debug setting: show strict mode summary [CHAR LIMIT=50] 
         */
        public static final int strict_mode_summary=0x7f0b08cd;
        /**  mobile network settings screen, setting option summary text 
         */
        public static final int sum_carrier_select=0x7f0b0238;
        /**  [CHAR LIMIT=40] General divider text when concatenating multiple items in a text summary 
         */
        public static final int summary_divider_text=0x7f0b0abe;
        /**  Sound & display settings screen, setting option summary displaying the currently selected font size 
         */
        public static final int summary_font_size=0x7f0b0c06;
        /**  [CHAR LIMIT=40] General template for a symbolic start - end range in a text summary 
         */
        public static final int summary_range_symbol_combination=0x7f0b0abf;
        /**  [CHAR LIMIT=40] General template for a verbal start to end range in a text summary 
         */
        public static final int summary_range_verbal_combination=0x7f0b0ac0;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
        Label on Wifi Status screen
         */
        public static final int supplicant_state_label=0x7f0b0bf4;
        /**  Button for going to the previous screen or step [CHAR LIMIT=20] 
         */
        public static final int suw_back_button_label=0x7f0b0051;
        /**  Button for scrolling down to reveal more content on the screen [CHAR LIMIT=20] 
         */
        public static final int suw_more_button_label=0x7f0b0052;
        /**  Button for going to the next screen or step [CHAR LIMIT=20] 
         */
        public static final int suw_next_button_label=0x7f0b0050;
        public static final int switch_off_text=0x7f0b0add;
        /**  Switch On/Off  
         */
        public static final int switch_on_text=0x7f0b0adc;
        /**  Animation description for the sync active icon. 
         */
        public static final int sync_active=0x7f0b0887;
        /**  Title for a checkbox that enables data synchronization in the account and sync screen [CHAR LIMIT=35] 
         */
        public static final int sync_automatically=0x7f0b0891;
        /**  Data synchronization settings screen, checkbox setting option name. Controls whether Calendar shoudl be synced. 
         */
        public static final int sync_calendar=0x7f0b089d;
        /**  Data synchronization settings screen, checkbox setting option name 
         */
        public static final int sync_contacts=0x7f0b089e;
        /**  Sync status shown when sync is disabled [CHAR LIMIT=25] 
         */
        public static final int sync_disabled=0x7f0b0893;
        /**  Sync status shown when sync is enabled [CHAR LIMIT=25] 
         */
        public static final int sync_enabled=0x7f0b0892;
        /**  Sync status shown when last sync resulted in an error [CHAR LIMIT=25] 
         */
        public static final int sync_error=0x7f0b0894;
        /**  Image description for the sync failed icon. 
         */
        public static final int sync_failed=0x7f0b0886;
        /**  Data synchronization settings screen, checkbox setting option name. Controls whether Gmail should be synced.  Should use "Gmail" to refer to this app.
         */
        public static final int sync_gmail=0x7f0b089c;
        /**  Sync status shown when sync is disabled [CHAR LIMIT=30] 
         */
        public static final int sync_in_progress=0x7f0b0896;
        /**  Message when sync is currently failing [CHAR LIMIT=100] 
         */
        public static final int sync_is_failing=0x7f0b0889;
        /**  Formatter in AccountSyncSettings for each application we wish to synchronize, e.g. "Sync Calendar" 
         */
        public static final int sync_item_title=0x7f0b08ab;
        /**  Data synchronization settings screen, menu option 
         */
        public static final int sync_menu_sync_cancel=0x7f0b089a;
        /**  Data synchronization settings screen, menu option 
         */
        public static final int sync_menu_sync_now=0x7f0b0899;
        /**  Data synchronization settings screen, summary of a sync provider (for example, Gmail) when autosync is off and the user wants to do a one-time sync. 
         */
        public static final int sync_one_time_sync=0x7f0b089b;
        /**  Message introducing the user to Google Sync. 
         */
        public static final int sync_plug=0x7f0b089f;
        /**  Title for the apps that are allowed to draw on top of other apps [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_access_title=0x7f0b0b8e;
        /**  Title for the apps with SYSTEM_ALERT_WINDOW permission/privilege [CHAR LIMIT=20] 
         */
        public static final int system_alert_window_apps_title=0x7f0b0b8d;
        /**  Summary of app not allowed to draw overlay [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_off=0x7f0b0b97;
        /**  Summary of app allowed to draw overlay [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_on=0x7f0b0b96;
        /**  Settings title in main settings screen for SYSTEM_ALERT_WINDOW [CHAR LIMIT=45] 
         */
        public static final int system_alert_window_settings=0x7f0b0b8c;
        /**  Summary of number of apps currently can draw overlays [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_summary=0x7f0b0b94;
        public static final int system_package=0x7f0b0611;
        /**  Turn on settings for system ui tuner [CHAR LIMIT=40] 
         */
        public static final int system_ui_settings=0x7f0b0b5f;
        /**  About phone screen, list item summary.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40] 
         */
        public static final int system_update_settings_list_item_summary=0x7f0b0450;
        /**  About phone screen, list item title.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40] 
         */
        public static final int system_update_settings_list_item_title=0x7f0b044f;
        /**  Label for tap to wake setting [CHAR LIMIT=30] 
         */
        public static final int tap_to_wake=0x7f0b0b2f;
        /**  Summary for take to wake setting [CHAR LIMIT=90] 
         */
        public static final int tap_to_wake_summary=0x7f0b0b30;
        /**  About phone settings screen, setting option name to see terms and conditions 
         */
        public static final int terms_title=0x7f0b0578;
        /**  This is for diagnostics screen. The title of a screen with various items realted to launching screens that will giev the user info. For example, it contains "Phone information" and "Battery information" 
         */
        public static final int testing=0x7f0b067d;
        /**  In the Testing screen. The item title of the activity that shows a bunch of battery-related information.  
         */
        public static final int testing_battery_info=0x7f0b0c0b;
        /**  In the Testing screen.  The item title of the activity that shows a bunch of phone-related information.  
 In the Testing screen.  The item title of the activity that shows a bunch of phone-related information.  
         */
        public static final int testing_phone_info=0x7f0b067e;
        /**  Do not translate. In the Testing screen. The item title of the activity that shows a bunch of SIM-related operations.  
         */
        public static final int testing_sim_toolkit=0x7f0b067f;
        /**  In the Testing screen. The item title of the activity that shows usage statistics.  
         */
        public static final int testing_usage_stats=0x7f0b06d5;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Wi-Fi Testing on the diagnostic screen
         */
        public static final int testing_wifi_info=0x7f0b0be9;
        /**  Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_all=0x7f0b052c;
        /**  Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_bluetooth=0x7f0b052a;
        /**  Tethering controls, item title to go into the tethering settings 
 Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_usb=0x7f0b0528;
        /**  Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_usb_bluetooth=0x7f0b052b;
        /**  Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_wifi=0x7f0b0529;
        public static final int tethered_ipv4=0x7f0b009f;
        public static final int tethered_ipv4v6=0x7f0b009d;
        public static final int tethered_ipv6=0x7f0b009e;
        /**  MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
 MTK WFD end 
 MTK Wireless settings start 
         */
        public static final int tethered_ipv6_title=0x7f0b009c;
        public static final int tethering_apn_settings_summary=0x7f0b00a1;
        public static final int tethering_apn_settings_title=0x7f0b00a0;
        /**  Tethering help button - calls up a web view with general tethering info 
         */
        public static final int tethering_help_button_text=0x7f0b053e;
        /**  Error message for users that aren't allowed to modify Tethering settings [CHAR LIMIT=none] 
         */
        public static final int tethering_settings_not_available=0x7f0b0695;
        /**  Title string shown above TimePicker, letting a user select system time
         [CHAR LIMIT=20] 
         */
        public static final int time_picker_title=0x7f0b024d;
        /**  Do not translate. This is a stub which will be removed soon. 
         */
        public static final int time_zone_auto_stub=0x7f0b0c0e;
        /**  [CHAR LIMIT=30] Sound & display settings screen, setting option name to change font size 
         */
        public static final int title_font_size=0x7f0b042f;
        /**  Label for total memory of device [CHAR LIMIT=25] 
         */
        public static final int total_memory=0x7f0b0b79;
        /**  Manage applications, individual application info screen,label under Storage heading.  The total storage space taken up by this app. 
         */
        public static final int total_size_label=0x7f0b05c6;
        /**  Warning shown when user input has been blocked due to another app overlaying screen
         content. Since we don't know what the app is showing on top of the input target, we
         can't verify user consent. [CHAR LIMIT=NONE] 
         */
        public static final int touch_filtered_warning=0x7f0b071e;
        /**  Sound & notification > Other sounds: Title for the option enabling touch sounds. [CHAR LIMIT=30] 
         */
        public static final int touch_sounds_title=0x7f0b0a86;
        /**  UI debug setting: profile time taken by hardware acceleration to render apps [CHAR LIMIT=25] 
         */
        public static final int track_frame_time=0x7f0b08ea;
        /**  UI debug setting: scaling factor for transition animations [CHAR LIMIT=25] 
         */
        public static final int transition_animation_scale_title=0x7f0b08ec;
        /**  Summary for a trust agent that was disabled by the device policy [LIMIT=NONE] 
         */
        public static final int trust_agent_disabled_device_admin=0x7f0b0b27;
        /**  Title of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=30] 
         */
        public static final int trusted_credentials=0x7f0b0825;
        /**  Alert dialog confirmation when disabling a system CA certificate. 
         */
        public static final int trusted_credentials_disable_confirmation=0x7f0b097b;
        /**  Button label for disabling a system CA certificate. 
         */
        public static final int trusted_credentials_disable_label=0x7f0b0977;
        /**  Alert dialog confirmation when enabling a system CA certificate. 
         */
        public static final int trusted_credentials_enable_confirmation=0x7f0b097a;
        /**  Button label for enabling a system CA certificate. 
         */
        public static final int trusted_credentials_enable_label=0x7f0b0978;
        /**  Alert dialog confirmation when removing a user CA certificate. 
         */
        public static final int trusted_credentials_remove_confirmation=0x7f0b097c;
        /**  Button label for removing a user CA certificate. 
         */
        public static final int trusted_credentials_remove_label=0x7f0b0979;
        /**  Summary of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=NONE] 
         */
        public static final int trusted_credentials_summary=0x7f0b0826;
        /**  Tab label for built-in system CA certificates. 
         */
        public static final int trusted_credentials_system_tab=0x7f0b0975;
        /**  Tab label for user added CA certificates. 
         */
        public static final int trusted_credentials_user_tab=0x7f0b0976;
        /**  On main TTS Settings screen, summary for when required speech synthesis data alrady installed on SD card 
         */
        public static final int tts_data_installed_summary=0x7f0b07f1;
        /**  On main TTS Settings screen, summary for default language for synthesized voice 
         */
        public static final int tts_default_lang_summary=0x7f0b07ec;
        /**  On main TTS Settings screen, in default settings section, setting default language for synthesized voice 
         */
        public static final int tts_default_lang_title=0x7f0b07e9;
        /**  On main TTS Settings screen, summary for default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_summary=0x7f0b07e8;
        /**  On main TTS Settings screen, in default settings section, setting default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_title=0x7f0b07e7;
        /**  On main TTS Settings screen, summary for default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_summary=0x7f0b07e6;
        /**  On main TTS Settings screen, in default settings section, setting default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_title=0x7f0b07e5;
        /**  Text spoken by the TTS engine as an example if the engine doesn't provide sample text [CHAR LIMIT=100] 
         */
        public static final int tts_default_sample_string=0x7f0b07f8;
        /**  On main TTS Settings screen, section header for default TTS settings 
         */
        public static final int tts_default_settings_section=0x7f0b07e2;
        /**  On main TTS Settings screen, summary for default synthesis engine for synthesized voice 
         */
        public static final int tts_default_synth_summary=0x7f0b07e4;
        /**  On main TTS Settings screen, in default settings section, setting default synthesis engine for synthesized voice 
         */
        public static final int tts_default_synth_title=0x7f0b07e3;
        /**  Error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error=0x7f0b07f3;
        /**  Button text for error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error_config=0x7f0b07f4;
        /**  Button text for error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error_reselect=0x7f0b07f5;
        /**  On main TTS Settings screen, text preceded by the TTS engine name to indicate the engine cannot be used by the user 
         */
        public static final int tts_engine_name_is_disabled_summary=0x7f0b0801;
        /**  On main TTS Settings screen, text preceded by the TTS engine name to indicate the engine can be used by the user 
         */
        public static final int tts_engine_name_is_enabled_summary=0x7f0b0800;
        /**  On main TTS Settings screen, text preceded by the TTS engine name, clicking this button will launch the engine settings 
         */
        public static final int tts_engine_name_settings=0x7f0b07ff;
        /**  Warning message about required internet conectivity for TTS synthesis, displayed as a dialog
         message when the user selects to play an example for network only locale and there's no internet connectivity. 
         */
        public static final int tts_engine_network_required=0x7f0b07f7;
        /**  [CHAR LIMIT=50] The text for the settings section that users to set a
         preferred text to speech engine 
         */
        public static final int tts_engine_preference_section_title=0x7f0b080c;
        /**  Warning message about security implications of enabling a TTS engine, displayed as a dialog
         message when the user selects to enable an engine. 
         */
        public static final int tts_engine_security_warning=0x7f0b07f6;
        /**  [CHAR LIMIT=150] Text for screen readers / accessibility programs for
         the image that launches the TTS engine settings when clicked. 
         */
        public static final int tts_engine_settings_button=0x7f0b080b;
        /**  On the main TTS settings screen, text for a divider under which
         the engine specific settings and the "engine install data" option
         are listed [CHAR LIMIT=30]
         */
        public static final int tts_engine_settings_section=0x7f0b0802;
        /**  Title for a preference in the main TTS settings screen, which
         launches the settings screen for a given TTS engine when clicked
         [CHAR LIMIT=30]
         */
        public static final int tts_engine_settings_title=0x7f0b0803;
        /**  On main TTS Settings screen, text for divider under which all TTS engines are listed 
         */
        public static final int tts_engines_section=0x7f0b07fe;
        /**  [CHAR LIMIT=50] Title of the settings section that displays general preferences
         that are applicable to all engines, such as the speech rate 
         */
        public static final int tts_general_section_title=0x7f0b080d;
        /**  On main TTS Settings screen, summary for click to install required speech synthesis data 
         */
        public static final int tts_install_data_summary=0x7f0b07f0;
        /**  On main TTS Settings screen, click to install required speech synthesis data 
         */
        public static final int tts_install_data_title=0x7f0b07ef;
        /**  On main TTS Settings screen, language summary if it can't default to system language [CHAR LIMIT=50] 
         */
        public static final int tts_lang_not_selected=0x7f0b07eb;
        /**  Entry in the TTS engine language/locale picker, when selected will try to default to the system language [CHAR LIMIT=50] 
         */
        public static final int tts_lang_use_system=0x7f0b07ea;
        /**  [CHAR LIMIT=30] Notification message that appears after the user has installed a new TTS engine,
         to warn the user that this engine cannot be used before the checkbox for that engine
         in TTS settings is checked. 
         */
        public static final int tts_notif_engine_install_message=0x7f0b080a;
        /**  [CHAR LIMIT=33] Notification title that appears when the installation of a new TTS engine completed 
         */
        public static final int tts_notif_engine_install_title=0x7f0b0809;
        /**  On main TTS Settings screen, summary for triggering playback of an example of speech synthesis 
         */
        public static final int tts_play_example_summary=0x7f0b07ee;
        /**  On main TTS Settings screen, triggers playback of an example of speech synthesis 
         */
        public static final int tts_play_example_title=0x7f0b07ed;
        /**  Name of the TTS package as listed by the package manager. 
         */
        public static final int tts_settings=0x7f0b07de;
        /**  Text spoken by the TTS engine when TTS settings (other than language) have been changed 
         */
        public static final int tts_settings_changed_demo=0x7f0b07f2;
        /**  TTS option item name in the main settings screen 
         */
        public static final int tts_settings_title=0x7f0b07df;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         tts engine is queried for status [CHAR LIMIT=150] 
         */
        public static final int tts_status_checking=0x7f0b07fd;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is not supported by the engine [CHAR LIMIT=150] 
         */
        public static final int tts_status_not_supported=0x7f0b07fc;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is fully supported by the engine [CHAR LIMIT=150]
         */
        public static final int tts_status_ok=0x7f0b07fa;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is supported by the engine only if there's a working network connection [CHAR LIMIT=150] 
         */
        public static final int tts_status_requires_network=0x7f0b07fb;
        /**  On main TTS Settings screen, title of a field explaining current TTS engine status for
         current default language [CHAR LIMIT=50] 
         */
        public static final int tts_status_title=0x7f0b07f9;
        /**  Phone Info screen. Button label to turn off the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_off_radio=0x7f0b015e;
        /**  Phone info 
 Phone Info screen. Button label to turn on the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_on_radio=0x7f0b015d;
        /**  Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 Background power saving end 
 wifiGprsSelector setting end 
 [C2K solution 2 enhancement start] 
 Background power saving end 
 MTK About phone end 
 C2K OM start 
 Background power saving end 
 Background power saving end 
 wifiGprsSelector setting end 
         */
        public static final int two_cdma_dialog_msg=0x7f0b0149;
        /**  Manage applications, individual application info screen, menu item to uninstall an application for all users. 
         */
        public static final int uninstall_all_users_text=0x7f0b05cc;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to remove the application from the system. 
         */
        public static final int uninstall_text=0x7f0b05cb;
        /**  Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
         */
        public static final int unknown=0x7f0b05d9;
        /**  Warning toast shown when data usage screen can't find specified app 
         */
        public static final int unknown_app=0x7f0b0b2a;
        /**  Title shown on security settings to allow the user to change their lockscreen password [CHAR LIMIT=22]
         */
        public static final int unlock_change_lock_password_title=0x7f0b02c3;
        /**  Title shown on security settings to allow the user to change their lockscreen pattern [CHAR LIMIT=22] 
         */
        public static final int unlock_change_lock_pattern_title=0x7f0b02c1;
        /**  Title shown on security settings to allow the user to change their lockscreen PIN [CHAR LIMIT=22] 
         */
        public static final int unlock_change_lock_pin_title=0x7f0b02c2;
        /**  Content of the dialog shown when the user removes the device lock password [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_password=0x7f0b02bc;
        /**  Content of the dialog shown when the user removes the device lock password and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_password_fingerprint=0x7f0b02bd;
        /**  Content of the dialog shown when the user removes the device lock pattern [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pattern=0x7f0b02b8;
        /**  Content of the dialog shown when the user removes the device lock pattern and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pattern_fingerprint=0x7f0b02b9;
        /**  Content of the dialog shown when the user removes the device lock PIN [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pin=0x7f0b02ba;
        /**  Content of the dialog shown when the user removes the device lock PIN and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pin_fingerprint=0x7f0b02bb;
        /**  Content of the dialog shown when the user removes the device lock of unknown type [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_unknown=0x7f0b02be;
        /**  Content of the dialog shown when the user removes the device lock of unknown type and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_unknown_fingerprint=0x7f0b02bf;
        /**  Affirmative action of the dialog shown when the user removes the device lock [CHAR LIMIT=25] 
         */
        public static final int unlock_disable_frp_warning_ok=0x7f0b02c0;
        /**  Title of the dialog shown when the user removes the device lock [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_title=0x7f0b02b7;
        /**  Title for option to turn of password/pin/pattern unlock. [CHAR LIMIT=22] 
         */
        public static final int unlock_disable_lock_title=0x7f0b02b6;
        /**  Summary for preference that has been disabled by because of the DevicePolicyAdmin, or because device encryption is enabled, or because there are credentials in the credential storage [CHAR LIMIT=50] 
         */
        public static final int unlock_set_unlock_disabled_summary=0x7f0b02af;
        /**   Summary for PreferenceScreen to changeecurity method: None/Pattern/PIN/Password [CHAR LIMIT=45]  
         */
        public static final int unlock_set_unlock_launch_picker_change_summary=0x7f0b02a2;
        /**   Title for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_launch_picker_change_title=0x7f0b02a1;
        /**   Summary for PreferenceScreen to changeecurity method: None/Pattern/PIN/Password [CHAR LIMIT=45]  
         */
        public static final int unlock_set_unlock_launch_picker_enable_summary=0x7f0b02a3;
        /**   Title for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_launch_picker_title=0x7f0b02a0;
        /**  Summary for "Configure lockscreen" when security is disabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_none=0x7f0b02b1;
        /**  Summary for "Configure lockscreen" when lock screen is off [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_off=0x7f0b02b0;
        /**  Summary for "Configure lockscreen" when security password is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_password=0x7f0b02b4;
        /**  Summary for "Configure lockscreen" when security pattern is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_pattern=0x7f0b02b2;
        /**  Summary for "Configure lockscreen" when security PIN is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_pin=0x7f0b02b3;
        /**  Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
 Voice UI end 
 Voice unlock start 
         */
        public static final int unlock_set_unlock_mode_voice_weak=0x7f0b013a;
        /**  Summary for preference that disables unlock security [CHAR LIMIT=45]
         */
        public static final int unlock_set_unlock_none_summary=0x7f0b02a7;
        /**  Title for preference that disables unlock security [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_none_title=0x7f0b02a6;
        /**  Summary for preference that disables unlock security [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_off_summary=0x7f0b02a5;
        /**  Title for preference that disables unlock security [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_off_title=0x7f0b02a4;
        /**  Title for preference that guides the user through creating an unlock password [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_password_summary=0x7f0b02ad;
        /**  Title for preference that guides the user through creating an unlock password [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_password_title=0x7f0b02ac;
        /**  Summary for preference that guides the user through creating an unlock pattern [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_pattern_summary=0x7f0b02a9;
        /**  Title for preference that guides the user through creating an unlock pattern [CHAR LIMIT=22]
         */
        public static final int unlock_set_unlock_pattern_title=0x7f0b02a8;
        /**  Summary for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_pin_summary=0x7f0b02ab;
        /**  Title for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_pin_title=0x7f0b02aa;
        /**  Footer text in when choosing screen lock type during setup wizard, telling the user that
         they can add fingerprint after they complete setup wizard. The text "Settings > Security"
         should match settings_label and security_settings_title [CHAR LIMIT=NONE] 
         */
        public static final int unlock_setup_wizard_fingerprint_details=0x7f0b02b5;
        /**  SD card unmount informative text   [CHAR LIMIT=NONE] 
 SD card unmount informative text   [CHAR LIMIT=NONE] 
         */
        public static final int unmount_inform_text=0x7f0b048e;
        /**  Name to assign to a Network Access Point that was saved without a name 
         */
        public static final int untitled_apn=0x7f0b0861;
        /**  Title of usage access screen [CHAR LIMIT=30] 
         */
        public static final int usage_access=0x7f0b0b48;
        /**  Description of the usage access setting [CHAR LIMIT=NONE] 
         */
        public static final int usage_access_description=0x7f0b0b4b;
        /**  Title of Usage Access preference item [CHAR LIMIT=30] 
         */
        public static final int usage_access_title=0x7f0b0838;
        /**  XXX remove? Strings used for displaying usage statistics 
         */
        public static final int usage_stats_label=0x7f0b06d4;
        /**  label for usage time 
         */
        public static final int usage_time_label=0x7f0b06d9;
        /**  [CHAR_LIMIT=NONE] Label for amount of power use that was actually observed (though
         the change in battery level) 
         */
        public static final int usage_type_actual_power=0x7f0b0783;
        /**  Label for Audio usage time 
         */
        public static final int usage_type_audio=0x7f0b077b;
        /**  Label for Camera usage time 
         */
        public static final int usage_type_camera=0x7f0b077d;
        /**  [CHAR_LIMIT=NONE] Label for amount of power use that was computed 
         */
        public static final int usage_type_computed_power=0x7f0b0782;
        /**  Label for CPU usage time 
         */
        public static final int usage_type_cpu=0x7f0b0770;
        /**  Label for CPU usage in foreground 
         */
        public static final int usage_type_cpu_foreground=0x7f0b0771;
        /**  Label for mobile network data received [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_recv=0x7f0b0777;
        /**  Label for mobile network data sent [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_send=0x7f0b0776;
        /**  Label for Wi-Fi network data received [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_wifi_recv=0x7f0b077a;
        /**  Label for Wi-Fi network data sent [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_wifi_send=0x7f0b0779;
        /**  Label for Flashlight usage time 
         */
        public static final int usage_type_flashlight=0x7f0b077e;
        /**  Label for GPS usage time 
         */
        public static final int usage_type_gps=0x7f0b0773;
        /**  Label for time that there was no cell coverage 
         */
        public static final int usage_type_no_coverage=0x7f0b0780;
        /**  Label for time that a feature has been on 
         */
        public static final int usage_type_on_time=0x7f0b077f;
        /**  Label for Phone usage time 
 Label for Phone usage time 
         */
        public static final int usage_type_phone=0x7f0b0775;
        /**  Label for mobile network radio active time [CHAR LIMIT=32] 
         */
        public static final int usage_type_radio_active=0x7f0b0778;
        /**  Label for the total power capacity of the device's battery 
         */
        public static final int usage_type_total_battery_capacity=0x7f0b0781;
        /**  Label for Video usage time 
         */
        public static final int usage_type_video=0x7f0b077c;
        /**  [CHAR LIMIT=25] Label for keeping device from sleeping 
         */
        public static final int usage_type_wake_lock=0x7f0b0772;
        /**  [CHAR LIMIT=25] Label for WIFI usage time 
         */
        public static final int usage_type_wifi_running=0x7f0b0774;
        /**  UI debug setting: disable USB audio routing title [CHAR LIMIT=32] 
         */
        public static final int usb_audio_disable_routing=0x7f0b08dd;
        /**  UI debug setting: disable USB audio routing summary [CHAR LIMIT=50] 
         */
        public static final int usb_audio_disable_routing_summary=0x7f0b08de;
        public static final int usb_bicr_summary=0x7f0b0134;
        /**  Storage setting.  USB connection category [CHAR LIMIT=30]
         */
        public static final int usb_connection_category=0x7f0b049e;
        /**  Storage setting.  Summary for MIDI checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_midi_summary=0x7f0b04a4;
        /**  Storage setting.  Title for MIDI checkbox [CHAR LIMIT=30]
         */
        public static final int usb_midi_title=0x7f0b04a3;
        /**  Storage setting.  Summary for MTP checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_mtp_summary=0x7f0b04a0;
        /**  Storage setting.  Title for MTP checkbox [CHAR LIMIT=30]
         */
        public static final int usb_mtp_title=0x7f0b049f;
        /**  Storage setting.  Summary for PTP checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_ptp_summary=0x7f0b04a2;
        /**  Storage setting.  Title for PTP checkbox [CHAR LIMIT=30]
         */
        public static final int usb_ptp_title=0x7f0b04a1;
        public static final int usb_tether_type_title=0x7f0b00a2;
        /**  USB tethered subtext - shown when USB is connected and being tethered 
         */
        public static final int usb_tethering_active_subtext=0x7f0b0530;
        /**  USB available subtext - shown when USB is connected but not currently being tethered 
         */
        public static final int usb_tethering_available_subtext=0x7f0b052f;
        public static final int usb_tethering_button_text=0x7f0b052e;
        /**  USB errored subtext - shown when USB is broken for some reason 
         */
        public static final int usb_tethering_errored_subtext=0x7f0b0534;
        public static final int usb_tethering_select_version=0x7f0b00a3;
        /**  USB storage subtext - shown when tethering is disabled because USB storage is active 
         */
        public static final int usb_tethering_storage_active_subtext=0x7f0b0531;
        /**  USB unavailable subtext - shown when USB is not connected 
         */
        public static final int usb_tethering_turnon_subtext=0x7f0b0533;
        /**  USB unavailable subtext - shown when USB is not connected 
         */
        public static final int usb_tethering_unavailable_subtext=0x7f0b0532;
        /**  USB Tethering options 
         */
        public static final int usb_title=0x7f0b052d;
        public static final int usb_ums_summary=0x7f0b0136;
        /**  The title used in a dialog which lets the user select what the USB connection
         for this device should be used for. Choices are usb_use_charging_only,
         usb_use_file_transfer, use_use_photo_transfer, and usb_use_MIDI 
         */
        public static final int usb_use=0x7f0b0b66;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for entering MIDI mode. 
         */
        public static final int usb_use_MIDI=0x7f0b0b65;
        /**  Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for entering MIDI mode. 
         */
        public static final int usb_use_MIDI_desc=0x7f0b0c3a;
        public static final int usb_use_built_in_cd_rom=0x7f0b0133;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for charging only. 
         */
        public static final int usb_use_charging_only=0x7f0b0b62;
        /**  Decription of one of the choices in a dialog (with title defined in usb_use) that lets the
         user select what the USB connection for this device should be used for. This choice
         is for charging only. 
         */
        public static final int usb_use_charging_only_desc=0x7f0b0c35;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring files via MTP. 
         */
        public static final int usb_use_file_transfers=0x7f0b0b63;
        /**  Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring files via MTP. 
         */
        public static final int usb_use_file_transfers_desc=0x7f0b0c38;
        public static final int usb_use_mass_storage=0x7f0b0135;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring photos via PTP. 
         */
        public static final int usb_use_photo_transfers=0x7f0b0b64;
        /**  Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring photos via PTP. 
         */
        public static final int usb_use_photo_transfers_desc=0x7f0b0c39;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for powering the other device only. 
         */
        public static final int usb_use_power_only=0x7f0b0c36;
        /**  Decription of one of the choices in a dialog (with title defined in usb_use) that lets the
         user select what the USB connection for this device should be used for. This choice
         is for powering the other device only. 
         */
        public static final int usb_use_power_only_desc=0x7f0b0c37;
        /**  On main TTS Settings screen, summary for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_summary=0x7f0b07e1;
        /**  On main TTS Settings screen, title for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_title=0x7f0b07e0;
        /**  [CHAR_LIMIT=100] Security & location settings screen, setting check box summary for Google search 
         */
        public static final int use_location_summary=0x7f0b056d;
        /**  [CHAR_LIMIT=30] Security & location settings screen, setting check box label for Google search 
         */
        public static final int use_location_title=0x7f0b056c;
        /**  Title for settings whether or not the framework will select input methods in an IME based on the current system locale. [CHAR LIMIT=35] 
         */
        public static final int use_system_language_to_select_input_method_subtypes=0x7f0b068b;
        /**  User account title [CHAR LIMIT=30] 
         */
        public static final int user_account_title=0x7f0b09e5;
        /**  Summary for add user action, when it's disabled [CHAR LIMIT=100] 
         */
        public static final int user_add_max_count=0x7f0b099b;
        /**  User menu to allow creating new users from lockscreen [CHAR LIMIT=30] 
         */
        public static final int user_add_on_lockscreen_menu=0x7f0b09ab;
        /**  Summary for add restricted profile entry in the choice dialog [CHAR LIMIT=none] 
         */
        public static final int user_add_profile_item_summary=0x7f0b099d;
        /**  Button text for adding a restricted profile [CHAR LIMIT=25] 
         */
        public static final int user_add_profile_item_title=0x7f0b099f;
        /**  Summary for add user entry in the choice dialog [CHAR LIMIT=none] 
         */
        public static final int user_add_user_item_summary=0x7f0b099c;
        /**  Button text for adding a regular user [CHAR LIMIT=25] 
         */
        public static final int user_add_user_item_title=0x7f0b099e;
        /**  User settings add user menu [CHAR LIMIT=35] 
         */
        public static final int user_add_user_menu=0x7f0b0990;
        /**  Message for add user confirmation dialog - long version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_long=0x7f0b09a1;
        /**  Message for add user confirmation dialog - short version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_short=0x7f0b09a2;
        /**  User settings add user or restricted profile menu [CHAR LIMIT=35] 
         */
        public static final int user_add_user_or_profile_menu=0x7f0b098f;
        /**  Title for add user confirmation dialog [CHAR LIMIT=30] 
         */
        public static final int user_add_user_title=0x7f0b09a0;
        /**  Title for add user type dialog [CHAR LIMIT=45] 
         */
        public static final int user_add_user_type_title=0x7f0b099a;
        /**  Setting label to show that a new user is being added [CHAR LIMIT=30] 
         */
        public static final int user_adding_new_user=0x7f0b09b6;
        /**  Message to limited users that they cannot add accounts [CHAR LIMIT=100] 
         */
        public static final int user_cannot_add_accounts_message=0x7f0b09a9;
        /**  Message to secondary users that only owner can manage users [CHAR LIMIT=none] 
 Message to secondary users that only owner can manage users [CHAR LIMIT=none] 
         */
        public static final int user_cannot_manage_message=0x7f0b09a8;
        /**  User removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_confirm_remove_message=0x7f0b09b3;
        /**  User (self) removal confirmation message [CHAR LIMIT=none] 
 User (self) removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_confirm_remove_self_message=0x7f0b09b2;
        /**  User (self) removal confirmation title [CHAR LIMIT=30] 
         */
        public static final int user_confirm_remove_self_title=0x7f0b09ae;
        /**  User removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int user_confirm_remove_title=0x7f0b09af;
        /**  Delete button text [CHAR LIMIT=25] 
         */
        public static final int user_delete_button=0x7f0b09b8;
        /**  Spoken content description for delete icon beside a user [CHAR LIMIT=none] 
         */
        public static final int user_delete_user_description=0x7f0b09b7;
        /**  User dictionary settings. Text on the dialog button to confirm adding a word. [CHAR LIMIT=15] 
         */
        public static final int user_dict_settings_add_dialog_confirm=0x7f0b0671;
        /**  User dictionary settings. Text on the dialog button mask advanced options. [CHAR LIMIT=15] 
         */
        public static final int user_dict_settings_add_dialog_less_options=0x7f0b0670;
        /**  User dictionary settings. Text on the dialog button to pop more options for adding a word. [CHAR LIMIT=16] 
         */
        public static final int user_dict_settings_add_dialog_more_options=0x7f0b066f;
        /**  User dictionary settings. The title of the dialog to add a new word to the user dictionary. [CHAR LIMIT=25] 
         */
        public static final int user_dict_settings_add_dialog_title=0x7f0b066d;
        /**  User dictionary settings. Label to put before the language field. [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_locale_option_name=0x7f0b0674;
        /**  User dictionary settings. The title of the menu item to add a new word to the user dictionary. 
         */
        public static final int user_dict_settings_add_menu_title=0x7f0b066c;
        /**  User dictionary settings. The title of the screen to add/edit a new word to the user dictionary; it describes the phrase that will be added to the user dictionary. [CHAR LIMIT=25] 
         */
        public static final int user_dict_settings_add_screen_title=0x7f0b066e;
        /**  User dictionary settings. Hint for the text field to type the optional shortcut to add to the user dictionary. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_add_shortcut_hint=0x7f0b0676;
        /**  User dictionary settings. Label to put before the shortcut field (once a shortcut is registered, the user can type the shortcut and get the word it points to in the suggestions). [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_shortcut_option_name=0x7f0b0673;
        /**  User dictionary settings. Hint for the text field to type the word to add to the user dictionary. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_add_word_hint=0x7f0b0675;
        /**  User dictionary settings. Label to put before the word field (that's the word that will actually be added to the user dictionary when OK is pressed). [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_word_option_name=0x7f0b0672;
        /**  User dictionary settings. The list item to choose to insert a word into the user dictionary for all languages 
         */
        public static final int user_dict_settings_all_languages=0x7f0b067b;
        /**  User dictionary settings. The title of the context menu item to delete the current word 
         */
        public static final int user_dict_settings_context_menu_delete_title=0x7f0b0679;
        /**  User dictionary settings. The title of the context menu item to edit the current word 
         */
        public static final int user_dict_settings_context_menu_edit_title=0x7f0b0678;
        /**  User dictionary settings. The title of the dialog to edit an existing word in the user dictionary. 
         */
        public static final int user_dict_settings_edit_dialog_title=0x7f0b0677;
        /**  User dictionary settings. The text to show when there are no user-defined words in the dictionary  [CHAR LIMIT=200] 
         */
        public static final int user_dict_settings_empty_text=0x7f0b067a;
        /**  User dictionary settings. The text to show for the option that shows the entire list of supported locales to choose one [CHAR LIMIT=30] 
         */
        public static final int user_dict_settings_more_languages=0x7f0b067c;
        /**  User dictionary settings.  The summary of the list item to go into the Personal dictionary settings screen. 
         */
        public static final int user_dict_settings_summary=0x7f0b066b;
        /**  User dictionary settings. The title of the list item to go into the Personal dictionary settings screen. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_title=0x7f0b066a;
        /**  Title of preference to enable calling[CHAR LIMIT=40] 
         */
        public static final int user_enable_calling=0x7f0b09be;
        /**  Message for confirmation of turning on calls and SMS [CHAR LIMIT=none] 
         */
        public static final int user_enable_calling_and_sms_confirm_message=0x7f0b09c4;
        /**  Title for confirmation of turning on calls and SMS [CHAR LIMIT=45] 
         */
        public static final int user_enable_calling_and_sms_confirm_title=0x7f0b09c3;
        /**  Message for confirmation of turning on calls [CHAR LIMIT=none] 
         */
        public static final int user_enable_calling_confirm_message=0x7f0b09c2;
        /**  Title for confirmation of turning on calls [CHAR LIMIT=40] 
         */
        public static final int user_enable_calling_confirm_title=0x7f0b09c1;
        /**  Title of preference to enable calling and SMS [CHAR LIMIT=45] 
         */
        public static final int user_enable_calling_sms=0x7f0b09bf;
        /**  Message to user to confirm exiting guest. [CHAR LIMIT=none] 
         */
        public static final int user_exit_guest_confirm_message=0x7f0b09bc;
        /**  Title of dialog to user to confirm exiting guest. [CHAR LIMIT=50] 
         */
        public static final int user_exit_guest_confirm_title=0x7f0b09bb;
        /**  Label for button in confirmation dialog when exiting guest session [CHAR LIMIT=35] 
         */
        public static final int user_exit_guest_dialog_remove=0x7f0b09bd;
        /**  Label for item to exit guest mode [CHAR LIMIT=35] 
         */
        public static final int user_exit_guest_title=0x7f0b09ba;
        /**  Title for Guest user [CHAR LIMIT=35] 
         */
        public static final int user_guest=0x7f0b09b9;
        /**  An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50] 
         */
        public static final int user_image_choose_photo=0x7f0b0a0d;
        /**  Accessibility message for the photo selector which is a button/popup with the current photo [CHAR LIMIT=50] 
         */
        public static final int user_image_photo_selector=0x7f0b0a0e;
        /**  An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50] 
         */
        public static final int user_image_take_photo=0x7f0b0a0c;
        /**  Text shown for title of user info setting [CHAR LIMIT=20]
         */
        public static final int user_info_settings_title=0x7f0b0259;
        /**  User settings header for list of users and profiles [CHAR LIMIT=40] 
         */
        public static final int user_list_title=0x7f0b098e;
        /**  User settings warning that restricted profile needs a screen lock [CHAR LIMIT=NONE] 
         */
        public static final int user_need_lock_message=0x7f0b0992;
        /**  User details new restricted profile name [CHAR LIMIT=30] 
         */
        public static final int user_new_profile_name=0x7f0b09ad;
        /**  User details new user name [CHAR LIMIT=30] 
         */
        public static final int user_new_user_name=0x7f0b09ac;
        /**  Title for the preference to enter the nickname of the userto display in the user switcher [CHAR LIMIT=25]
         */
        public static final int user_nickname=0x7f0b0999;
        /**  User information string to represent the owner of the device [CHAR LIMIT=25] 
         */
        public static final int user_owner=0x7f0b0997;
        /**  User picture title [CHAR LIMIT=30] 
         */
        public static final int user_picture_title=0x7f0b09e6;
        /**  User profile removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_profile_confirm_remove_message=0x7f0b09b5;
        /**  Profile removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int user_profile_confirm_remove_title=0x7f0b09b0;
        /**  Title of preference to remove the user [CHAR LIMIT=35] 
         */
        public static final int user_remove_user=0x7f0b09c0;
        /**  User details remove user menu [CHAR LIMIT=20] 
         */
        public static final int user_remove_user_menu=0x7f0b09aa;
        /**  User limits screen, user name rename text [CHAR LIMIT=15] 
         */
        public static final int user_rename=0x7f0b09fb;
        /**  Summary for app entries that are controlled by another entry [CHAR LIMIT=none] 
         */
        public static final int user_restrictions_controlled_by=0x7f0b09fd;
        /**  User app limits screen title [CHAR LIMIT=35] 
         */
        public static final int user_restrictions_title=0x7f0b09fa;
        /**  User settings dialog button to set screen lock [CHAR LIMIT=25] 
         */
        public static final int user_set_lock_button=0x7f0b0993;
        /**  User settings screen title [CHAR LIMIT=25] 
         */
        public static final int user_settings_title=0x7f0b098d;
        /**  Button text to setup the new user later [CHAR LIMIT=25] 
         */
        public static final int user_setup_button_setup_later=0x7f0b09a7;
        /**  Button text to setup the new user now [CHAR LIMIT=25] 
         */
        public static final int user_setup_button_setup_now=0x7f0b09a6;
        /**  Message in dialog to setup a new user after creation [CHAR LIMIT=none] 
         */
        public static final int user_setup_dialog_message=0x7f0b09a4;
        /**  Title of dialog to setup a new user [CHAR LIMIT=30] 
         */
        public static final int user_setup_dialog_title=0x7f0b09a3;
        /**  Message in dialog to setup a new restricted profile after creation [CHAR LIMIT=none] 
         */
        public static final int user_setup_profile_dialog_message=0x7f0b09a5;
        /**  User summary to indicate that a work profile is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_managed_profile_not_set_up=0x7f0b0996;
        /**  User summary to indicate that user is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_not_set_up=0x7f0b0994;
        /**  User summary to indicate that restricted profile is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_restricted_not_set_up=0x7f0b0995;
        /**  User settings summary for a restricted profile [CHAR LIMIT=50] 
         */
        public static final int user_summary_restricted_profile=0x7f0b0991;
        /**  User settings title for current user entry "You" user. [CHAR LIMIT=30] 
         */
        public static final int user_you=0x7f0b0998;
        /**  Summary of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=NONE] 
         */
        public static final int verify_apps_over_usb_summary=0x7f0b06c1;
        /**  Title of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=32] 
         */
        public static final int verify_apps_over_usb_title=0x7f0b06c0;
        /**  Manage applications, version string displayed in app snippet 
         */
        public static final int version_text=0x7f0b0608;
        /**  Sound settings screen, setting option name checkbox 
         */
        public static final int vibrate_in_silent_title=0x7f0b03e1;
        /**  On Language & input settings screen, setting title.  Setting to redirect vibration to input devices. [CHAR LIMIT=35] 
         */
        public static final int vibrate_input_devices=0x7f0b0663;
        /**  On Language & input settings screen, setting summary.  Setting to redirect vibration to input devices. [CHAR LIMIT=100] 
         */
        public static final int vibrate_input_devices_summary=0x7f0b0664;
        /**  Sound & notification > Other sounds: Title for the option enabling haptic feedback on touch. [CHAR LIMIT=30] 
         */
        public static final int vibrate_on_touch_title=0x7f0b0a87;
        public static final int vibrate_title=0x7f0b00c6;
        /**  Sound & notification > Sound section: Title for the option managing whether or not to vibrate when ringing. [CHAR LIMIT=30] 
         */
        public static final int vibrate_when_ringing_title=0x7f0b0a76;
        public static final int video_call_summary=0x7f0b00c2;
        public static final int video_call_title=0x7f0b00c1;
        public static final int voice_call_summary=0x7f0b00c0;
        public static final int voice_call_title=0x7f0b00bf;
        /**  Title for the 'voice input' category of voice input/output settings 
         */
        public static final int voice_category=0x7f0b07d7;
        /**  Title of setting on main settings screen. This item will take the user to the screen to tweak settings related to speech functionality 
         */
        public static final int voice_input_output_settings=0x7f0b07d3;
        /**  Main voice input/output settings screen title 
         */
        public static final int voice_input_output_settings_title=0x7f0b07d4;
        /**  [CHAR_LIMIT=NONE] Name of the settings item to open the voice input settings. 
         */
        public static final int voice_input_settings=0x7f0b07d8;
        /**  [CHAR_LIMIT=NONE] Title of the screen of the voice input settings 
         */
        public static final int voice_input_settings_title=0x7f0b07d9;
        /**  [CHAR_LIMIT=NONE] Warning message about security implications of enabling a
         voice interaction service, displayed as a dialog
         message when the user selects to enable a service. 
         */
        public static final int voice_interaction_security_warning=0x7f0b07dd;
        /**  [CHAR LIMIT=NONE] The summary text for the voice service preference that is
         a full voice interaction service.  This is something that provides interactive
         voice control of applications; for example you can tell it commands to have it
         launch and let you interact with applications through your voice. 
         */
        public static final int voice_interactor_preference_summary=0x7f0b07db;
        /**  [CHAR LIMIT=NONE] The summary text for the voice service preference that is
         a simple voice recognition service.  This is something that only provides simple
         speech to text conversions that applications can use when they want to allow you
         to provide text to them through your voice (instead of with a keyboard). 
         */
        public static final int voice_recognizer_preference_summary=0x7f0b07dc;
        /**  Title of voice search settings list item within voice input/output settings 
         */
        public static final int voice_search_settings_title=0x7f0b07d5;
        /**  [CHAR LIMIT=50] The text for the settings section in which users select
         a voice interaction or recognition service to use. 
         */
        public static final int voice_service_preference_section_title=0x7f0b07da;
        /** MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
MTK Security Settings end 
 Voice UI start 
         */
        public static final int voice_ui_title=0x7f0b0139;
        public static final int voice_unlock_backup_info_summary=0x7f0b013b;
        /**  VoLTE provisioning flag off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int volte_provisioned_flag_off=0x7f0b0164;
        /**  VoLTE provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int volte_provisioned_flag_on=0x7f0b0163;
        /**  Volume description for alarm volume 
         */
        public static final int volume_alarm_description=0x7f0b03f4;
        /**  Image description for alarm volume mute button. 
         */
        public static final int volume_alarm_mute=0x7f0b03f8;
        /**  Volume description for media volume 
         */
        public static final int volume_media_description=0x7f0b03f1;
        /**  Image description for media volume mute button. 
         */
        public static final int volume_media_mute=0x7f0b03f6;
        /**  Volume description for notification volume 
         */
        public static final int volume_notification_description=0x7f0b03f3;
        /**  Image description for notification volume mute button. 
         */
        public static final int volume_notification_mute=0x7f0b03f7;
        /**  Volume description for ringtone and notification volume 
         */
        public static final int volume_ring_description=0x7f0b03f2;
        /**  Image description for ringer volume mute button. 
         */
        public static final int volume_ring_mute=0x7f0b03f5;
        /**  Button label to cancel changing a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_cancel=0x7f0b0961;
        /**  Button label to connect to a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_connect=0x7f0b0964;
        /**  Dialog title to connect to a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_connect_to=0x7f0b0967;
        /**  Preference title to create a new VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_create=0x7f0b096c;
        /**  Button label to disconnect from a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_disconnect=0x7f0b0969;
        /**  Dialog message body to disconnect from a VPN profile. 
         */
        public static final int vpn_disconnect_confirm=0x7f0b0968;
        /**  Input label for the DNS servers of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_dns_servers=0x7f0b0959;
        /**  Button label to finish editing a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_done=0x7f0b0962;
        /**  Dialog title to edit a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_edit=0x7f0b0965;
        /**  Button label to forget a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_forget=0x7f0b0966;
        /**  Selection label for the IPSec CA certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_ca_cert=0x7f0b0955;
        /**  Input label for the IPSec identifier of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_identifier=0x7f0b0952;
        /**  Input label for the IPSec pre-shared key of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_secret=0x7f0b0953;
        /**  Selection label for the IPSec server certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_server_cert=0x7f0b0956;
        /**  Selection label for the IPSec user certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_user_cert=0x7f0b0954;
        /**  Input label for the L2TP secret of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_l2tp_secret=0x7f0b0951;
        /**  Error indicating that the selected VPN doesn't meet requirements. [CHAR LIMIT=NONE] 
         */
        public static final int vpn_lockdown_config_error=0x7f0b0972;
        /**  List item indicating that no always-on VPN is selected. [CHAR LIMIT=64] 
         */
        public static final int vpn_lockdown_none=0x7f0b0971;
        /**  Summary describing the always-on VPN feature. [CHAR LIMIT=NONE] 
         */
        public static final int vpn_lockdown_summary=0x7f0b0970;
        /**  Menu item to delete a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_delete=0x7f0b096e;
        /**  Menu item to edit a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_edit=0x7f0b096d;
        /**  Menu item to select always-on VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_lockdown=0x7f0b096f;
        /**  Toast message when a certificate is missing. [CHAR LIMIT=100] 
         */
        public static final int vpn_missing_cert=0x7f0b0974;
        /**  Checkbox label to enable PPP encryption for a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_mppe=0x7f0b0950;
        /**  Input label for the name of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_name=0x7f0b094d;
        /**  Option to not use a CA certificate to verify the VPN server. [CHAR LIMIT=40] 
         */
        public static final int vpn_no_ca_cert=0x7f0b095f;
        /**  Toast message when there is no network connection to start VPN. [CHAR LIMIT=100] 
         */
        public static final int vpn_no_network=0x7f0b0973;
        /**  Option to use the server certificate received from the VPN server. [CHAR LIMIT=40] 
         */
        public static final int vpn_no_server_cert=0x7f0b0960;
        /**  Hint for not using an optional feature in a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_not_used=0x7f0b095e;
        /**  Input label for the password of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_password=0x7f0b095c;
        /**  Input label for the forwarding routes of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_routes=0x7f0b095a;
        /**  Button label to save a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_save=0x7f0b0963;
        /**  Checkbox label to save the username and the password in a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_save_login=0x7f0b095d;
        /**  Input label for the DNS search domains of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_search_domains=0x7f0b0958;
        /**  Input label for the server address of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_server=0x7f0b094f;
        /**  Error message for users that aren't allowed to modify VPN settings [CHAR LIMIT=none] 
         */
        public static final int vpn_settings_not_available=0x7f0b0694;
        /**  Title of preference to enter the VPN settings activity 
         */
        public static final int vpn_settings_title=0x7f0b081f;
        /**  Checkbox label to show advanced options of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_show_options=0x7f0b0957;
        /**  Preference title for VPN settings. [CHAR LIMIT=40] 
         */
        public static final int vpn_title=0x7f0b096b;
        /**  Input label for the type of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_type=0x7f0b094e;
        /**  Input label for the username of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_username=0x7f0b095b;
        /**  Field label to show the version number for a VPN app. [CHAR LIMIT=40] 
         */
        public static final int vpn_version=0x7f0b096a;
        /**  UI debug setting: wait for debugger to attach to debugging process? [CHAR LIMIT=50] 
         */
        public static final int wait_for_debugger=0x7f0b08c5;
        /**  UI debug setting: wait for debugger to attach to debugging process summary [CHAR LIMIT=500] 
         */
        public static final int wait_for_debugger_summary=0x7f0b08c6;
        /**  About phone settings screen, setting option name to see wallpapers attributions 
         */
        public static final int wallpaper_attributions=0x7f0b057a;
        /**  About phone settings screen, setting option name to see wallpapers attributions values 
         */
        public static final int wallpaper_attributions_values=0x7f0b057b;
        /**  Wallpaper settings fragment title [CHAR LIMIT=30] 
         */
        public static final int wallpaper_settings_fragment_title=0x7f0b0420;
        /**  Wallpaper settings title [CHAR LIMIT=30] 
         */
        public static final int wallpaper_settings_title=0x7f0b041f;
        public static final int wapi_as_certificate=0x7f0b005a;
        public static final int wapi_user_certificate=0x7f0b0059;
        /**  About phone settings screen, setting option name to see licensing info for WebView component. [CHAR LIMIT=35] 
         */
        public static final int webview_license_title=0x7f0b0579;
        /**  MTK Wifi wps EM end[SKIP COMMENT] 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
 MTK Wi-Fi hotspot client end 
 MTK WFD start 
         */
        public static final int wfd_change_resolution_menu_title=0x7f0b0093;
        public static final int wfd_device_category=0x7f0b0095;
        public static final int wfd_sink_disconnecting=0x7f0b0098;
        public static final int wfd_sink_guide_btn=0x7f0b0099;
        public static final int wfd_sink_guide_content=0x7f0b009b;
        public static final int wfd_sink_guide_title=0x7f0b009a;
        public static final int wfd_sink_summary=0x7f0b0094;
        public static final int wfd_sink_toast_disconnect=0x7f0b0097;
        public static final int wfd_sink_toast_enjoy=0x7f0b0096;
        /**  Title for the screen that lets the user choose a widget to add to the home screen
         (or other screens that can host widgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int widget_picker_title=0x7f0b06c9;
        /**  Header for the list of wifi networks
         */
        public static final int wifi_access_points=0x7f0b0358;
        /**  Action bar text message to manually add a wifi network [CHAR LIMIT=20]
         */
        public static final int wifi_add_network=0x7f0b0357;
        /**  Title of the screen to adjust IP settings 
 Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's current IP address. 
         */
        public static final int wifi_advanced_ip_address_title=0x7f0b03ad;
        /**  MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
 MTK Wi-Fi settings start 
         */
        public static final int wifi_advanced_ipv4_address_title=0x7f0b0055;
        public static final int wifi_advanced_ipv6_address_title=0x7f0b0056;
        /**  Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's MAC address. 
         */
        public static final int wifi_advanced_mac_address_title=0x7f0b03ac;
        /**  Wifi Advanced settings.  Used as a label under the shortcut icon that goes to Wifi advanced settings. [CHAR LIMIT=20] 
         */
        public static final int wifi_advanced_settings_label=0x7f0b03af;
        /**  Wi-Fi settings screen, advanced, settings section.  This is a header shown above advanced wifi settings. [CHAR LIMIT=30] 
         */
        public static final int wifi_advanced_titlebar=0x7f0b03a8;
        /**  Setting Checkbox title whether to enable WiFi Aggressive Handover. [CHAR LIMIT=40] 
         */
        public static final int wifi_aggressive_handover=0x7f0b06ad;
        /**  Setting Checkbox summary whether to enable Wifi aggressive handover [CHAR LIMIT=130] 
         */
        public static final int wifi_aggressive_handover_summary=0x7f0b06b3;
        /**  Wifi Alert message when tapping on a preference for a config locked down by device owner. [CHAR LIMIT=200] 
         */
        public static final int wifi_alert_lockdown_by_device_owner=0x7f0b032c;
        /**  Setting Checkbox title whether to enable WiFi Scanning in the presence of traffic. [CHAR LIMIT=80] 
         */
        public static final int wifi_allow_scan_with_traffic=0x7f0b06ae;
        /**  Setting Checkbox summary whether to always allow WiFi Roam Scans [CHAR LIMIT=130] 
         */
        public static final int wifi_allow_scan_with_traffic_summary=0x7f0b06b4;
        /**  Text warning about skipping Wi-Fi without a mobile connect (tablet) [CHAR LIMIT=NONE] 
 Text warning about skipping Wi-Fi without a mobile connect (device) [CHAR LIMIT=NONE] 
 Text warning about skipping Wi-Fi without a mobile connect (phone) [CHAR LIMIT=NONE] 
         */
        public static final int wifi_and_mobile_skipped_message=0x7f0b03a5;
        /**  Label for the RadioGroup to choose wifi ap band 
         */
        public static final int wifi_ap_band_config=0x7f0b0389;
        public static final int wifi_ap_bandwidth_KbyteShort=0x7f0b007d;
        public static final int wifi_ap_bandwidth_chart_summary=0x7f0b0077;
        public static final int wifi_ap_bandwidth_chart_title=0x7f0b0076;
        public static final int wifi_ap_bandwidth_enable=0x7f0b0075;
        public static final int wifi_ap_bandwidth_megabyteShort=0x7f0b007c;
        public static final int wifi_ap_bandwidth_title=0x7f0b0074;
        public static final int wifi_ap_blocked_title=0x7f0b006e;
        /**  Label for the radio button to choose wifi ap 2.4 GHz band 
         */
        public static final int wifi_ap_choose_2G=0x7f0b038a;
        /**  Label for the radio button to choose wifi ap 5GHz band 
         */
        public static final int wifi_ap_choose_5G=0x7f0b038b;
        public static final int wifi_ap_client_block_title=0x7f0b006f;
        public static final int wifi_ap_client_details_title=0x7f0b0071;
        public static final int wifi_ap_client_ip_label=0x7f0b0073;
        public static final int wifi_ap_client_mac_label=0x7f0b0072;
        public static final int wifi_ap_client_unblock_title=0x7f0b0070;
        public static final int wifi_ap_connected_title=0x7f0b006d;
        public static final int wifi_ap_max_connection_title=0x7f0b006c;
        public static final int wifi_ap_no_blocked=0x7f0b007f;
        public static final int wifi_ap_no_connected=0x7f0b007e;
        public static final int wifi_ap_reset_OOB=0x7f0b006b;
        public static final int wifi_ap_reset_OOB_title=0x7f0b006a;
        public static final int wifi_ap_time_duration=0x7f0b007a;
        public static final int wifi_ap_title=0x7f0b0079;
        public static final int wifi_ap_total_data=0x7f0b007b;
        public static final int wifi_ap_wps_dialog_title=0x7f0b0067;
        public static final int wifi_ap_wps_mode_title=0x7f0b0068;
        public static final int wifi_ap_wps_pin_title=0x7f0b0069;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_api_test=0x7f0b0bef;
        /**  Wifi Assistant title.  [CHAR LIMIT=40] 
         */
        public static final int wifi_assistant_title=0x7f0b031c;
        /**  Checkbox summary for option to connect to open Wi-Fi automatically  [CHAR LIMIT=100] 
         */
        public static final int wifi_automatically_connect_summary=0x7f0b034a;
        /**  Checkbox title for option to connect to open Wi-Fi automatically [CHAR LIMIT=40] 
         */
        public static final int wifi_automatically_connect_title=0x7f0b0349;
        /**  Checkbox summary for option to toggle poor network detection [CHAR LIMIT=60] 
         */
        public static final int wifi_avoid_poor_network_detection_summary=0x7f0b0348;
        /**  Wifi 2.4GHz is used as an universal itendifier for 2.4GHz band 
         */
        public static final int wifi_band_24ghz=0x7f0b0329;
        /**  Wifi Internal 5GHz as an universal itendifier for 5GHz band 
         */
        public static final int wifi_band_5ghz=0x7f0b032a;
        /**  WFC mode dialog [CHAR LIMIT=30] 
         */
        public static final int wifi_calling_mode_dialog_title=0x7f0b03d8;
        /**  WFC mode [CHAR LIMIT=30] 
         */
        public static final int wifi_calling_mode_title=0x7f0b03d7;
        /**  Wi-Fi Calling settings. Text displayed when Wi-Fi Calling is off 
         */
        public static final int wifi_calling_off_explanation=0x7f0b03d9;
        /**  Wireless networks, item title to go into the WFC settings [CHAR LIMIT=30] 
         */
        public static final int wifi_calling_settings_title=0x7f0b03d6;
        /**  Button label to dismiss the dialog 
         */
        public static final int wifi_cancel=0x7f0b03a1;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_config_info=0x7f0b0c03;
        public static final int wifi_confirm_config=0x7f0b0089;
        /**  Button label to connect to a Wi-Fi network 
         */
        public static final int wifi_connect=0x7f0b039b;
        /**  Text alerting that Wi-Fi couldn't connect (tablet) [CHAR LIMIT=NONE] 
 Text alerting that Wi-Fi couldn't connect (device) [CHAR LIMIT=NONE] 
 Text alerting that Wi-Fi couldn't connect (phone) [CHAR LIMIT=NONE] 
         */
        public static final int wifi_connect_failed_message=0x7f0b03a6;
        /**  Summary for Connected wifi network without internet 
         */
        public static final int wifi_connected_no_internet=0x7f0b000f;
        /**  Status for networks disabled for unknown reason 
         */
        public static final int wifi_disabled_generic=0x7f0b0005;
        /**  Status for networked disabled from a DNS or DHCP failure 
         */
        public static final int wifi_disabled_network_failure=0x7f0b0006;
        /**  Status for networks disabled from authentication failure (wrong password
         or certificate). 
         */
        public static final int wifi_disabled_password_failure=0x7f0b0008;
        /**  Status for networked disabled from a wifi association failure 
         */
        public static final int wifi_disabled_wifi_failure=0x7f0b0007;
        /**  Wifi Display settings. The checkbox title for enabling autonomous GO during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_autonomous_go=0x7f0b0bde;
        /**  Setting Checkbox title whether to show options for wireless display certification 
         */
        public static final int wifi_display_certification=0x7f0b06ab;
        /**  Wifi Display settings. The sub heading for wireless display certification options. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_certification_heading=0x7f0b0bdb;
        /**  setting Checkbox summary whether to show options for wireless display certification  
         */
        public static final int wifi_display_certification_summary=0x7f0b06b1;
        /**  Wifi Display settings. Image description for device details button. This opens the screen to rename, unpair, etc. a single device. 
         */
        public static final int wifi_display_details=0x7f0b0324;
        /**  Wifi Display settings. The title of a menu item to enable wireless display [CHAR LIMIT=40] 
         */
        public static final int wifi_display_enable_menu_item=0x7f0b031e;
        /**  Wifi Display settings. The dropdown menu title for choosing listen channel during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_listen_channel=0x7f0b0be2;
        /**  Wifi Display settings. The checkbox title for enabling listen mode during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_listen_mode=0x7f0b0bdd;
        /**  Wifi Display settings. Text that appears when scanning for devices is finished and no nearby device was found [CHAR LIMIT=40]
         */
        public static final int wifi_display_no_devices_found=0x7f0b031f;
        /**  Wifi Display settings. The dropdown menu title for choosing operating channel during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_operating_channel=0x7f0b0be3;
        /**  Wifi Display settings. Options dialog.  The done button text. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_done=0x7f0b0327;
        /**  Wifi Display settings. Options dialog.  The forget button text. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_forget=0x7f0b0326;
        /**  Wifi Display settings. Options dialog.  The name label used when prompting the user to rename the display. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_name=0x7f0b0328;
        /**  Wifi Display settings. Options dialog.  The title of the dialog. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_options_title=0x7f0b0325;
        /**  Wifi Display settings. The button text for sending pause trigger during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_pause=0x7f0b0bdf;
        /**  Wifi Display settings. The button text for sending play (resume) trigger during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_resume=0x7f0b0be0;
        /**  Wifi Display settings. The section title for wireless display session info. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_session_info=0x7f0b0bdc;
        /**  Wifi Display settings. The title of the screen. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_settings_title=0x7f0b031d;
        /**  Wifi Display settings. The status summary for connected devices. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_connected=0x7f0b0321;
        /**  Wifi Display settings. The status summary for connecting devices. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_connecting=0x7f0b0320;
        /**  Wifi Display settings. The status summary for devices that's already in use. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_in_use=0x7f0b0322;
        /**  Wifi Display settings. The status summary for devices that's not available. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_not_available=0x7f0b0323;
        /**  Wifi Display settings. The dropdown menu title for choosing WPS configuration during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_wps_config=0x7f0b0be1;
        /**  Label for the DNS (first one) 
         */
        public static final int wifi_dns1=0x7f0b03b6;
        /**  Hint text for DNS 
         */
        public static final int wifi_dns1_hint=0x7f0b0be5;
        /**  Label for the DNS (second one)
         */
        public static final int wifi_dns2=0x7f0b03b7;
        /**  Hint text for DNS 
         */
        public static final int wifi_dns2_hint=0x7f0b0be6;
        /**  Button for going to the previous screen or step [CHAR LIMIT=20] 
         */
        public static final int wifi_dont_skip=0x7f0b03a3;
        /**  Label for the EAP anonymous identity of the network 
         */
        public static final int wifi_eap_anonymous=0x7f0b0386;
        /**  Label for the EAP CA certificate of the network 
         */
        public static final int wifi_eap_ca_cert=0x7f0b0383;
        /**  Label for the EAP identity of the network 
         */
        public static final int wifi_eap_identity=0x7f0b0385;
        /**  Label for the EAP method of the network 
         */
        public static final int wifi_eap_method=0x7f0b0381;
        /**  Label for the EAP user certificate of the network 
         */
        public static final int wifi_eap_user_cert=0x7f0b0384;
        /**  Wifi Settings. text displayed when user has restriction DISALLOW_CONFIG_WIFI [CHAR LIMIT=NONE]
         */
        public static final int wifi_empty_list_user_restricted=0x7f0b0366;
        /**  Wi-Fi settings. text displayed when Wi-Fi is off and network list is empty [CHAR LIMIT=50]
         */
        public static final int wifi_empty_list_wifi_off=0x7f0b0364;
        /**  Wi-Fi settings. text displayed when Wi-Fi is on and network list is empty [CHAR LIMIT=50]
         */
        public static final int wifi_empty_list_wifi_on=0x7f0b0365;
        /**  Summary text when Wi-Fi or bluetooth has error 
         */
        public static final int wifi_error=0x7f0b0341;
        /**  Toast message when Wi-Fi cannot scan for networks 
         */
        public static final int wifi_fail_to_scan=0x7f0b0002;
        /**  Failured notification for connect 
         */
        public static final int wifi_failed_connect_message=0x7f0b039c;
        /**  Failured notification for forget 
         */
        public static final int wifi_failed_forget_message=0x7f0b039e;
        /**  Failured notification for save 
         */
        public static final int wifi_failed_save_message=0x7f0b03a0;
        /**  Button label to delete a Wi-Fi network 
         */
        public static final int wifi_forget=0x7f0b039d;
        /**  Label for the frequency band of the connection 
         */
        public static final int wifi_frequency=0x7f0b037d;
        /**  Label for the gateway of the network 
         */
        public static final int wifi_gateway=0x7f0b03b8;
        /**  Hint text for the gateway 
         */
        public static final int wifi_gateway_hint=0x7f0b0be7;
        public static final int wifi_gprs_selector_title=0x7f0b0144;
        public static final int wifi_hex_password=0x7f0b005b;
        /**  Label for Wifi tether checkbox. Toggles Access Point on/off  [CHAR LIMIT=30] 
         */
        public static final int wifi_hotspot_checkbox_text=0x7f0b03cb;
        /**  Label for Wifi tether checkbox summary. Toggles Access Point on/off  [CHAR LIMIT=60] 
         */
        public static final int wifi_hotspot_checkbox_text_summary=0x7f0b03cc;
        /**  Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=30]
         */
        public static final int wifi_hotspot_configure_ap_text=0x7f0b03d2;
        /**  Summary Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=60] 
         */
        public static final int wifi_hotspot_configure_ap_text_summary=0x7f0b03d3;
        /**  Wifi settings button to connect in to a Hotspot. [CHAR LIMIT=50]
         */
        public static final int wifi_hotspot_connect=0x7f0b0398;
        /**  Dialog message to sign in to a Hotspot. [CHAR LIMIT=50]
         */
        public static final int wifi_hotspot_message=0x7f0b0397;
        /**  Dialog label to sign in to a Hotspot. [CHAR LIMIT=50]
         */
        public static final int wifi_hotspot_title=0x7f0b0396;
        /**  Toast message when Wi-Fi or bluetooth is disallowed in airplane mode 
         */
        public static final int wifi_in_airplane_mode=0x7f0b0343;
        /**  Preference title for option to install certificates 
         */
        public static final int wifi_install_credentials=0x7f0b034c;
        /**  Label for the IP address of the connection 
         */
        public static final int wifi_ip_address=0x7f0b037e;
        /**  Hint text for the IP address 
         */
        public static final int wifi_ip_address_hint=0x7f0b0be4;
        /**  Label for the spinner to show ip settings [CHAR LIMIT=25] 
         */
        public static final int wifi_ip_settings=0x7f0b038c;
        /**  Error message if the dns is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_dns=0x7f0b03b4;
        /**  Error message if the gateway is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_gateway=0x7f0b03b3;
        /**  Error message if the IP address is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_ip_address=0x7f0b03b2;
        /**  Error message if the network prefix length is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_network_prefix_length=0x7f0b03b5;
        /**  Menu ietm to cancel the IP settings 
         */
        public static final int wifi_ip_settings_menu_cancel=0x7f0b03b1;
        /**  Menu item to save the IP settings 
         */
        public static final int wifi_ip_settings_menu_save=0x7f0b03b0;
        public static final int wifi_ipv4_address=0x7f0b0057;
        public static final int wifi_ipv6_address=0x7f0b0058;
        /**  Checkbox summary for option to toggle suspend power optimizations [CHAR LIMIT=30] 
         */
        public static final int wifi_limit_optimizations_summary=0x7f0b0355;
        /**  Menu option to Wi-Fi advanced settings 
         */
        public static final int wifi_menu_advanced=0x7f0b035e;
        /**  Menu option to connect to a Wi-Fi network 
         */
        public static final int wifi_menu_connect=0x7f0b035f;
        /**  Menu option to delete a Wi-Fi network 
         */
        public static final int wifi_menu_forget=0x7f0b0361;
        /**  Menu option to modify a Wi-Fi network configuration 
         */
        public static final int wifi_menu_modify=0x7f0b0362;
        /**  Content description for menu button in Wifi setup. Not shown on the screen. [CHAR LIMIT=NONE] 
         */
        public static final int wifi_menu_more_options=0x7f0b035a;
        /**  Menu option to launch Wi-Fi Direct settings [CHAR LIMIT=20]
         */
        public static final int wifi_menu_p2p=0x7f0b035c;
        /**  Menu option to remember a temporary Wi-Fi network 
         */
        public static final int wifi_menu_remember=0x7f0b0360;
        /**  Menu option to scan Wi-Fi networks 
         */
        public static final int wifi_menu_scan=0x7f0b035d;
        /**  Menu option to do WPS Push Button [CHAR LIMIT=25]
         */
        public static final int wifi_menu_wps_pbc=0x7f0b0359;
        /**  Menu option to do WPS Pin Entry [CHAR LIMIT=25]
         */
        public static final int wifi_menu_wps_pin=0x7f0b035b;
        /**  Menu option to write a Wi-Fi configuration token to an NFC tag [CHAR_LIMIT=30]
         */
        public static final int wifi_menu_write_to_nfc=0x7f0b0363;
        /**  Wi-Fi settings. content description for more button [CHAR LIMIT=50]
         */
        public static final int wifi_more=0x7f0b0368;
        /**  Label for the network prefix of the network [CHAR LIMIT=25]
         */
        public static final int wifi_network_prefix_length=0x7f0b03b9;
        /**  Hint text for network prefix length 
         */
        public static final int wifi_network_prefix_length_hint=0x7f0b0be8;
        public static final int wifi_no_cert_for_wapi=0x7f0b005c;
        /**  Summary for the remembered network but no internet connection was detected. 
         */
        public static final int wifi_no_internet=0x7f0b000a;
        /**  Summary for the remembered network but currently not in range. 
         */
        public static final int wifi_not_in_range=0x7f0b0009;
        /**  Checkbox title for option to notify user when open networks are nearby 
         */
        public static final int wifi_notify_open_networks=0x7f0b0344;
        /**  Checkbox summary for option to notify user when open networks are nearby [CHAR LIMIT=60]
         */
        public static final int wifi_notify_open_networks_summary=0x7f0b0345;
        /**  Wifi on time 
         */
        public static final int wifi_on_time=0x7f0b075f;
        public static final int wifi_open_mode=0x7f0b008a;
        /**  Wi-Fi settings. title for setup other network button [CHAR LIMIT=35]
         */
        public static final int wifi_other_network=0x7f0b0367;
        public static final int wifi_p2p_auto_go=0x7f0b008f;
        public static final int wifi_p2p_auto_go_device=0x7f0b0091;
        /**  Message text for disconnection from one device
         */
        public static final int wifi_p2p_cancel_connect_message=0x7f0b03c8;
        /**  Title for cancel connect dialog 
         */
        public static final int wifi_p2p_cancel_connect_title=0x7f0b03c7;
        /**  Message text for remembered group deletion
         */
        public static final int wifi_p2p_delete_group_message=0x7f0b03c9;
        public static final int wifi_p2p_device_info=0x7f0b03bb;
        /**  Message text for disconnection from one device
         */
        public static final int wifi_p2p_disconnect_message=0x7f0b03c5;
        /**  Message text for disconnection from multiple devices
         */
        public static final int wifi_p2p_disconnect_multiple_message=0x7f0b03c6;
        /**  Title for disconnect dialog 
         */
        public static final int wifi_p2p_disconnect_title=0x7f0b03c4;
        /**  Toast text for a failed connection initiation 
         */
        public static final int wifi_p2p_failed_connect_message=0x7f0b03c2;
        /**  Message text for failure to rename 
         */
        public static final int wifi_p2p_failed_rename_message=0x7f0b03c3;
        /**  Menu option to Rename
         */
        public static final int wifi_p2p_menu_rename=0x7f0b03bf;
        /**  Menu option to discover peers
         */
        public static final int wifi_p2p_menu_search=0x7f0b03bd;
        /**  Menu option when discovery is in progress [CHAR LIMIT=25] 
         */
        public static final int wifi_p2p_menu_searching=0x7f0b03be;
        public static final int wifi_p2p_nfc=0x7f0b008c;
        public static final int wifi_p2p_oob=0x7f0b008e;
        /**  Title for available p2p devices 
         */
        public static final int wifi_p2p_peer_devices=0x7f0b03c0;
        public static final int wifi_p2p_persist_network=0x7f0b03bc;
        /**  Title for remembered p2p groups 
         */
        public static final int wifi_p2p_remembered_groups=0x7f0b03c1;
        /**  Wi-Fi p2p / Wi-Fi Direct settings 
 Used in the 1st-level settings screen to launch Wi-fi Direct settings [CHAR LIMIT=25] 
         */
        public static final int wifi_p2p_settings_title=0x7f0b03ba;
        /**  Label for the password of the secured network 
         */
        public static final int wifi_password=0x7f0b0387;
        public static final int wifi_pin_code_title=0x7f0b0088;
        /**  Checkbox title for option to toggle poor network detection 
         */
        public static final int wifi_poor_network_detection=0x7f0b0346;
        /**  Checkbox summary for option to toggle poor network detection 
         */
        public static final int wifi_poor_network_detection_summary=0x7f0b0347;
        /**  Used in the 1st-level settings screen as the turn-on summary 
         */
        public static final int wifi_quick_toggle_summary=0x7f0b0338;
        /**  Used in the 1st-level settings screen to turn on Wi-Fi 
         */
        public static final int wifi_quick_toggle_title=0x7f0b0337;
        /**  Summary for the remembered network. 
         */
        public static final int wifi_remembered=0x7f0b0004;
        /**  Summary text when wifi SoftAP started failed due to no legal usable channel allowed in this region by regulatory 
         */
        public static final int wifi_sap_no_channel_error=0x7f0b0342;
        /**  Button label to save a Wi-Fi network configuration 
         */
        public static final int wifi_save=0x7f0b039f;
        /**  Wifi saved access points.  Used as a label under the shortcut icon that goes to Wifi saved access points. [CHAR LIMIT=20] 
         */
        public static final int wifi_saved_access_points_label=0x7f0b03ae;
        /**  Wi-Fi settings screen, Saved networks, settings section.  This is a header shown above Saved networks wifi settings. [CHAR LIMIT=30] 
         */
        public static final int wifi_saved_access_points_titlebar=0x7f0b03a7;
        public static final int wifi_scan_always_confirm_allow=0x7f0b0394;
        public static final int wifi_scan_always_confirm_deny=0x7f0b0395;
        /**  Message informing the user how to turn off  [CHAR LIMIT=200] 
         */
        public static final int wifi_scan_always_turnoff_message=0x7f0b0393;
        public static final int wifi_scan_always_turnon_message=0x7f0b0392;
        /**  Wifi scan always mode checkbox text 
         */
        public static final int wifi_scan_notify_remember_choice=0x7f0b034e;
        /**  Message to describe "Wi-Fi scan always available feature" when Wi-Fi is off. The
      place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They mark a link to bring
      the user to "scanning settings" screen. 
         */
        public static final int wifi_scan_notify_text=0x7f0b034d;
        /**  Label for the security of the connection 
         */
        public static final int wifi_security=0x7f0b0379;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_eap=0x7f0b004c;
        /**  Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
         */
        public static final int wifi_security_none=0x7f0b0003;
        /**  Do not translate.  Concise terminology for Passpoint network 
         */
        public static final int wifi_security_passpoint=0x7f0b004d;
        /**  Do not translate.  Terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_psk_generic=0x7f0b004b;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_short_eap=0x7f0b0046;
        /**  Do not translate.  Concise terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_short_psk_generic=0x7f0b0045;
        /**  Do not translate.  Concise terminology for wifi with WEP security 
         */
        public static final int wifi_security_short_wep=0x7f0b0041;
        /**  Do not translate.  Concise terminology for wifi with WPA security 
         */
        public static final int wifi_security_short_wpa=0x7f0b0042;
        /**  Do not translate.  Concise terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_short_wpa2=0x7f0b0043;
        /**  Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
         */
        public static final int wifi_security_short_wpa_wpa2=0x7f0b0044;
        public static final int wifi_security_wapi_certificate=0x7f0b0001;
        public static final int wifi_security_wapi_psk=0x7f0b0000;
        /**  Do not translate.  Terminology for wifi with WEP security 
         */
        public static final int wifi_security_wep=0x7f0b0047;
        /**  Do not translate.  Terminology for wifi with WPA security 
         */
        public static final int wifi_security_wpa=0x7f0b0048;
        /**  Do not translate.  Terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_wpa2=0x7f0b0049;
        /**  Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
         */
        public static final int wifi_security_wpa_wpa2=0x7f0b004a;
        /**  Dialog title for option to select an app which connects to open Wi-Fi automatically [CHAR LIMIT=40] 
         */
        public static final int wifi_select_assistant_dialog_title=0x7f0b034b;
        /**  Used by Account creation for turning on Wi-Fi  [CHAR LIMIT=60] 
         */
        public static final int wifi_select_network=0x7f0b033e;
        /**  Wi-Fi settings screen, error message when the frequency band could not be set [CHAR LIMIT=50]. 
         */
        public static final int wifi_setting_frequency_band_error=0x7f0b03ab;
        /**  Wi-Fi settings screen, setting summary for setting the wifi frequency band [CHAR LIMIT=50]
         */
        public static final int wifi_setting_frequency_band_summary=0x7f0b03aa;
        /**  Wi-Fi settings screen, setting title for setting the band [CHAR LIMIT=50]
         */
        public static final int wifi_setting_frequency_band_title=0x7f0b03a9;
        /**  Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off? [CHAR LIMIT=30] 
         */
        public static final int wifi_setting_on_during_sleep_title=0x7f0b0350;
        /**  Generic error message when the sleep policy could not be set. 
         */
        public static final int wifi_setting_sleep_policy_error=0x7f0b0351;
        /**  Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off? 
         */
        public static final int wifi_setting_sleep_policy_title=0x7f0b034f;
        /**  Used in the 1st-level settings screen to go to the 2nd-level settings screen  [CHAR LIMIT=20]
         */
        public static final int wifi_settings=0x7f0b0339;
        /**  Title of the Wi-fi settings screen 
         */
        public static final int wifi_settings_category=0x7f0b033a;
        /**  Summary text of the Wi-fi settings screen 
         */
        public static final int wifi_settings_summary=0x7f0b033c;
        /**  Title of the Wi-fi settings entry in the left top level menu 
         */
        public static final int wifi_settings_title=0x7f0b033b;
        /**  Button message shown on the button adding manual setting.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_add_network=0x7f0b086c;
        /**  Button label to go back to previous screen. Used in SetupWizard for
      XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_back=0x7f0b0870;
        /**  Button label to dismiss the dialog.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_cancel=0x7f0b0875;
        /**  Button label to connect to a Wi-Fi network.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_connect=0x7f0b0872;
        /**  Message shown when the device is connected to a network [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_description_connected=0x7f0b0881;
        /**  Message shown when the device is connecting a network [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_description_connecting=0x7f0b0880;
        /**  Button label to show detailed dialog for a selected Wi-Fi settings.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=20] 
         */
        public static final int wifi_setup_detail=0x7f0b0871;
        /**  Message shown when users select EAP in Wi-Fi settings for SetupWizard,
         saying EAP can't be configured in SetupWizard flow.
         [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_eap_not_supported=0x7f0b087f;
        /**  Button label to delete a Wi-Fi network.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_forget=0x7f0b0873;
        /**  Button message shown on the button enabling users go the next step.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_next=0x7f0b086f;
        /**  Text message shown when Wifi is not connected.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_not_connected=0x7f0b086b;
        /**  Button message shown on the button refreshing a list of network.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_refresh_list=0x7f0b086d;
        /**  Button label to save a Wi-Fi network configuration.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_save=0x7f0b0874;
        /**  Button message shown on the button enabling users skip Wifi Setup.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_skip=0x7f0b086e;
        /**  The message shown above available networks when a user clicked one of available
         networks or created another profile and he/she is waiting for the connection
         is established.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_connecting=0x7f0b087c;
        /**  The message shown above available networks when a user clicked a network secured by
         EAP. We don't allow the user to connect it.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_eap_not_supported=0x7f0b087e;
        /**  Message shown above available networks when a user clicked one of available
         networks and the UI is prompting the user to edit the network configuration
         if needed. Used in Wifi Setup with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_edit_network=0x7f0b087a;
        /**  Message shown above available networks when a user clicked one of available
         networks and the UI is showing one possible existing network.
         Used in Wifi Setup. 
         */
        public static final int wifi_setup_status_existing_network=0x7f0b0878;
        /**  The message shown above available networks when a user clicked "Add network"
         button. Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_new_network=0x7f0b087b;
        /**  The message shown above available networks when connection is established,
         letting a user to proceed to the next step of the SetupWizard.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_proceed_to_next=0x7f0b087d;
        /**  The message shown above available networks when the device is scanning
         available networks [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_scanning=0x7f0b0876;
        /**  Message shown above available network when there's no connected network.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_status_select_network=0x7f0b0877;
        /**  Message shown above available networks when a user clicked one of available
         networks and the network doesn't require configuration (e.g. password)
         Used in Wifi Setup with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_unsecured_network=0x7f0b0879;
        /**  Wifi Setup For Setup Wizard with XL screen 
 Title shown in Wifi Setup Wizard with XL screen 
         */
        public static final int wifi_setup_title=0x7f0b0866;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         a user is adding a network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_add_network=0x7f0b086a;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         the device successfully connected to a network the user specified.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_connected_network=0x7f0b0869;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         the device is connecting a network the user specified.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_connecting_network=0x7f0b0868;
        /**  Title shown in Wifi Setup Wizard with XL screen when
         a user is configuring password for a network.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_editing_network=0x7f0b0867;
        /**  Used in the 1st-level settings screen to turn on Wi-Fi  [CHAR LIMIT=60] 
         */
        public static final int wifi_setup_wizard_title=0x7f0b033d;
        /**  Wi-Fi settings. wps menu title [CHAR LIMIT=25]
         */
        public static final int wifi_setup_wps=0x7f0b0369;
        /**  Label to show/hide advanced options [CHAR LIMIT=40] 
         */
        public static final int wifi_show_advanced=0x7f0b036a;
        /**  Label for the check box to show password 
         */
        public static final int wifi_show_password=0x7f0b0388;
        /**  Label for the signal strength of the connection 
         */
        public static final int wifi_signal=0x7f0b037a;
        /**  Button for skipping a step after having been warned of a potential concern [CHAR LIMIT=30] 
         */
        public static final int wifi_skip_anyway=0x7f0b03a2;
        /**  Text warning about skipping Wi-Fi with a mobile connect (tablet) [CHAR LIMIT=NONE]
 Text warning about skipping Wi-Fi with a mobile connect (device) [CHAR LIMIT=NONE]
 Text warning about skipping Wi-Fi with a mobile connect (phone) [CHAR LIMIT=NONE]
         */
        public static final int wifi_skipped_message=0x7f0b03a4;
        /**  Label for the link speed of the connection 
         */
        public static final int wifi_speed=0x7f0b037c;
        /**  Label for the SSID of the network 
         */
        public static final int wifi_ssid=0x7f0b0377;
        /**  Hint for a text field to enter the SSID of a hidden wifi network. [CHAR LIMIT=35] 
         */
        public static final int wifi_ssid_hint=0x7f0b0378;
        /**  Summary text when turning Wi-Fi or bluetooth on 
         */
        public static final int wifi_starting=0x7f0b033f;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_disabled=0x7f0b0bff;
        /**  wifi state values
 Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_disabling=0x7f0b0bfe;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_enabled=0x7f0b0c01;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_enabling=0x7f0b0c00;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int wifi_state_label=0x7f0b0bf2;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_unknown=0x7f0b0c02;
        /**  Label for the status of the connection 
         */
        public static final int wifi_status=0x7f0b037b;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_status_test=0x7f0b0bf0;
        /**  Summary text when turning Wi-Fi or bluetooth off 
         */
        public static final int wifi_stopping=0x7f0b0340;
        /**  Checkbox title for option to toggle suspend power optimizations [CHAR LIMIT=30] 
         */
        public static final int wifi_suspend_efficiency_title=0x7f0b0352;
        /**  Checkbox title for option to toggle suspend power optimizations 
         */
        public static final int wifi_suspend_optimizations=0x7f0b0353;
        /**  Checkbox summary for option to toggle suspend power optimizations 
         */
        public static final int wifi_suspend_optimizations_summary=0x7f0b0354;
        /**  Checkbox title. Should we switch to using cellular data if Wi-Fi is still connected but the Wi-Fi network we're connected to no longer has Internet access (e.g., due to an outage)? 
         */
        public static final int wifi_switch_away_when_unvalidated=0x7f0b0356;
        public static final int wifi_tether_auto_channel_text=0x7f0b005e;
        public static final int wifi_tether_auto_channel_width_text=0x7f0b005f;
        /**  MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
 MTK Wi-Fi settings end 
 MTK Wi-Fi hotspot client start 
         */
        public static final int wifi_tether_auto_disable_title=0x7f0b0061;
        /**  Wifi AP settings
 Label for Wifi tether checkbox. Toggles Access Point on/off 
         */
        public static final int wifi_tether_checkbox_text=0x7f0b03ca;
        /**  Used to open the ssid and security dialog for Wifi Access Point 
         */
        public static final int wifi_tether_configure_ap_text=0x7f0b03d1;
        /**  Default access point SSID used for tethering 
         */
        public static final int wifi_tether_configure_ssid_default=0x7f0b03d5;
        /**  Subtext on configuration preference to indicate SSID and security chosen 
         */
        public static final int wifi_tether_configure_subtext=0x7f0b03d4;
        /**  Subtext for wifi tether checkbox on success 
         */
        public static final int wifi_tether_enabled_subtext=0x7f0b03cf;
        /**  Subtext for wifi tether checkbox on failure 
         */
        public static final int wifi_tether_failed_subtext=0x7f0b03d0;
        public static final int wifi_tether_fix_channel_width_text=0x7f0b0060;
        public static final int wifi_tether_setting_title=0x7f0b0062;
        /**  Summary text when turning hotspot on 
         */
        public static final int wifi_tether_starting=0x7f0b03cd;
        /**  Summary text when turning hotspot off 
         */
        public static final int wifi_tether_stopping=0x7f0b03ce;
        public static final int wifi_tether_wps_connect_summary=0x7f0b0064;
        public static final int wifi_tether_wps_connect_title=0x7f0b0063;
        public static final int wifi_tether_wps_pin_error=0x7f0b0065;
        public static final int wifi_tethering_title=0x7f0b0066;
        /**  Hint for unchanged fields 
         */
        public static final int wifi_unchanged=0x7f0b038d;
        /**  Hint for unspecified fields 
         */
        public static final int wifi_unspecified=0x7f0b038e;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Button text on Wifi Status screen
         */
        public static final int wifi_update=0x7f0b0bf1;
        /**  Setting Checkbox title whether to enable WiFi Verbose Logging. [CHAR LIMIT=40] 
         */
        public static final int wifi_verbose_logging=0x7f0b06ac;
        /**  Setting Checkbox summary whether to enable Wifi verbose Logging [CHAR LIMIT=80] 
         */
        public static final int wifi_verbose_logging_summary=0x7f0b06b2;
        public static final int wifi_wps_add_device=0x7f0b008b;
        /**  Substring of status line when Wi-Fi Protected Setup (WPS) is available and
         string is listed first [CHAR LIMIT=20]
         */
        public static final int wifi_wps_available_first_item=0x7f0b038f;
        /**  Substring of wifi status when Wi-Fi Protected Setup (WPS) is available and
         string is listed after a wifi_secured_* string
         */
        public static final int wifi_wps_available_second_item=0x7f0b0390;
        /**  Text displayed when WPS succeeds [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_complete=0x7f0b036f;
        /**  Text displayed when Wi-Fi is connected through WPS [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_connected=0x7f0b0370;
        public static final int wifi_wps_em_ap_default=0x7f0b0087;
        public static final int wifi_wps_em_key=0x7f0b0086;
        public static final int wifi_wps_em_pin_config=0x7f0b0083;
        /**  MTK Wi-Fi hotspot client end 
 MTK Wifi wps EM start[SKIP COMMENT] 
         */
        public static final int wifi_wps_em_pin_setting=0x7f0b0080;
        public static final int wifi_wps_em_reg_pbc=0x7f0b0082;
        public static final int wifi_wps_em_reg_pin=0x7f0b0081;
        public static final int wifi_wps_em_security=0x7f0b0085;
        public static final int wifi_wps_em_ssid=0x7f0b0084;
        public static final int wifi_wps_fail_error=0x7f0b0078;
        /**  Text displayed when WPS fails due to authentication issues [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_auth=0x7f0b0375;
        /**  Text displayed when WPS fails to start [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_generic=0x7f0b0372;
        /**  Text displayed when WPS fails due to another session [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_overlap=0x7f0b0376;
        /**  Text displayed when WPS fails to TKIP [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_tkip=0x7f0b0374;
        /**  Text displayed when WPS fails due to WEP [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_wep=0x7f0b0373;
        /**  Text displayed when WPS setup is in progress [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_in_progress=0x7f0b0371;
        /**  Message in WriteWifiConfigToNfcDialog when prompted to enter network password [CHAR_LIMIT=40] 
         */
        public static final int wifi_wps_nfc_enter_password=0x7f0b0391;
        /**  Message in WPS dialog for PBC after start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_onstart_pbc=0x7f0b036d;
        /**  Message in WPS dialog for PIN after start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_onstart_pin=0x7f0b036e;
        /**  Message in WPS dialog at start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_setup_msg=0x7f0b036c;
        /**  Title for the WPS setup dialog [CHAR LIMIT=50] 
         */
        public static final int wifi_wps_setup_title=0x7f0b036b;
        public static final int wifi_write_p2p_tag=0x7f0b008d;
        public static final int wifi_write_wps_tag=0x7f0b0090;
        public static final int wimax_settings=0x7f0b08ae;
        /**  UI debug setting: scaling factor for window animations [CHAR LIMIT=25] 
         */
        public static final int window_animation_scale_title=0x7f0b08eb;
        /**  Wireless Settings screen title for things like Wi-Fi, bluetooth, airplane mode. 
         */
        public static final int wireless_networks_settings_title=0x7f0b0228;
        /**  Wizard back button label [CHAR LIMIT=25] 
         */
        public static final int wizard_back=0x7f0b0a09;
        /**  Wizard next button label [CHAR LIMIT=25] 
         */
        public static final int wizard_finish=0x7f0b0a0b;
        /**  Wizard next button label [CHAR LIMIT=25] 
         */
        public static final int wizard_next=0x7f0b0a0a;
        /**  Work profile removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int work_profile_confirm_remove_message=0x7f0b09b4;
        /**  Work profile removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int work_profile_confirm_remove_title=0x7f0b09b1;
        /**  Warning message about disabling usage access on profile owner [CHAR LIMIT=NONE] 
         */
        public static final int work_profile_usage_access_warning=0x7f0b0b88;
        /**  Work SIM title.  [CHAR LIMIT=50] 
         */
        public static final int work_sim_title=0x7f0b09f9;
        /**  Write Settings settings 
 Settings title in main settings screen for WRITE_SETTINGS [CHAR LIMIT=30] 
         */
        public static final int write_settings=0x7f0b0b98;
        /**  Description of the write system settings [CHAR LIMIT=NONE] 
         */
        public static final int write_settings_description=0x7f0b0ba0;
        /**  Summary of app not allowed to write system settings [CHAR LIMIT=45] 
         */
        public static final int write_settings_off=0x7f0b0ba2;
        /**  Summary of app allowed to write system settings [CHAR LIMIT=45] 
         */
        public static final int write_settings_on=0x7f0b0ba1;
        /**  Link to the apps page for WRITE_SETTINGS settings [CHAR LIMIT=52] 
         */
        public static final int write_settings_preference=0x7f0b0b9e;
        /**  Summary of number of apps currently can draw overlays [CHAR LIMIT=60] 
         */
        public static final int write_settings_summary=0x7f0b0b9a;
        /**  Title for the apps that are allowed to write system settings [CHAR LIMIT=60] 
         */
        public static final int write_settings_title=0x7f0b0b9c;
        /**  Main settings screen item's title to go into the write system settings screen [CHAR LIMIT=30] 
         */
        public static final int write_system_settings=0x7f0b0b9d;
        /**  Text for button to confirm writing tag 
         */
        public static final int write_tag=0x7f0b0a62;
        /**  Instructions telling the user that they entered the wrong SIM PIN for the last time.
         Displayed in a dialog box.  [CHAR LIMIT=100] 
         */
        public static final int wrong_pin_code_pukked=0x7f0b044c;
        /**  Strings for Dialog yes button 
         */
        public static final int yes=0x7f0b014d;
        /**  Sound & notification > Do Not Disturb access > Text to display when the list is empty. [CHAR LIMIT=NONE] 
         */
        public static final int zen_access_empty_text=0x7f0b0a94;
        /**  Zen mode access settings - summary for warning dialog when enabling access [CHAR LIMIT=NONE] 
         */
        public static final int zen_access_warning_dialog_summary=0x7f0b0b81;
        /**  Zen mode access settings - title for warning dialog when enabling access [CHAR LIMIT=NONE] 
         */
        public static final int zen_access_warning_dialog_title=0x7f0b0b80;
        /**  [CHAR LIMIT=NONE] Zen mode settings: Event rule toast hint when enabled 
         */
        public static final int zen_event_rule_enabled_toast=0x7f0b0aaf;
        /**  [CHAR LIMIT=40] Zen mode settings: Event rule type name 
         */
        public static final int zen_event_rule_type_name=0x7f0b0aae;
        /**  [CHAR LIMIT=40] Zen mode settings: Add rule menu option name 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_add_rule=0x7f0b0aa5;
        /**  [CHAR LIMIT=50] Zen mode settings: Alarms option 
         */
        public static final int zen_mode_alarms=0x7f0b0ac8;
        /**  Sound & notification > Sound section: Title for the zen mode automation option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int zen_mode_automation_settings_title=0x7f0b0a6f;
        /**  [CHAR LIMIT=20] Zen mode settings: Calls option 
         */
        public static final int zen_mode_calls=0x7f0b0ac1;
        /**  [CHAR LIMIT=40] Zen mode settings: Configure external rule 
         */
        public static final int zen_mode_configure_rule=0x7f0b0aab;
        /**  [CHAR LIMIT=40] Zen mode settings: Delete rule menu option name 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_delete_rule=0x7f0b0aa6;
        /**  [CHAR LIMIT=40] Zen mode settings: Delete rule dialog button caption 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_delete_rule_button=0x7f0b0aa8;
        /**  [CHAR LIMIT=40] Zen mode settings: Delete rule dialog confirmation message 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_delete_rule_confirmation=0x7f0b0aa7;
        /**  [CHAR LIMIT=20] Zen mode settings: End time option 
         */
        public static final int zen_mode_end_time=0x7f0b0ad3;
        /**  [CHAR LIMIT=60] Zen mode settings: End time option: Summary text value format when end time = next day 
         */
        public static final int zen_mode_end_time_next_day_summary_format=0x7f0b0ad4;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option title 
         */
        public static final int zen_mode_event_rule_calendar=0x7f0b0ab0;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option value for any calendar 
         */
        public static final int zen_mode_event_rule_calendar_any=0x7f0b0ab4;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option title 
         */
        public static final int zen_mode_event_rule_reply=0x7f0b0ab5;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes, Maybe, or Not replied 
         */
        public static final int zen_mode_event_rule_reply_any_except_no=0x7f0b0ab6;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes 
         */
        public static final int zen_mode_event_rule_reply_yes=0x7f0b0ab8;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes or Maybe 
         */
        public static final int zen_mode_event_rule_reply_yes_or_maybe=0x7f0b0ab7;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: any calendar 
         */
        public static final int zen_mode_event_rule_summary_any_calendar=0x7f0b0ab2;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: During events for 
         */
        public static final int zen_mode_event_rule_summary_calendar_template=0x7f0b0ab1;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: Where reply is 
         */
        public static final int zen_mode_event_rule_summary_reply_template=0x7f0b0ab3;
        /**  [CHAR LIMIT=50] Zen mode settings: Events option 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_events=0x7f0b0aca;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From anyone 
         */
        public static final int zen_mode_from_anyone=0x7f0b0ac4;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From contacts only 
         */
        public static final int zen_mode_from_contacts=0x7f0b0ac5;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: None 
         */
        public static final int zen_mode_from_none=0x7f0b0ac7;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From starred contacts only 
         */
        public static final int zen_mode_from_starred=0x7f0b0ac6;
        /**  [CHAR LIMIT=20] Zen mode settings: Messages option 
         */
        public static final int zen_mode_messages=0x7f0b0ac2;
        /**  Sound & notification > Sound section: Zen mode option: Alarms only [CHAR LIMIT=60] 
         */
        public static final int zen_mode_option_alarms=0x7f0b0a71;
        /**  Sound & notification > Sound section: Zen mode option: Important interruptions [CHAR LIMIT=60] 
         */
        public static final int zen_mode_option_important_interruptions=0x7f0b0a70;
        /**  Sound & notification > Sound section: Zen mode option: No interruptions [CHAR LIMIT=60] 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
         */
        public static final int zen_mode_option_no_interruptions=0x7f0b0a72;
        public static final int zen_mode_option_title_novoice=0x7f0b00da;
        /**  Sound & notification > Sound section: Title for the Priority interruptions option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int zen_mode_priority_settings_title=0x7f0b0a6e;
        /**  [CHAR LIMIT=50] Zen mode settings: Reminders option 
         */
        public static final int zen_mode_reminders=0x7f0b0ac9;
        /**  [CHAR LIMIT=50] Zen mode settings: Repeat callers option 
         */
        public static final int zen_mode_repeat_callers=0x7f0b0acc;
        /**  [CHAR LIMIT=200] Zen mode settings: Repeat callers option summary 
         */
        public static final int zen_mode_repeat_callers_summary=0x7f0b0acd;
        /**  [CHAR LIMIT=40] Zen mode settings: Rule name option and edit dialog title 
         */
        public static final int zen_mode_rule_name=0x7f0b0aa2;
        /**  [CHAR LIMIT=40] Zen mode settings: Rule name hint text 
         */
        public static final int zen_mode_rule_name_hint=0x7f0b0aa3;
        /**  [CHAR LIMIT=100] Zen mode settings: Warning text for invalid zen rule names 
         */
        public static final int zen_mode_rule_name_warning=0x7f0b0aa4;
        /**  [CHAR LIMIT=40] Zen mode settings: Text to display if rule isn't found 
         */
        public static final int zen_mode_rule_not_found_text=0x7f0b0ab9;
        /**  [CHAR LIMIT=40] Zen mode settings: Rule summary template (when enabled) 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
         */
        public static final int zen_mode_rule_summary_combination=0x7f0b0aba;
        /**  [CHAR LIMIT=40] Zen mode settings: External rule type 
         */
        public static final int zen_mode_rule_type=0x7f0b0aa9;
        /**  [CHAR LIMIT=40] Zen mode settings: External rule type name if unknown 
         */
        public static final int zen_mode_rule_type_unknown=0x7f0b0aaa;
        /**  [CHAR LIMIT=40] Zen mode settings: Time-based rule days option title 
 Modify:BUG_id DELSLMY-1397 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1397 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1397 wanlgin 20160407 
         */
        public static final int zen_mode_schedule_rule_days=0x7f0b0abb;
        /**  [CHAR LIMIT=40] Zen mode settings: Downtime days option value, all days set 
         */
        public static final int zen_mode_schedule_rule_days_all=0x7f0b0abd;
        /**  [CHAR LIMIT=40] Zen mode settings: Downtime days option value, no days set 
 Modify:BUG_id DELSLMY-1397 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1397 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1397 wanlgin 20160407 
         */
        public static final int zen_mode_schedule_rule_days_none=0x7f0b0abc;
        /**  [CHAR LIMIT=50] Zen mode settings: Selected callers summary 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_selected_callers=0x7f0b0acb;
        /**  [CHAR LIMIT=50] Zen mode settings: Selected messages summary 
         */
        public static final int zen_mode_selected_messages=0x7f0b0ac3;
        /**  Sound & notification > Sound section: Title for the Interruptions option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int zen_mode_settings_title=0x7f0b0c2f;
        /**  [CHAR LIMIT=20] Zen mode settings: Start time option 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_start_time=0x7f0b0ad2;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only until a specific time. 
         */
        public static final int zen_mode_summary_alarms_only_by_time=0x7f0b0ad6;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only forever. 
         */
        public static final int zen_mode_summary_alarms_only_indefinite=0x7f0b0ad5;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: Turn on all notifications. 
         */
        public static final int zen_mode_summary_always=0x7f0b0ad7;
        /**  Sound & notification > Sound section: Zen mode combined summary + condition line [CHAR LIMIT=60] 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1398 wanlgin 20160407 
         */
        public static final int zen_mode_summary_combination=0x7f0b0a73;
        /**  [CHAR LIMIT=20] Zen mode settings: When option 
         */
        public static final int zen_mode_when=0x7f0b0ace;
        /**  [CHAR LIMIT=20] Zen mode settings: When option value: Every night 
         */
        public static final int zen_mode_when_every_night=0x7f0b0ad0;
        /**  [CHAR LIMIT=20] Zen mode settings: When option value: Never 
         */
        public static final int zen_mode_when_never=0x7f0b0acf;
        /**  [CHAR LIMIT=20] Zen mode settings: When option value: Weeknights 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
 Modify:BUG_id DELSLMY-1396 wanlgin 20160407 
         */
        public static final int zen_mode_when_weeknights=0x7f0b0ad1;
        /**  [CHAR LIMIT=NONE] Zen mode settings: Schedule rule toast hint when enabled 
         */
        public static final int zen_schedule_rule_enabled_toast=0x7f0b0aad;
        /**  [CHAR LIMIT=40] Zen mode settings: Schedule rule type name 
         */
        public static final int zen_schedule_rule_type_name=0x7f0b0aac;
        /**  Date & time setting screen setting check box title if the time zone should be determined automatically [CHAR LIMIT=30] 
         */
        public static final int zone_auto=0x7f0b023f;
        /**  Date & time setting screen setting option summary text when Automatic time zone check box is clear
        [CHAR LIMIT=100] 
         */
        public static final int zone_auto_summaryOff=0x7f0b0241;
        /**  Date & time setting screen setting option summary text when Automatic time zone check box is selected (that is, when date and time should be determined automatically)
        [CHAR LIMIT=100]  
         */
        public static final int zone_auto_summaryOn=0x7f0b0240;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_alphabetically=0x7f0b024a;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_by_timezone=0x7f0b024b;
    }
    public static final class style {
        /**  General styles 
         */
        public static final int Animation_SuwWindowAnimation=0x7f0d0002;
        public static final int ApnPreference=0x7f0d0043;
        public static final int AppListSwitchPreference=0x7f0d0044;
        public static final int Button_FingerprintButton=0x7f0d004e;
        public static final int ConfirmDeviceCredentialsAnimationStyle=0x7f0d003a;
        public static final int CryptKeeperBlankTheme=0x7f0d003c;
        public static final int FingerprintLayoutTheme=0x7f0d0051;
        public static final int KeyguardAppWidgetItem=0x7f0d0042;
        public static final int Preference=0x7f0d0024;
        public static final int PreferenceFragmentListSinglePane=0x7f0d0029;
        public static final int PreferenceFragmentStyle=0x7f0d002c;
        public static final int PreferenceHeaderListSinglePane=0x7f0d0028;
        public static final int PreferenceHeaderPanelSinglePane=0x7f0d0026;
        public static final int PreferencePanelSinglePane=0x7f0d0027;
        public static final int SecurityPreferenceButton=0x7f0d003e;
        public static final int SecurityPreferenceButtonContainer=0x7f0d003d;
        public static final int SettingsPreferenceHeaderList=0x7f0d002b;
        public static final int SettingsPreferenceHeaderPanel=0x7f0d002a;
        public static final int SetupWizardDisableAppStartingTheme=0x7f0d0058;
        public static final int SetupWizardFingerprintLayoutTheme=0x7f0d0052;
        public static final int SetupWizardStorageStyle=0x7f0d0056;
        public static final int SetupWizardTheme=0x7f0d0059;
        public static final int SetupWizardTheme_Light=0x7f0d005a;
        /**  Card layout (for tablets) 
         */
        public static final int SuwBaseCardTitle=0x7f0d0009;
        /**  Card layout (for tablets) 
         */
        public static final int SuwCardTitle=0x7f0d000a;
        public static final int SuwCheckBox=0x7f0d0007;
        public static final int SuwCheckBox_Multiline=0x7f0d0008;
        /**  Content styles 
         */
        public static final int SuwContentFrame=0x7f0d0003;
        public static final int SuwDescription=0x7f0d0004;
        /**  Header layout (for phones) 
         */
        public static final int SuwHeaderTitle=0x7f0d000b;
        /**  Navigation bar styles 
         */
        public static final int SuwNavBarButtonStyle=0x7f0d000f;
        /**  Navigation bar styles 
         */
        public static final int SuwNavBarTheme=0x7f0d000c;
        public static final int SuwNavBarThemeDark=0x7f0d0010;
        public static final int SuwNavBarThemeLight=0x7f0d0011;
        public static final int SuwRadioButton=0x7f0d0006;
        /**  General styles 
 These themes should only be used in platform builds because support libraries'
         FragmentActivity and ActionBarActivity expects the activity theme to inherit from
         Theme.AppCompat. 
         */
        public static final int SuwThemeMaterial=0x7f0d0000;
        public static final int SuwThemeMaterial_Light=0x7f0d0001;
        public static final int SyncSwitchPreference=0x7f0d0025;
        public static final int TallTitleBarTheme=0x7f0d0023;
        public static final int TextAppearance=0x7f0d001d;
        public static final int TextAppearance_CategoryTitle=0x7f0d0048;
        public static final int TextAppearance_ConfirmDeviceCredentialsErrorText=0x7f0d0053;
        public static final int TextAppearance_CryptKeeper_PasswordEntry=0x7f0d0022;
        public static final int TextAppearance_FingerprintErrorText=0x7f0d0050;
        public static final int TextAppearance_FingerprintLink=0x7f0d004f;
        public static final int TextAppearance_FingerprintMessage=0x7f0d004d;
        public static final int TextAppearance_Medium=0x7f0d0045;
        public static final int TextAppearance_PagerTabs=0x7f0d0041;
        public static final int TextAppearance_PasswordEntry=0x7f0d0021;
        public static final int TextAppearance_RecentsTitle=0x7f0d004b;
        public static final int TextAppearance_RemoveDialogContent=0x7f0d0055;
        public static final int TextAppearance_ResultTitle=0x7f0d004c;
        public static final int TextAppearance_SetupWizardDescription=0x7f0d002e;
        public static final int TextAppearance_Small=0x7f0d0046;
        public static final int TextAppearance_Small_SwitchBar=0x7f0d0054;
        /**  Card layout (for tablets) 
         */
        public static final int TextAppearance_SuwCardTitle=0x7f0d000e;
        /**  Content styles 
         */
        public static final int TextAppearance_SuwDescription=0x7f0d000d;
        public static final int TextAppearance_SuwDescription_Light=0x7f0d0005;
        public static final int TextAppearance_Switch=0x7f0d0047;
        public static final int TextAppearance_TileSubTitle=0x7f0d004a;
        public static final int TextAppearance_TileTitle=0x7f0d0049;
        public static final int TextAppearance_info_label=0x7f0d001e;
        public static final int TextAppearance_info_small=0x7f0d001f;
        public static final int TextAppearance_info_value=0x7f0d0020;
        public static final int Theme_ActionBar=0x7f0d005f;
        public static final int Theme_ActionBar_SubSettings=0x7f0d0060;
        public static final int Theme_AlertDialog=0x7f0d0067;
        public static final int Theme_ConfirmDeviceCredentials=0x7f0d006a;
        public static final int Theme_ConfirmDeviceCredentialsDark=0x7f0d006b;
        public static final int Theme_CreateShortCut=0x7f0d0057;
        public static final int Theme_CryptKeeper=0x7f0d0064;
        public static final int Theme_DialogWhenLarge=0x7f0d0063;
        public static final int Theme_FingerprintEnroll=0x7f0d006c;
        public static final int Theme_NotificationStation=0x7f0d0068;
        public static final int Theme_Settings=0x7f0d005d;
        /**  Theme with no local references, used by AccountPreferenceBase where we have to inflate
         layouts against a remote context using our local theme colors. Due to the implementation
         details of Theme, we can't reference any local resources and MUST instead use the values
         directly. So use #ff263238 instead of @color/theme_primary and so on. 
         */
        public static final int Theme_SettingsBase=0x7f0d005c;
        public static final int Theme_SubSettings=0x7f0d005e;
        public static final int Theme_SubSettingsDialogWhenLarge=0x7f0d0065;
        public static final int Theme_WifiDialog=0x7f0d005b;
        public static final int ThemeOverlay_AlertDialog=0x7f0d0066;
        /**  Used to color the switch bar controls 
         */
        public static final int ThemeOverlay_SwitchBar=0x7f0d0069;
        public static final int ThemeOverlay_SwitchBar_Settings=0x7f0d0061;
        public static final int ThemeOverlay_SwitchBar_SubSettings=0x7f0d0062;
        public static final int Transparent=0x7f0d003b;
        public static final int TrimmedHorizontalProgressBar=0x7f0d002f;
        public static final int VertDivider=0x7f0d002d;
        public static final int bt_item=0x7f0d0030;
        public static final int bt_item_edit_content=0x7f0d0032;
        public static final int bt_item_label=0x7f0d0031;
        /**  MTK WFD sink surface actvity style 
         */
        public static final int dialog_fullscreen=0x7f0d0016;
        public static final int entry_layout=0x7f0d001b;
        public static final int form_value=0x7f0d001c;
        public static final int info_label=0x7f0d0017;
        public static final int info_layout=0x7f0d001a;
        public static final int info_small=0x7f0d0019;
        public static final int info_value=0x7f0d0018;
        public static final int setup_wizard_button=0x7f0d0039;
        public static final int setup_wizard_navbar_button_style=0x7f0d0015;
        public static final int setup_wizard_navbar_style=0x7f0d0012;
        public static final int setup_wizard_navbar_theme_dark=0x7f0d0013;
        public static final int setup_wizard_navbar_theme_light=0x7f0d0014;
        public static final int vpn_label=0x7f0d003f;
        public static final int vpn_value=0x7f0d0040;
        public static final int wifi_advanced_toggle=0x7f0d0036;
        public static final int wifi_item=0x7f0d0033;
        public static final int wifi_item_content=0x7f0d0035;
        public static final int wifi_item_edit_content=0x7f0d0037;
        public static final int wifi_item_label=0x7f0d0034;
        public static final int wifi_section=0x7f0d0038;
    }
    public static final class xml {
        public static final int about_legal=0x7f080000;
        public static final int accessibility_daltonizer_settings=0x7f080001;
        public static final int accessibility_settings=0x7f080002;
        public static final int account_settings=0x7f080003;
        public static final int account_sync_settings=0x7f080004;
        public static final int add_account_settings=0x7f080005;
        public static final int advanced_apps=0x7f080006;
        public static final int apn_editor=0x7f080007;
        public static final int apn_settings=0x7f080008;
        public static final int app_memory_settings=0x7f080009;
        public static final int app_notification_settings=0x7f08000a;
        public static final int app_ops_permissions_details=0x7f08000b;
        public static final int app_restrictions=0x7f08000c;
        public static final int app_storage_settings=0x7f08000d;
        public static final int application_settings=0x7f08000e;
        public static final int appwidget_info=0x7f08000f;
        public static final int audioprofile_bessurrond_settings=0x7f080010;
        public static final int audioprofile_notification=0x7f080011;
        public static final int audioprofile_settings=0x7f080012;
        public static final int audioprofile_sound_enhancement=0x7f080013;
        public static final int battery_saver_settings=0x7f080014;
        public static final int bluetooth_device_advanced=0x7f080015;
        public static final int bluetooth_settings=0x7f080016;
        public static final int captioning_settings=0x7f080017;
        public static final int card_emulation_settings=0x7f080018;
        public static final int current_networkinfo_status=0x7f080019;
        public static final int cy_device_info_storage=0x7f08001a;
        public static final int dashboard_categories=0x7f08001b;
        public static final int data_usage_metered_prefs=0x7f08001c;
        public static final int date_time_prefs=0x7f08001d;
        public static final int default_apps=0x7f08001e;
        public static final int development_prefs=0x7f08001f;
        public static final int device_info_phone_status=0x7f080020;
        public static final int device_info_settings=0x7f080021;
        public static final int device_info_sim_status=0x7f080022;
        public static final int device_info_status=0x7f080023;
        public static final int device_info_storage=0x7f080024;
        public static final int device_info_storage_volume=0x7f080025;
        public static final int device_picker=0x7f080026;
        public static final int display_settings=0x7f080027;
        public static final int drm_settings=0x7f080028;
        public static final int edit_profile_prefs=0x7f080029;
        public static final int file_paths=0x7f08002a;
        public static final int hdmi_settings=0x7f08002b;
        public static final int high_power_details=0x7f08002c;
        public static final int home_selection=0x7f08002d;
        public static final int inactive_apps=0x7f08002e;
        public static final int input_methods_prefs=0x7f08002f;
        public static final int installed_app_details=0x7f080030;
        public static final int installed_app_launch_settings=0x7f080031;
        public static final int language_settings=0x7f080032;
        public static final int location_mode=0x7f080033;
        public static final int location_scanning=0x7f080034;
        public static final int location_settings=0x7f080035;
        public static final int manage_accounts_settings=0x7f080036;
        public static final int manage_assist=0x7f080037;
        public static final int nfc_payment_settings=0x7f080038;
        public static final int nfc_settings=0x7f080039;
        public static final int notification_settings=0x7f08003a;
        public static final int other_sound_settings=0x7f08003b;
        public static final int power_usage_details=0x7f08003c;
        public static final int power_usage_summary=0x7f08003d;
        public static final int print_job_settings=0x7f08003e;
        public static final int print_settings=0x7f08003f;
        public static final int privacy_settings=0x7f080040;
        public static final int process_stats_summary=0x7f080041;
        public static final int process_stats_ui=0x7f080042;
        public static final int screen_pinning_settings=0x7f080043;
        public static final int security_settings=0x7f080044;
        public static final int security_settings_chooser=0x7f080045;
        public static final int security_settings_encrypted=0x7f080046;
        public static final int security_settings_fingerprint=0x7f080047;
        public static final int security_settings_lockscreen=0x7f080048;
        public static final int security_settings_misc=0x7f080049;
        public static final int security_settings_password=0x7f08004a;
        public static final int security_settings_pattern=0x7f08004b;
        public static final int security_settings_picker=0x7f08004c;
        public static final int security_settings_pin=0x7f08004d;
        public static final int security_settings_unencrypted=0x7f08004e;
        public static final int security_settings_voice_weak=0x7f08004f;
        public static final int sim_lock_settings=0x7f080050;
        public static final int sim_settings=0x7f080051;
        public static final int slot_list_entrance=0x7f080052;
        public static final int spellchecker_prefs=0x7f080053;
        public static final int sync_settings=0x7f080054;
        public static final int testing_settings=0x7f080055;
        public static final int testing_wifi_settings=0x7f080056;
        public static final int tether_prefs=0x7f080057;
        public static final int tether_wifi_prefs=0x7f080058;
        public static final int timezones=0x7f080059;
        public static final int trust_agent_settings=0x7f08005a;
        public static final int tts_engine_settings=0x7f08005b;
        public static final int tts_settings=0x7f08005c;
        public static final int usage_access_settings=0x7f08005d;
        public static final int usb_settings=0x7f08005e;
        public static final int user_details_settings=0x7f08005f;
        public static final int user_settings=0x7f080060;
        public static final int voice_input_settings=0x7f080061;
        public static final int vpn_settings2=0x7f080062;
        public static final int wallpaper_settings=0x7f080063;
        public static final int wifi_access_points=0x7f080064;
        public static final int wifi_access_points_and_gprs=0x7f080065;
        public static final int wifi_access_points_for_wifi_setup_xl=0x7f080066;
        public static final int wifi_advanced_settings=0x7f080067;
        public static final int wifi_calling_settings=0x7f080068;
        public static final int wifi_display_saved_access_points=0x7f080069;
        public static final int wifi_display_settings=0x7f08006a;
        public static final int wifi_p2p_settings=0x7f08006b;
        public static final int wifi_settings=0x7f08006c;
        public static final int wireless_settings=0x7f08006d;
        public static final int zen_mode_automation_settings=0x7f08006e;
        public static final int zen_mode_event_rule_settings=0x7f08006f;
        public static final int zen_mode_external_rule_settings=0x7f080070;
        public static final int zen_mode_priority_settings=0x7f080071;
        public static final int zen_mode_schedule_rule_settings=0x7f080072;
        public static final int zen_mode_settings=0x7f080073;
    }
    public static final class styleable {
        /** Attributes that can be used with a BatteryHistoryChart.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowColor android:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDx android:shadowDx}</code></td><td> Horizontal offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDy android:shadowDy}</code></td><td> Vertical offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowRadius android:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textAppearance android:textAppearance}</code></td><td> Base text color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textColor android:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textSize android:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textStyle android:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_typeface android:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_barPredictionColor com.android.settings:barPredictionColor}</code></td><td> Color of predicted future use part of chart.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_barPrimaryColor com.android.settings:barPrimaryColor}</code></td><td> Primary color of chart.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_chartMinHeight com.android.settings:chartMinHeight}</code></td><td> Minimum height of the chart itself.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_headerAppearance com.android.settings:headerAppearance}</code></td><td> Text color, typeface, size, and style of header.</td></tr>
           </table>
           @see #BatteryHistoryChart_android_shadowColor
           @see #BatteryHistoryChart_android_shadowDx
           @see #BatteryHistoryChart_android_shadowDy
           @see #BatteryHistoryChart_android_shadowRadius
           @see #BatteryHistoryChart_android_textAppearance
           @see #BatteryHistoryChart_android_textColor
           @see #BatteryHistoryChart_android_textSize
           @see #BatteryHistoryChart_android_textStyle
           @see #BatteryHistoryChart_android_typeface
           @see #BatteryHistoryChart_barPredictionColor
           @see #BatteryHistoryChart_barPrimaryColor
           @see #BatteryHistoryChart_chartMinHeight
           @see #BatteryHistoryChart_headerAppearance
         */
        public static final int[] BatteryHistoryChart = {
            0x01010034, 0x01010095, 0x01010096, 0x01010097,
            0x01010098, 0x01010161, 0x01010162, 0x01010163,
            0x01010164, 0x7f010019, 0x7f01001a, 0x7f01001b,
            0x7f01001c
        };
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowColor}.
          @attr name android:shadowColor
        */
        public static final int BatteryHistoryChart_android_shadowColor = 5;
        /**
          <p>
          @attr description
           Horizontal offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDx}.
          @attr name android:shadowDx
        */
        public static final int BatteryHistoryChart_android_shadowDx = 6;
        /**
          <p>
          @attr description
           Vertical offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDy}.
          @attr name android:shadowDy
        */
        public static final int BatteryHistoryChart_android_shadowDy = 7;
        /**
          <p>
          @attr description
           Radius of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowRadius}.
          @attr name android:shadowRadius
        */
        public static final int BatteryHistoryChart_android_shadowRadius = 8;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textAppearance}.
          @attr name android:textAppearance
        */
        public static final int BatteryHistoryChart_android_textAppearance = 0;
        /**
          <p>
          @attr description
           Text color. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int BatteryHistoryChart_android_textColor = 4;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textSize}.
          @attr name android:textSize
        */
        public static final int BatteryHistoryChart_android_textSize = 1;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textStyle}.
          @attr name android:textStyle
        */
        public static final int BatteryHistoryChart_android_textStyle = 3;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#typeface}.
          @attr name android:typeface
        */
        public static final int BatteryHistoryChart_android_typeface = 2;
        /**
          <p>
          @attr description
           Color of predicted future use part of chart. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.settings:barPredictionColor
        */
        public static final int BatteryHistoryChart_barPredictionColor = 11;
        /**
          <p>
          @attr description
           Primary color of chart. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.settings:barPrimaryColor
        */
        public static final int BatteryHistoryChart_barPrimaryColor = 10;
        /**
          <p>
          @attr description
           Minimum height of the chart itself. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
          <p>This is a private symbol.
          @attr name com.android.settings:chartMinHeight
        */
        public static final int BatteryHistoryChart_chartMinHeight = 12;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style of header. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.settings:headerAppearance
        */
        public static final int BatteryHistoryChart_headerAppearance = 9;
        /** Attributes that can be used with a ChartGridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartGridView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_android_textColor android:textColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_borderDrawable com.android.settings:borderDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_primaryDrawable com.android.settings:primaryDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_secondaryDrawable com.android.settings:secondaryDrawable}</code></td><td></td></tr>
           </table>
           @see #ChartGridView_android_textAppearance
           @see #ChartGridView_android_textColor
           @see #ChartGridView_borderDrawable
           @see #ChartGridView_primaryDrawable
           @see #ChartGridView_secondaryDrawable
         */
        public static final int[] ChartGridView = {
            0x01010034, 0x01010098, 0x7f010028, 0x7f010029,
            0x7f01002a
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
          attribute's value can be found in the {@link #ChartGridView} array.
          @attr name android:textAppearance
        */
        public static final int ChartGridView_android_textAppearance = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textColor}
          attribute's value can be found in the {@link #ChartGridView} array.
          @attr name android:textColor
        */
        public static final int ChartGridView_android_textColor = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#borderDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:borderDrawable
        */
        public static final int ChartGridView_borderDrawable = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#primaryDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:primaryDrawable
        */
        public static final int ChartGridView_primaryDrawable = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#secondaryDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:secondaryDrawable
        */
        public static final int ChartGridView_secondaryDrawable = 3;
        /** Attributes that can be used with a ChartNetworkSeriesView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_fillColor com.android.settings:fillColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_fillColorSecondary com.android.settings:fillColorSecondary}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_safeRegion com.android.settings:safeRegion}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_strokeColor com.android.settings:strokeColor}</code></td><td></td></tr>
           </table>
           @see #ChartNetworkSeriesView_fillColor
           @see #ChartNetworkSeriesView_fillColorSecondary
           @see #ChartNetworkSeriesView_safeRegion
           @see #ChartNetworkSeriesView_strokeColor
         */
        public static final int[] ChartNetworkSeriesView = {
            0x7f010027, 0x7f01002b, 0x7f01002c, 0x7f01002d
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#fillColor}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:fillColor
        */
        public static final int ChartNetworkSeriesView_fillColor = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#fillColorSecondary}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:fillColorSecondary
        */
        public static final int ChartNetworkSeriesView_fillColorSecondary = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#safeRegion}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:safeRegion
        */
        public static final int ChartNetworkSeriesView_safeRegion = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#strokeColor}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:strokeColor
        */
        public static final int ChartNetworkSeriesView_strokeColor = 1;
        /** Attributes that can be used with a ChartSweepView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartSweepView_followAxis com.android.settings:followAxis}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelColor com.android.settings:labelColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelSize com.android.settings:labelSize}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelTemplate com.android.settings:labelTemplate}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_neighborMargin com.android.settings:neighborMargin}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_safeRegion com.android.settings:safeRegion}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_sweepDrawable com.android.settings:sweepDrawable}</code></td><td></td></tr>
           </table>
           @see #ChartSweepView_followAxis
           @see #ChartSweepView_labelColor
           @see #ChartSweepView_labelSize
           @see #ChartSweepView_labelTemplate
           @see #ChartSweepView_neighborMargin
           @see #ChartSweepView_safeRegion
           @see #ChartSweepView_sweepDrawable
         */
        public static final int[] ChartSweepView = {
            0x7f010021, 0x7f010022, 0x7f010023, 0x7f010024,
            0x7f010025, 0x7f010026, 0x7f010027
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#followAxis}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.android.settings:followAxis
        */
        public static final int ChartSweepView_followAxis = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelColor}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:labelColor
        */
        public static final int ChartSweepView_labelColor = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelSize}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:labelSize
        */
        public static final int ChartSweepView_labelSize = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelTemplate}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:labelTemplate
        */
        public static final int ChartSweepView_labelTemplate = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#neighborMargin}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:neighborMargin
        */
        public static final int ChartSweepView_neighborMargin = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#safeRegion}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:safeRegion
        */
        public static final int ChartSweepView_safeRegion = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#sweepDrawable}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:sweepDrawable
        */
        public static final int ChartSweepView_sweepDrawable = 0;
        /** Attributes that can be used with a ChartView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartView_optimalWidth com.android.settings:optimalWidth}</code></td><td> optimal width of the chart </td></tr>
           <tr><td><code>{@link #ChartView_optimalWidthWeight com.android.settings:optimalWidthWeight}</code></td><td> how to weight extra space beyond optimal width </td></tr>
           </table>
           @see #ChartView_optimalWidth
           @see #ChartView_optimalWidthWeight
         */
        public static final int[] ChartView = {
            0x7f01001f, 0x7f010020
        };
        /**
          <p>
          @attr description
           optimal width of the chart 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:optimalWidth
        */
        public static final int ChartView_optimalWidth = 0;
        /**
          <p>
          @attr description
           how to weight extra space beyond optimal width 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:optimalWidthWeight
        */
        public static final int ChartView_optimalWidthWeight = 1;
        /**  A by shubin  {
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CricleProgressBar_appsProgress com.android.settings:appsProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_appsProgressColor com.android.settings:appsProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_audioProgress com.android.settings:audioProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_audioProgressColor com.android.settings:audioProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_cacheProgress com.android.settings:cacheProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_cacheProgressColor com.android.settings:cacheProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_cricleColor com.android.settings:cricleColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_cricleProgressColor com.android.settings:cricleProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_cricleWidth com.android.settings:cricleWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_currentProgress com.android.settings:currentProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_imageProgress com.android.settings:imageProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_imageProgressColor com.android.settings:imageProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_maxProgress com.android.settings:maxProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_otherProgress com.android.settings:otherProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_otherProgressColor com.android.settings:otherProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_style com.android.settings:style}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_systemProgress com.android.settings:systemProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_systemProgressColor com.android.settings:systemProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_textColor com.android.settings:textColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_textIsDisplayable com.android.settings:textIsDisplayable}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_textSize com.android.settings:textSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_videoProgress com.android.settings:videoProgress}</code></td><td></td></tr>
           <tr><td><code>{@link #CricleProgressBar_videoProgressColor com.android.settings:videoProgressColor}</code></td><td></td></tr>
           </table>
           @see #CricleProgressBar_appsProgress
           @see #CricleProgressBar_appsProgressColor
           @see #CricleProgressBar_audioProgress
           @see #CricleProgressBar_audioProgressColor
           @see #CricleProgressBar_cacheProgress
           @see #CricleProgressBar_cacheProgressColor
           @see #CricleProgressBar_cricleColor
           @see #CricleProgressBar_cricleProgressColor
           @see #CricleProgressBar_cricleWidth
           @see #CricleProgressBar_currentProgress
           @see #CricleProgressBar_imageProgress
           @see #CricleProgressBar_imageProgressColor
           @see #CricleProgressBar_maxProgress
           @see #CricleProgressBar_otherProgress
           @see #CricleProgressBar_otherProgressColor
           @see #CricleProgressBar_style
           @see #CricleProgressBar_systemProgress
           @see #CricleProgressBar_systemProgressColor
           @see #CricleProgressBar_textColor
           @see #CricleProgressBar_textIsDisplayable
           @see #CricleProgressBar_textSize
           @see #CricleProgressBar_videoProgress
           @see #CricleProgressBar_videoProgressColor
         */
        public static final int[] CricleProgressBar = {
            0x7f010036, 0x7f010037, 0x7f010038, 0x7f010039,
            0x7f01003a, 0x7f01003b, 0x7f01003c, 0x7f01003d,
            0x7f01003e, 0x7f01003f, 0x7f010040, 0x7f010041,
            0x7f010042, 0x7f010043, 0x7f010044, 0x7f010045,
            0x7f010046, 0x7f010047, 0x7f010048, 0x7f010049,
            0x7f01004a, 0x7f01004b, 0x7f01004c
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#appsProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:appsProgress
        */
        public static final int CricleProgressBar_appsProgress = 14;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#appsProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:appsProgressColor
        */
        public static final int CricleProgressBar_appsProgressColor = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#audioProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:audioProgress
        */
        public static final int CricleProgressBar_audioProgress = 18;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#audioProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:audioProgressColor
        */
        public static final int CricleProgressBar_audioProgressColor = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#cacheProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:cacheProgress
        */
        public static final int CricleProgressBar_cacheProgress = 20;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#cacheProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:cacheProgressColor
        */
        public static final int CricleProgressBar_cacheProgressColor = 8;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#cricleColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:cricleColor
        */
        public static final int CricleProgressBar_cricleColor = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#cricleProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:cricleProgressColor
        */
        public static final int CricleProgressBar_cricleProgressColor = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#cricleWidth}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:cricleWidth
        */
        public static final int CricleProgressBar_cricleWidth = 9;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#currentProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:currentProgress
        */
        public static final int CricleProgressBar_currentProgress = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#imageProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:imageProgress
        */
        public static final int CricleProgressBar_imageProgress = 16;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#imageProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:imageProgressColor
        */
        public static final int CricleProgressBar_imageProgressColor = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:maxProgress
        */
        public static final int CricleProgressBar_maxProgress = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#otherProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:otherProgress
        */
        public static final int CricleProgressBar_otherProgress = 19;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#otherProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:otherProgressColor
        */
        public static final int CricleProgressBar_otherProgressColor = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#style}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>STROKE</code></td><td>0</td><td></td></tr>
<tr><td><code>FILL</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.android.settings:style
        */
        public static final int CricleProgressBar_style = 22;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#systemProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:systemProgress
        */
        public static final int CricleProgressBar_systemProgress = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#systemProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:systemProgressColor
        */
        public static final int CricleProgressBar_systemProgressColor = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#textColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:textColor
        */
        public static final int CricleProgressBar_textColor = 10;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#textIsDisplayable}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:textIsDisplayable
        */
        public static final int CricleProgressBar_textIsDisplayable = 21;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#textSize}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:textSize
        */
        public static final int CricleProgressBar_textSize = 11;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#videoProgress}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:videoProgress
        */
        public static final int CricleProgressBar_videoProgress = 17;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#videoProgressColor}
          attribute's value can be found in the {@link #CricleProgressBar} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:videoProgressColor
        */
        public static final int CricleProgressBar_videoProgressColor = 5;
        /** Attributes that can be used with a CyMemoryPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CyMemoryPreference_Progress com.android.settings:Progress}</code></td><td></td></tr>
           <tr><td><code>{@link #CyMemoryPreference_ProgressColor com.android.settings:ProgressColor}</code></td><td></td></tr>
           <tr><td><code>{@link #CyMemoryPreference_summaryLeft com.android.settings:summaryLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #CyMemoryPreference_textColors com.android.settings:textColors}</code></td><td></td></tr>
           <tr><td><code>{@link #CyMemoryPreference_valueLeft com.android.settings:valueLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #CyMemoryPreference_valueRight com.android.settings:valueRight}</code></td><td></td></tr>
           </table>
           @see #CyMemoryPreference_Progress
           @see #CyMemoryPreference_ProgressColor
           @see #CyMemoryPreference_summaryLeft
           @see #CyMemoryPreference_textColors
           @see #CyMemoryPreference_valueLeft
           @see #CyMemoryPreference_valueRight
         */
        public static final int[] CyMemoryPreference = {
            0x7f01004d, 0x7f01004e, 0x7f01004f, 0x7f010050,
            0x7f010051, 0x7f010052
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#Progress}
          attribute's value can be found in the {@link #CyMemoryPreference} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:Progress
        */
        public static final int CyMemoryPreference_Progress = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#ProgressColor}
          attribute's value can be found in the {@link #CyMemoryPreference} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:ProgressColor
        */
        public static final int CyMemoryPreference_ProgressColor = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#summaryLeft}
          attribute's value can be found in the {@link #CyMemoryPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:summaryLeft
        */
        public static final int CyMemoryPreference_summaryLeft = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#textColors}
          attribute's value can be found in the {@link #CyMemoryPreference} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:textColors
        */
        public static final int CyMemoryPreference_textColors = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#valueLeft}
          attribute's value can be found in the {@link #CyMemoryPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:valueLeft
        */
        public static final int CyMemoryPreference_valueLeft = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#valueRight}
          attribute's value can be found in the {@link #CyMemoryPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:valueRight
        */
        public static final int CyMemoryPreference_valueRight = 2;
        /** Attributes that can be used with a DropDownPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DropDownPreference_android_entries android:entries}</code></td><td></td></tr>
           <tr><td><code>{@link #DropDownPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
           </table>
           @see #DropDownPreference_android_entries
           @see #DropDownPreference_android_entryValues
         */
        public static final int[] DropDownPreference = {
            0x010100b2, 0x010101f8
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#entries}
          attribute's value can be found in the {@link #DropDownPreference} array.
          @attr name android:entries
        */
        public static final int DropDownPreference_android_entries = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#entryValues}
          attribute's value can be found in the {@link #DropDownPreference} array.
          @attr name android:entryValues
        */
        public static final int DropDownPreference_android_entryValues = 1;
        /** Attributes that can be used with a IconPreferenceScreen.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconPreferenceScreen_icon com.android.settings:icon}</code></td><td></td></tr>
           </table>
           @see #IconPreferenceScreen_icon
         */
        public static final int[] IconPreferenceScreen = {
            0x7f010017
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#icon}
          attribute's value can be found in the {@link #IconPreferenceScreen} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:icon
        */
        public static final int IconPreferenceScreen_icon = 0;
        /** Attributes that can be used with a PercentageBarChart.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PercentageBarChart_emptyColor com.android.settings:emptyColor}</code></td><td> Background color </td></tr>
           <tr><td><code>{@link #PercentageBarChart_minTickWidth com.android.settings:minTickWidth}</code></td><td> Minimum tick width for each slice in the bar chart.</td></tr>
           </table>
           @see #PercentageBarChart_emptyColor
           @see #PercentageBarChart_minTickWidth
         */
        public static final int[] PercentageBarChart = {
            0x7f01001d, 0x7f01001e
        };
        /**
          <p>
          @attr description
           Background color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:emptyColor
        */
        public static final int PercentageBarChart_emptyColor = 0;
        /**
          <p>
          @attr description
           Minimum tick width for each slice in the bar chart. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:minTickWidth
        */
        public static final int PercentageBarChart_minTickWidth = 1;
        /**  For Search 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Preference_keywords com.android.settings:keywords}</code></td><td></td></tr>
           </table>
           @see #Preference_keywords
         */
        public static final int[] Preference = {
            0x7f01002f
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#keywords}
          attribute's value can be found in the {@link #Preference} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:keywords
        */
        public static final int Preference_keywords = 0;
        /** Attributes that can be used with a SetupWizardIllustration.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SetupWizardIllustration_aspectRatio com.android.settings:aspectRatio}</code></td><td></td></tr>
           </table>
           @see #SetupWizardIllustration_aspectRatio
         */
        public static final int[] SetupWizardIllustration = {
            0x7f010018
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#aspectRatio}
          attribute's value can be found in the {@link #SetupWizardIllustration} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:aspectRatio
        */
        public static final int SetupWizardIllustration_aspectRatio = 0;
        /** Attributes that can be used with a SuwIllustration.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SuwIllustration_suwAspectRatio com.android.settings:suwAspectRatio}</code></td><td></td></tr>
           </table>
           @see #SuwIllustration_suwAspectRatio
         */
        public static final int[] SuwIllustration = {
            0x7f010009
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwAspectRatio}
          attribute's value can be found in the {@link #SuwIllustration} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:suwAspectRatio
        */
        public static final int SuwIllustration_suwAspectRatio = 0;
        /** Attributes that can be used with a SuwSetupWizardLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_android_layout android:layout}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwBackground com.android.settings:suwBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwBackgroundTile com.android.settings:suwBackgroundTile}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwDecorPaddingTop com.android.settings:suwDecorPaddingTop}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwHeaderText com.android.settings:suwHeaderText}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustration com.android.settings:suwIllustration}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationAspectRatio com.android.settings:suwIllustrationAspectRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationHorizontalTile com.android.settings:suwIllustrationHorizontalTile}</code></td><td></td></tr>
           <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationImage com.android.settings:suwIllustrationImage}</code></td><td></td></tr>
           </table>
           @see #SuwSetupWizardLayout_android_layout
           @see #SuwSetupWizardLayout_suwBackground
           @see #SuwSetupWizardLayout_suwBackgroundTile
           @see #SuwSetupWizardLayout_suwDecorPaddingTop
           @see #SuwSetupWizardLayout_suwHeaderText
           @see #SuwSetupWizardLayout_suwIllustration
           @see #SuwSetupWizardLayout_suwIllustrationAspectRatio
           @see #SuwSetupWizardLayout_suwIllustrationHorizontalTile
           @see #SuwSetupWizardLayout_suwIllustrationImage
         */
        public static final int[] SuwSetupWizardLayout = {
            0x010100f2, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011,
            0x7f010012
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
          @attr name android:layout
        */
        public static final int SuwSetupWizardLayout_android_layout = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwBackground}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.android.settings:suwBackground
        */
        public static final int SuwSetupWizardLayout_suwBackground = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwBackgroundTile}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.android.settings:suwBackgroundTile
        */
        public static final int SuwSetupWizardLayout_suwBackgroundTile = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwDecorPaddingTop}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
          @attr name com.android.settings:suwDecorPaddingTop
        */
        public static final int SuwSetupWizardLayout_suwDecorPaddingTop = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwHeaderText}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:suwHeaderText
        */
        public static final int SuwSetupWizardLayout_suwHeaderText = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustration}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.android.settings:suwIllustration
        */
        public static final int SuwSetupWizardLayout_suwIllustration = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustrationAspectRatio}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
          @attr name com.android.settings:suwIllustrationAspectRatio
        */
        public static final int SuwSetupWizardLayout_suwIllustrationAspectRatio = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustrationHorizontalTile}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.android.settings:suwIllustrationHorizontalTile
        */
        public static final int SuwSetupWizardLayout_suwIllustrationHorizontalTile = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustrationImage}
          attribute's value can be found in the {@link #SuwSetupWizardLayout} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name com.android.settings:suwIllustrationImage
        */
        public static final int SuwSetupWizardLayout_suwIllustrationImage = 8;
        /** Attributes that can be used with a SuwStickyHeaderListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SuwStickyHeaderListView_suwHeader com.android.settings:suwHeader}</code></td><td></td></tr>
           </table>
           @see #SuwStickyHeaderListView_suwHeader
         */
        public static final int[] SuwStickyHeaderListView = {
            0x7f01000a
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwHeader}
          attribute's value can be found in the {@link #SuwStickyHeaderListView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:suwHeader
        */
        public static final int SuwStickyHeaderListView_suwHeader = 0;
        /** Attributes that can be used with a WifiEncryptionState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WifiEncryptionState_state_encrypted com.android.settings:state_encrypted}</code></td><td></td></tr>
           </table>
           @see #WifiEncryptionState_state_encrypted
         */
        public static final int[] WifiEncryptionState = {
            0x7f010016
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_encrypted}
          attribute's value can be found in the {@link #WifiEncryptionState} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:state_encrypted
        */
        public static final int WifiEncryptionState_state_encrypted = 0;
    };
}
