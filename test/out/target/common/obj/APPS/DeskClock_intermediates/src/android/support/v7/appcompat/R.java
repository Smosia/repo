/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package android.support.v7.appcompat;

public final class R {
    public static final class anim {
        public static final int abc_fade_in=0x7f050000;
        public static final int abc_fade_out=0x7f050001;
        public static final int abc_grow_fade_in_from_bottom=0x7f050002;
        public static final int abc_popup_enter=0x7f050003;
        public static final int abc_popup_exit=0x7f050004;
        public static final int abc_shrink_fade_out_from_bottom=0x7f050005;
        public static final int abc_slide_in_bottom=0x7f050006;
        public static final int abc_slide_in_top=0x7f050007;
        public static final int abc_slide_out_bottom=0x7f050008;
        public static final int abc_slide_out_top=0x7f050009;
    }
    public static final class animator {
        public static final int fade_in=0x7f060000;
        public static final int fade_out=0x7f060001;
        public static final int ic_alarm_animation_button=0x7f060002;
        public static final int ic_clock_animation_second_hand=0x7f060003;
        public static final int ic_stopwatch_animation_button=0x7f060004;
        public static final int ic_stopwatch_animation_hand=0x7f060005;
        public static final int ic_timer_animation_hourglass_fill=0x7f060006;
        public static final int ic_timer_animation_hourglass_frame=0x7f060007;
        public static final int ic_timer_animation_mask_1=0x7f060008;
    }
    public static final class array {
        /**  Alarm confirmation toast: Describes how long from now until
         alarm fires 
 Alarm confirmation toast: Describes how long from now until
         alarm fires 
         */
        public static final int alarm_set=0x7f110004;
        /**  Entries listed in the ListPreference when invoking the auto silence
         preference. 
 Entries listed in the ListPreference when invoking the auto silence
         preference. 
         */
        public static final int auto_silence_entries=0x7f110005;
        /**  Values that are retrieved from the ListPreference. These must match
         the auto_silence_entries above. 
 Off 
 Values that are retrieved from the ListPreference. These must match
         the auto_silence_entries above. 
 Off 
         */
        public static final int auto_silence_values=0x7f110006;
        /**  add   bug id DELSLMY-100  liupeng 20160326 (start) 
         */
        public static final int cities_id=0x7f110002;
        /** 
    The city names are presented to the user in an alphabetically-sorted list with section headers.
    The section header is the "index" of all the cities in the section. By default, the section
    header is the first character of the city name.

    However, in some languages, cities are listed under an incorrect index.

    Should a city be listed under an incorrect index, the correct index can be manually specified
    by adding an index to the translation string before the "=" placeholder:
        <item>[index]<xliff:g id="separator">=</xliff:g>[city name]</item>

        Ex. <item>A<xliff:g id="separator">=</xliff:g>Abidjan</item>
        Now Abidjan will be classified under the "A" index.

    Note that the separator "=" should NOT be localized. The index can be multi-character; it will
    consist of all specified characters before the "=" separator.

    This will NOT change the sort order of the cities list. It will solve issues where a city is
    mistakenly listed under its own index instead of being included in a section immediately
    before or after its listing.
    
 add   bug id DELSLMY-100  liupeng 20160326 (end) 
         */
        public static final int cities_names=0x7f110000;
        /**  add   bug id DELSLMY-100  liupeng 20160326 (end) 
         */
        public static final int cities_tz=0x7f110001;
        /**  Entries listed in the ListPreference when invoking the clock style
         preference. 
 Entries listed in the ListPreference when invoking the clock style
         preference. 
         */
        public static final int clock_style_entries=0x7f11000f;
        /**  Values that are retrieved from the ListPreference. These must match
         the clock_style_entries above. 
 Values that are retrieved from the ListPreference. These must match
         the clock_style_entries above. 
         */
        public static final int clock_style_values=0x7f110010;
        /**  modify  by  xieshanlin  20150508  BUG_ID:DWYLL-440 ( end )
 Formatted stopwatch time for laps shared using the share button 
 Formatted stopwatch time for laps shared using the share button 
         */
        public static final int shared_laps_format_set=0x7f11000c;
        /**  Formatted stopwatch time 
 modify  by  xieshanlin  20150508  BUG_ID:DWYLL-440 (start)
 Formatted stopwatch time 
 modify  by  xieshanlin  20150508  BUG_ID:DWYLL-440 (start)
         */
        public static final int stopwatch_format_set=0x7f11000b;
        /**  Label to enumerate the number of laps the user has counted 
 Label to enumerate the number of laps the user has counted 
         */
        public static final int sw_lap_number_set=0x7f11000d;
        /**  Jocular content that user may append when sharing the lap times 
 Jocular content that user may append when sharing the lap times 
         */
        public static final int sw_share_strings=0x7f11000e;
        /**  Timer notification: how long from now until timer goes off. 
 Timer notification: how long from now until timer goes off. 
         */
        public static final int timer_notifications=0x7f110003;
        /**  Choices for timezones, must be kept in sync with timezone_values. CHAR LIMIT=25] 
 add     by  xieshanlin  20150522  BUG_ID:DWYLL-665 ( end )
 add     by  xieshanlin  20150522  BUG_ID:DWYLL-665 ( end )
         */
        public static final int timezone_labels=0x7f110011;
        /**  Choices for timezones, must be kept in sync with timezone_values. 
 add     by  xieshanlin  20150522  BUG_ID:DWYLL-665 ( end )
 add     by  xieshanlin  20150522  BUG_ID:DWYLL-665 ( end )
         */
        public static final int timezone_values=0x7f110012;
        /**  Entries listed in the setting for the side-button action. 
 Entries listed in the setting for the side-button action. 
         */
        public static final int volume_button_setting_entries=0x7f110009;
        /**  Values for the side-button setting. 
 Values for the side-button setting. 
         */
        public static final int volume_button_setting_values=0x7f11000a;
        /**  Entries listed in ListPreference for start day. 
         */
        public static final int week_start_entries=0x7f110007;
        /**  Values for ListPreference for start day of week. 
 Calendar.MONDAY 
         */
        public static final int week_start_values=0x7f110008;
    }
    public static final class attr {
        /**  Custom divider drawable to use for elements in the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarDivider=0x7f010026;
        /**  Custom item state list drawable background for action bar items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarItemBackground=0x7f010027;
        /**  Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarPopupTheme=0x7f010020;
        /**  Size of the Action Bar, including the contextual
             bar used to present Action Modes. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>wrap_content</code></td><td>0</td><td></td></tr>
</table>
         */
        public static final int actionBarSize=0x7f010025;
        /**  Reference to a style for the split Action Bar. This style
             controls the split component that holds the menu/action
             buttons. actionBarStyle is still used for the primary
             bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarSplitStyle=0x7f010022;
        /**  Reference to a style for the Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarStyle=0x7f010021;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabBarStyle=0x7f01001c;
        /**  Default style for tabs within an action bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabStyle=0x7f01001b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabTextStyle=0x7f01001d;
        /**  Reference to a theme that should be used to inflate the
             action bar. This will be inherited by any widget inflated
             into the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTheme=0x7f010023;
        /**  Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar. Most of the time
             this will be a reference to the current theme, but when
             the action bar has a significantly different contrast
             profile than the rest of the activity the difference
             can become important. If this is set to @null the current
             theme will be used.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarWidgetTheme=0x7f010024;
        /**  Default action button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionButtonStyle=0x7f010040;
        /**  Default ActionBar dropdown style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionDropDownStyle=0x7f01003c;
        /**  An optional layout to be used as an action view.
             See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionLayout=0x7f01009b;
        /**  TextAppearance style that will be applied to text that
             appears within action menu items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionMenuTextAppearance=0x7f010028;
        /**  Color for text that appears within action menu items. 
 Color for text that appears within action menu items. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int actionMenuTextColor=0x7f010029;
        /**  Background drawable to use for action mode UI 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeBackground=0x7f01002c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseButtonStyle=0x7f01002b;
        /**  Drawable to use for the close action mode button 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseDrawable=0x7f01002e;
        /**  Drawable to use for the Copy action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCopyDrawable=0x7f010030;
        /**  Drawable to use for the Cut action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCutDrawable=0x7f01002f;
        /**  Drawable to use for the Find action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeFindDrawable=0x7f010034;
        /**  Drawable to use for the Paste action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePasteDrawable=0x7f010031;
        /**  PopupWindow style to use for action modes when showing as a window overlay. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePopupWindowStyle=0x7f010036;
        /**  Drawable to use for the Select all action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSelectAllDrawable=0x7f010032;
        /**  Drawable to use for the Share action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeShareDrawable=0x7f010033;
        /**  Background drawable to use for action mode UI in the lower split bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSplitBackground=0x7f01002d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeStyle=0x7f01002a;
        /**  Drawable to use for the Web Search action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeWebSearchDrawable=0x7f010035;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionOverflowButtonStyle=0x7f01001e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionOverflowMenuStyle=0x7f01001f;
        /**  The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.
             See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
             for more info. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int actionProviderClass=0x7f01009d;
        /**  The name of an optional View class to instantiate and use as an
             action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int actionViewClass=0x7f01009c;
        /**  Default ActivityChooserView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityChooserViewStyle=0x7f010048;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogButtonGroupStyle=0x7f01006a;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alertDialogCenterButtons=0x7f01006b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogStyle=0x7f010069;
        /**  Theme to use for alert dialogs spawned from this theme. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogTheme=0x7f01006c;
        /** 
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
         */
        public static final int alignmentMode=0x7f010004;
        /**  The length of the arrow head when formed to make an arrow 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int arrowHeadLength=0x7f0100c6;
        /**  The length of the shaft when formed to make an arrow 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int arrowShaftLength=0x7f0100c7;
        /**  Default AutoCompleteTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int autoCompleteTextViewStyle=0x7f010071;
        /**  Specifies a background drawable for the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int background=0x7f010083;
        /**  Specifies a background drawable for the bottom component of a split action bar. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundSplit=0x7f010085;
        /**  Specifies a background drawable for a second stacked row of the action bar. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundStacked=0x7f010084;
        /**  Tint to apply to the background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundTint=0x7f010097;
        /**  Blending mode used to apply the background tint. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
         */
        public static final int backgroundTintMode=0x7f010098;
        /**  The length of the bars when they are parallel to each other 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int barLength=0x7f0100c8;
        /**  Style for buttons without an explicit border, often used in groups. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int borderlessButtonStyle=0x7f010045;
        /**  Style for buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarButtonStyle=0x7f010042;
        /**  Style for the "negative" buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarNegativeButtonStyle=0x7f01006f;
        /**  Style for the "neutral" buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarNeutralButtonStyle=0x7f010070;
        /**  Style for the "positive" buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarPositiveButtonStyle=0x7f01006e;
        /**  Style for button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarStyle=0x7f010041;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonPanelSideLayout=0x7f0100d4;
        /**  Normal Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyle=0x7f010072;
        /**  Small Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleSmall=0x7f010073;
        /**  Tint to apply to the button drawable. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int buttonTint=0x7f0100cb;
        /**  Blending mode used to apply the button tint. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
         */
        public static final int buttonTintMode=0x7f0100cc;
        /**  The center x-coordinate of the circle. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerX=0x7f0100df;
        /**  The center y-coordinate of the circle. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerY=0x7f0100e0;
        /**  Default Checkbox style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkboxStyle=0x7f010074;
        /**  Default CheckedTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkedTextViewStyle=0x7f010075;
        /**  Close button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int closeIcon=0x7f0100a2;
        /**  Specifies a layout to use for the "close" item at the starting edge. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int closeItemLayout=0x7f010093;
        /**  Text to set as the content description for the collapse button. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int collapseContentDescription=0x7f0100ba;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int collapseIcon=0x7f0100b9;
        /**  The drawing color for the bars 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int color=0x7f0100c2;
        /**  Bright complement to the primary branding color. By default, this is the color applied
             to framework controls (via colorControlActivated). 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorAccent=0x7f010062;
        /**  The color applied to framework buttons in their normal state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorButtonNormal=0x7f010066;
        /**  The color applied to framework controls in their activated (ex. checked) state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorControlActivated=0x7f010064;
        /**  The color applied to framework control highlights (ex. ripples, list selectors). 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorControlHighlight=0x7f010065;
        /**  The color applied to framework controls in their normal state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorControlNormal=0x7f010063;
        /**  The primary branding color for the app. By default, this is the color applied to the
             action bar background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorPrimary=0x7f010060;
        /**  Dark variant of the primary branding color. By default, this is the color applied to
             the status bar (via statusBarColor) and navigation bar (via navigationBarColor). 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorPrimaryDark=0x7f010061;
        /**  The color applied to framework switch thumbs in their normal state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorSwitchThumbNormal=0x7f010067;
        /**  The maximum number of columns to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnCount=0x7f010002;
        /** 
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnOrderPreserved=0x7f010006;
        /**  Commit icon shown in the query suggestion row 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int commitIcon=0x7f0100a7;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetEnd=0x7f01008e;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetLeft=0x7f01008f;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetRight=0x7f010090;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetStart=0x7f01008d;
        /**  The background used by framework controls. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int controlBackground=0x7f010068;
        /**  Specifies a layout for custom navigation. Overrides navigationMode. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int customNavigationLayout=0x7f010086;
        /**  Default query hint used when {@code queryHint} is undefined and
             the search view's {@code SearchableInfo} does not provide a hint. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int defaultQueryHint=0x7f0100a1;
        /**  Preferred padding for dialog content. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dialogPreferredPadding=0x7f01003a;
        /**  Theme to use for dialogs spawned from this theme. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogTheme=0x7f010039;
        /**  Options affecting how the action bar is displayed. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
<tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
<tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
<tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
<tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
<tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
</table>
         */
        public static final int displayOptions=0x7f01007c;
        /**  Specifies the drawable used for item dividers. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int divider=0x7f010082;
        /**  A drawable that may be used as a horizontal divider between visual elements. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerHorizontal=0x7f010047;
        /**  Size of padding on either end of a divider. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerPadding=0x7f0100b0;
        /**  A drawable that may be used as a vertical divider between visual elements. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerVertical=0x7f010046;
        /**  The total size of the drawable 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawableSize=0x7f0100c4;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawerArrowStyle=0x7f0100ca;
        /**  ListPopupWindow compatibility 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownListViewStyle=0x7f010058;
        /**  The preferred item height for dropdown lists. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dropdownListPreferredItemHeight=0x7f01003d;
        /**  EditText background drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextBackground=0x7f01004e;
        /**  EditText text foreground color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int editTextColor=0x7f01004d;
        /**  Default EditText style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextStyle=0x7f010076;
        /**  Elevation for the action bar itself 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int elevation=0x7f010091;
        /**  The drawable to show in the button for expanding the activities overflow popup.
             <strong>Note:</strong> Clients would like to set this drawable
             as a clue about the action the chosen activity will perform. For
             example, if share activity is to be chosen the drawable should
             give a clue that sharing is to be performed.
         
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandActivityOverflowButtonDrawable=0x7f0100ac;
        /**  The ARGB fill color of the circle. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColor=0x7f0100de;
        /**  Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm a". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format12Hour=0x7f0100dc;
        /**  Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "H:mm". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format24Hour=0x7f0100dd;
        /**  The max gap between the bars when they are parallel to each other 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gapBetweenBars=0x7f0100c5;
        /**  Go button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int goIcon=0x7f0100a3;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int height=0x7f01000f;
        /**  Set true to hide the action bar on a vertical nested scroll of content. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hideOnContentScroll=0x7f01008c;
        /**  Specifies a drawable to use for the 'home as up' indicator. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeAsUpIndicator=0x7f01003f;
        /**  Specifies a layout to use for the "home" section of the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeLayout=0x7f010087;
        /**  Specifies the drawable used for the application icon. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x7f010080;
        /**  The default state of the SearchView. If true, it will be iconified when not in
             use and expanded when clicked. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int iconifiedByDefault=0x7f01009f;
        /**  Specifies a style resource to use for an indeterminate progress spinner. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int indeterminateProgressStyle=0x7f010089;
        /**  The maximal number of items initially shown in the activity list. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int initialActivityCount=0x7f0100ab;
        /**  Specifies whether the theme is light, otherwise it is dark. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isLightTheme=0x7f010010;
        /**  Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int itemPadding=0x7f01008b;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelColor=0x7f0100db;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelOffset=0x7f0100da;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelRadius=0x7f0100d9;
        /**  The layout to use for the search view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout=0x7f01009e;
        /** 
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_column=0x7f01000a;
        /** 
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_columnSpan=0x7f01000b;
        /**  The relative proportion of horizontal space that should be allocated to this view
        during excess space distribution. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_columnWeight=0x7f01000c;
        /** 
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f01000d;
        /**  END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_row=0x7f010007;
        /** 
        The row span: the difference between the top and bottom
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_rowSpan=0x7f010008;
        /**  The relative proportion of vertical space that should be allocated to this view
        during excess space distribution. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_rowWeight=0x7f010009;
        /**  Drawable used as a background for selected list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceBackgroundIndicator=0x7f01005f;
        /**  The list divider used in alert dialogs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listDividerAlertDialog=0x7f01003b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listItemLayout=0x7f0100d8;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listLayout=0x7f0100d5;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listPopupWindowStyle=0x7f010059;
        /**  The preferred list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeight=0x7f010053;
        /**  A larger, more robust list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeightLarge=0x7f010055;
        /**  A smaller, sleeker list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeightSmall=0x7f010054;
        /**  The preferred padding along the left edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingLeft=0x7f010056;
        /**  The preferred padding along the right edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingRight=0x7f010057;
        /**  Specifies the drawable used for the application logo. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int logo=0x7f010081;
        /**  A content description string to describe the appearance of the
             associated logo image. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int logoDescription=0x7f0100bd;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxButtonHeight=0x7f0100b8;
        /**  When set to true, all children with a weight will be considered having
             the minimum size of the largest child. If false, all children are
             measured normally. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int measureWithLargestChild=0x7f0100ae;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int multiChoiceItemLayout=0x7f0100d6;
        /**  Text to set as the content description for the navigation button
             located at the start of the toolbar. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigationContentDescription=0x7f0100bc;
        /**  Icon drawable to use for the navigation button located at
             the start of the toolbar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int navigationIcon=0x7f0100bb;
        /**  The type of navigation to use. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
<tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
<tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
</table>
         */
        public static final int navigationMode=0x7f01007b;
        /** 
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
         */
        public static final int orientation=0x7f010000;
        /**  Whether the popup window should overlap its anchor view. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int overlapAnchor=0x7f0100c1;
        /**  Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingEnd=0x7f010095;
        /**  Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingStart=0x7f010094;
        /**  The background of a panel when it is inset from the left and right edges of the screen. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelBackground=0x7f01005c;
        /**  Default Panel Menu style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelMenuListTheme=0x7f01005e;
        /**  Default Panel Menu width. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int panelMenuListWidth=0x7f01005d;
        /**  Default PopupMenu style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupMenuStyle=0x7f01004b;
        /**  Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupTheme=0x7f010092;
        /**  Default PopupWindow style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupWindowStyle=0x7f01004c;
        /**  Whether space should be reserved in layout when an icon is missing. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int preserveIconSpacing=0x7f010099;
        /**  Specifies the horizontal padding on either end for an embedded progress bar. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int progressBarPadding=0x7f01008a;
        /**  Specifies a style resource to use for an embedded progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyle=0x7f010088;
        /**  Background for the section containing the search query 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int queryBackground=0x7f0100a9;
        /**  An optional user-defined query hint string to be displayed in the empty query field. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int queryHint=0x7f0100a0;
        /**  Default RadioButton style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int radioButtonStyle=0x7f010077;
        /**  The radius of the circle. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int radius=0x7f0100e1;
        /**  Default RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyle=0x7f010078;
        /**  The maximum number of rows to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowCount=0x7f010001;
        /** 
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowOrderPreserved=0x7f010005;
        /**  Search icon displayed as a text field hint 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchHintIcon=0x7f0100a5;
        /**  Search icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchIcon=0x7f0100a4;
        /**  Style for the search query widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewStyle=0x7f010052;
        /**  A style that may be applied to buttons or other selectable items
             that should react to pressed and focus states, but that do not
             have a clear visual border along the edges. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectableItemBackground=0x7f010043;
        /**  Background drawable for borderless standalone items that need focus/pressed states. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectableItemBackgroundBorderless=0x7f010044;
        /**  How this item should display in the Action Bar, if present. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
                 Mutually exclusive with "ifRoom" and "always". </td></tr>
<tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
                 by the system. Favor this option over "always" where possible.
                 Mutually exclusive with "never" and "always". </td></tr>
<tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
                 the system's limits of how much stuff to put there. This may make
                 your action bar look bad on some screens. In most cases you should
                 use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
<tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
                 label with it even if it has an icon representation. </td></tr>
<tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
                 item. When expanded, the action view takes over a
                 larger segment of its container. </td></tr>
</table>
         */
        public static final int showAsAction=0x7f01009a;
        /**  Setting for which dividers to show. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>beginning</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int showDividers=0x7f0100af;
        /**  Whether to draw on/off text. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showText=0x7f0100d3;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int singleChoiceItemLayout=0x7f0100d7;
        /**  Whether bars should rotate or not during transition 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spinBars=0x7f0100c3;
        /**  Default Spinner style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerDropDownItemStyle=0x7f01003e;
        /**  Default Spinner style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerStyle=0x7f010079;
        /**  Whether to split the track and leave a gap for the thumb drawable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int splitTrack=0x7f0100d2;
        /**  State identifier indicating the popup will be above the anchor. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_above_anchor=0x7f0100c0;
        /**  Background for the section containing the action (e.g. voice search) 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int submitBackground=0x7f0100aa;
        /**  Specifies subtitle text used for navigationMode="normal" 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtitle=0x7f01007d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int subtitleTextAppearance=0x7f0100b2;
        /**  A color to apply to the subtitle string. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtitleTextColor=0x7f0100bf;
        /**  Specifies a style to use for subtitle text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int subtitleTextStyle=0x7f01007f;
        /**  Layout for query suggestion rows 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionRowLayout=0x7f0100a8;
        /**  Minimum width for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinWidth=0x7f0100d0;
        /**  Minimum space between the switch and caption text 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchPadding=0x7f0100d1;
        /**  Default style for the Switch widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchStyle=0x7f01007a;
        /**  TextAppearance style for text displayed on the switch thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchTextAppearance=0x7f0100cf;
        /**  Present the text in ALL CAPS. This may use a small-caps form when available. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int textAllCaps=0x7f0100ad;
        /**  Text color, typeface, size, and style for the text inside of a popup menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLargePopupMenu=0x7f010037;
        /**  The preferred TextAppearance for the primary text of list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItem=0x7f01005a;
        /**  The preferred TextAppearance for the primary text of small list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItemSmall=0x7f01005b;
        /**  Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultSubtitle=0x7f010050;
        /**  Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultTitle=0x7f01004f;
        /**  Text color, typeface, size, and style for small text inside of a popup menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmallPopupMenu=0x7f010038;
        /**  Color of list item text in alert dialogs. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorAlertDialogListItem=0x7f01006d;
        /**  Text color for urls in search suggestions, used by things like global search 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSearchUrl=0x7f010051;
        /**  Deprecated. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int theme=0x7f010096;
        /**  The thickness (stroke size) for the bar paint 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thickness=0x7f0100c9;
        /**  Amount of padding on either side of text within the switch thumb. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbTextPadding=0x7f0100ce;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int title=0x7f01000e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginBottom=0x7f0100b7;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginEnd=0x7f0100b5;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginStart=0x7f0100b4;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginTop=0x7f0100b6;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMargins=0x7f0100b3;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int titleTextAppearance=0x7f0100b1;
        /**  A color to apply to the title string. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleTextColor=0x7f0100be;
        /**  Specifies a style to use for title text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int titleTextStyle=0x7f01007e;
        /**  Default Toolar NavigationButtonStyle 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int toolbarNavigationButtonStyle=0x7f01004a;
        /**  Default Toolbar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int toolbarStyle=0x7f010049;
        /**  Drawable to use as the "track" that the switch thumb slides within. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int track=0x7f0100cd;
        /** 
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useDefaultMargins=0x7f010003;
        /**  Voice button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int voiceIcon=0x7f0100a6;
        /**  Flag indicating whether this window should have an Action Bar
             in place of the usual title bar. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionBar=0x7f010011;
        /**  Flag indicating whether this window's Action Bar should overlay
             application content. Does nothing if the window would not
             have an Action Bar. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionBarOverlay=0x7f010013;
        /**  Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionModeOverlay=0x7f010014;
        /**  A fixed height for the window along the major axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedHeightMajor=0x7f010018;
        /**  A fixed height for the window along the minor axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedHeightMinor=0x7f010016;
        /**  A fixed width for the window along the major axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedWidthMajor=0x7f010015;
        /**  A fixed width for the window along the minor axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedWidthMinor=0x7f010017;
        /**  The minimum width the window is allowed to be, along the major
             axis of the screen.  That is, when in landscape.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowMinWidthMajor=0x7f010019;
        /**  The minimum width the window is allowed to be, along the minor
             axis of the screen.  That is, when in portrait.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowMinWidthMinor=0x7f01001a;
        /**  Flag indicating whether there should be no title on this window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowNoTitle=0x7f010012;
    }
    public static final class bool {
        public static final int abc_action_bar_embed_tabs=0x7f0b0000;
        public static final int abc_action_bar_embed_tabs_pre_jb=0x7f0b0001;
        public static final int abc_action_bar_expanded_action_views_exclusive=0x7f0b0002;
        /**  Whether action menu items should be displayed in ALLCAPS or not.
         Defaults to true. If this is not appropriate for specific locales
         it should be disabled in that locale's resources. 
         */
        public static final int abc_config_actionMenuItemAllCaps=0x7f0b0005;
        /**  Whether action menu items should obey the "withText" showAsAction
    flag. This may be set to false for situations where space is
    extremely limited. 
 Whether action menu items should obey the "withText" showAsAction.
         This may be set to false for situations where space is
         extremely limited. 
         */
        public static final int abc_config_allowActionMenuItemTextWithIcon=0x7f0b0004;
        public static final int abc_config_closeDialogWhenTouchOutside=0x7f0b0006;
        public static final int abc_config_showMenuShortcutsWhenKeyboardPresent=0x7f0b0003;
        /**  no need for the dock app, we have Dreams now 
         */
        public static final int config_dockAppEnabled=0x7f0b0008;
        public static final int config_requiresScreenSaver=0x7f0b0007;
        public static final int config_rotateAlarmAlert=0x7f0b0009;
    }
    public static final class color {
        public static final int abc_background_cache_hint_selector_material_dark=0x7f0c0072;
        public static final int abc_background_cache_hint_selector_material_light=0x7f0c0073;
        public static final int abc_color_highlight_material=0x7f0c0074;
        public static final int abc_input_method_navigation_guard=0x7f0c0003;
        public static final int abc_primary_text_disable_only_material_dark=0x7f0c0075;
        public static final int abc_primary_text_disable_only_material_light=0x7f0c0076;
        public static final int abc_primary_text_material_dark=0x7f0c0077;
        public static final int abc_primary_text_material_light=0x7f0c0078;
        public static final int abc_search_url_text=0x7f0c0079;
        public static final int abc_search_url_text_normal=0x7f0c0000;
        public static final int abc_search_url_text_pressed=0x7f0c0002;
        public static final int abc_search_url_text_selected=0x7f0c0001;
        public static final int abc_secondary_text_material_dark=0x7f0c007a;
        public static final int abc_secondary_text_material_light=0x7f0c007b;
        public static final int accent_material_dark=0x7f0c0011;
        public static final int accent_material_light=0x7f0c0010;
        public static final int action_bar_button_text_color=0x7f0c0058;
        public static final int ampm_off=0x7f0c0053;
        public static final int ampm_on=0x7f0c0054;
        public static final int ampm_text_color=0x7f0c003d;
        public static final int background_floating_material_dark=0x7f0c0008;
        public static final int background_floating_material_light=0x7f0c0009;
        public static final int background_material_dark=0x7f0c0006;
        public static final int background_material_light=0x7f0c0007;
        public static final int bg_day_tint_color=0x7f0c007c;
        public static final int black=0x7f0c005b;
        public static final int black_16p=0x7f0c005e;
        public static final int black_54p=0x7f0c005d;
        public static final int black_87p=0x7f0c005c;
        public static final int blackish_selected=0x7f0c0060;
        public static final int blue=0x7f0c0042;
        public static final int blue_focused=0x7f0c0043;
        /**  White 50% 
         */
        public static final int bright_foreground_disabled_material_dark=0x7f0c001a;
        /**  Black 50% 
         */
        public static final int bright_foreground_disabled_material_light=0x7f0c001b;
        public static final int bright_foreground_inverse_material_dark=0x7f0c001c;
        public static final int bright_foreground_inverse_material_light=0x7f0c001d;
        public static final int bright_foreground_light_disabled=0x7f0c0065;
        public static final int bright_foreground_material_dark=0x7f0c0018;
        public static final int bright_foreground_material_light=0x7f0c0019;
        public static final int button_material_dark=0x7f0c0012;
        public static final int button_material_light=0x7f0c0013;
        public static final int calendar_header=0x7f0c0048;
        public static final int calendar_selected_date_text=0x7f0c004a;
        public static final int circle_background=0x7f0c003b;
        public static final int clock_gray=0x7f0c0067;
        public static final int clock_red=0x7f0c006b;
        public static final int clock_white=0x7f0c0066;
        public static final int color_accent=0x7f0c0063;
        public static final int control_highlight_color=0x7f0c006d;
        public static final int dark_gray=0x7f0c004e;
        public static final int darker_blue=0x7f0c0045;
        public static final int date_picker_selector=0x7f0c007d;
        public static final int date_picker_text_disabled=0x7f0c0047;
        public static final int date_picker_text_normal=0x7f0c0046;
        public static final int date_picker_view_animator=0x7f0c0049;
        public static final int date_picker_year_selector=0x7f0c007e;
        public static final int default_background=0x7f0c0068;
        public static final int dialog_gray=0x7f0c0059;
        public static final int dim_foreground_disabled_material_dark=0x7f0c0020;
        public static final int dim_foreground_disabled_material_light=0x7f0c0021;
        public static final int dim_foreground_material_dark=0x7f0c001e;
        public static final int dim_foreground_material_light=0x7f0c001f;
        public static final int done_disabled_dark=0x7f0c0052;
        public static final int done_text_color=0x7f0c007f;
        public static final int done_text_color_dark=0x7f0c0080;
        public static final int done_text_color_dark_disabled=0x7f0c0051;
        public static final int done_text_color_dark_normal=0x7f0c0050;
        public static final int done_text_color_disabled=0x7f0c003f;
        public static final int done_text_color_normal=0x7f0c003e;
        public static final int foreground_material_dark=0x7f0c0004;
        public static final int foreground_material_light=0x7f0c0005;
        public static final int hairline=0x7f0c0064;
        /**  TODO: This is 40% alpha on the default accent color. 
         */
        public static final int highlighted_text_material_dark=0x7f0c0024;
        /**  TODO: This is 40% alpha on the default accent color. 
         */
        public static final int highlighted_text_material_light=0x7f0c0025;
        public static final int hint_foreground_material_dark=0x7f0c0022;
        public static final int hint_foreground_material_light=0x7f0c0023;
        public static final int hot_pink=0x7f0c0062;
        public static final int light_gray=0x7f0c004d;
        public static final int line_background=0x7f0c003c;
        public static final int line_dark=0x7f0c004f;
        public static final int material_blue_grey_800=0x7f0c0037;
        public static final int material_blue_grey_900=0x7f0c0038;
        public static final int material_blue_grey_950=0x7f0c0039;
        public static final int material_deep_teal_200=0x7f0c0035;
        public static final int material_deep_teal_500=0x7f0c0036;
        public static final int material_grey_100=0x7f0c0033;
        public static final int material_grey_300=0x7f0c0032;
        public static final int material_grey_50=0x7f0c0034;
        public static final int material_grey_600=0x7f0c0031;
        public static final int material_grey_800=0x7f0c0030;
        public static final int material_grey_850=0x7f0c002f;
        public static final int material_grey_900=0x7f0c002e;
        public static final int neutral_pressed=0x7f0c0044;
        /**  Values for custom notification 
         */
        public static final int notif_text_grey=0x7f0c006c;
        public static final int notification_bg=0x7f0c006e;
        /**  Values for custom notification 
         */
        public static final int notification_divider=0x7f0c0071;
        public static final int notification_icon_bg=0x7f0c006f;
        public static final int notification_pressed=0x7f0c0070;
        public static final int numbers_text_color=0x7f0c0040;
        public static final int pressed_state_color=0x7f0c005a;
        public static final int primary_dark_material_dark=0x7f0c000c;
        public static final int primary_dark_material_light=0x7f0c000d;
        public static final int primary_material_dark=0x7f0c000a;
        public static final int primary_material_light=0x7f0c000b;
        /**  100% white 
         */
        public static final int primary_text_default_material_dark=0x7f0c0028;
        /**  87% black 
         */
        public static final int primary_text_default_material_light=0x7f0c0026;
        /**  30% of default values 
         */
        public static final int primary_text_disabled_material_dark=0x7f0c002c;
        /**  26% of default values 
         */
        public static final int primary_text_disabled_material_light=0x7f0c002a;
        /**  Colors for red theme 
         */
        public static final int red=0x7f0c004b;
        public static final int red_focused=0x7f0c004c;
        /**  26% white (foreground) 
         */
        public static final int ripple_material_dark=0x7f0c000e;
        /**  12% black (foreground) 
         */
        public static final int ripple_material_light=0x7f0c000f;
        public static final int screen_saver_color=0x7f0c0056;
        public static final int screen_saver_dim_color=0x7f0c0057;
        /**  70% white 
         */
        public static final int secondary_text_default_material_dark=0x7f0c0029;
        /**  54% black 
         */
        public static final int secondary_text_default_material_light=0x7f0c0027;
        public static final int secondary_text_disabled_material_dark=0x7f0c002d;
        public static final int secondary_text_disabled_material_light=0x7f0c002b;
        public static final int status_bar=0x7f0c0069;
        public static final int switch_thumb_disabled_material_dark=0x7f0c0016;
        public static final int switch_thumb_disabled_material_light=0x7f0c0017;
        public static final int switch_thumb_material_dark=0x7f0c0081;
        public static final int switch_thumb_material_light=0x7f0c0082;
        public static final int switch_thumb_normal_material_dark=0x7f0c0014;
        public static final int switch_thumb_normal_material_light=0x7f0c0015;
        public static final int time_picker_gray=0x7f0c006a;
        public static final int time_text_color=0x7f0c0055;
        public static final int timepicker_ampm=0x7f0c0083;
        public static final int timepicker_time=0x7f0c0084;
        public static final int transparent=0x7f0c0061;
        public static final int transparent_black=0x7f0c0041;
        public static final int white=0x7f0c003a;
        public static final int white_69p=0x7f0c005f;
    }
    public static final class dimen {
        /**  Default content inset of an action bar. 
 Default content inset of an action bar. 
         */
        public static final int abc_action_bar_content_inset_material=0x7f0a002b;
        /**  Default height of an action bar. 
 Default height of an action bar. 
 Default height of an action bar. 
         */
        public static final int abc_action_bar_default_height_material=0x7f0a002a;
        /**  Default end padding of an action bar. 
 Default end padding of an action bar. 
         */
        public static final int abc_action_bar_default_padding_end_material=0x7f0a002d;
        /**  Default start padding of an action bar. 
 Default start padding of an action bar. 
         */
        public static final int abc_action_bar_default_padding_start_material=0x7f0a002c;
        /**  Vertical padding around action bar icons. 
         */
        public static final int abc_action_bar_icon_vertical_padding_material=0x7f0a002e;
        /**  Padding to add to the end of the overflow action button. 
         */
        public static final int abc_action_bar_overflow_padding_end_material=0x7f0a0033;
        /**  Padding to add to the start of the overflow action button. 
         */
        public static final int abc_action_bar_overflow_padding_start_material=0x7f0a0032;
        /**  Size of the indeterminate Progress Bar 
 Size of the indeterminate Progress Bar 
         */
        public static final int abc_action_bar_progress_bar_size=0x7f0a0009;
        /**  Maximum height for a stacked tab bar as part of an action bar 
         */
        public static final int abc_action_bar_stacked_max_height=0x7f0a0008;
        /**  Maximum width for a stacked action bar tab. This prevents
         action bar tabs from becoming too wide on a wide screen when only
         a few are present. 
         */
        public static final int abc_action_bar_stacked_tab_max_width=0x7f0a0007;
        /**  Bottom margin for action bar subtitles 
         */
        public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f0a0030;
        /**  Top margin for action bar subtitles 
         */
        public static final int abc_action_bar_subtitle_top_margin_material=0x7f0a002f;
        public static final int abc_action_button_min_height_material=0x7f0a0036;
        public static final int abc_action_button_min_width_material=0x7f0a0035;
        public static final int abc_action_button_min_width_overflow_material=0x7f0a0034;
        /**  Dialog button bar height 
 Dialog button bar height 
         */
        public static final int abc_alert_dialog_button_bar_height=0x7f0a0021;
        public static final int abc_button_inset_horizontal_material=0x7f0a0015;
        public static final int abc_button_inset_vertical_material=0x7f0a0014;
        public static final int abc_button_padding_horizontal_material=0x7f0a0017;
        /**  Default inner padding within buttons 
         */
        public static final int abc_button_padding_vertical_material=0x7f0a0016;
        /**  The maximum width we would prefer dialogs to be.  0 if there is no
    maximum (let them grow as large as the screen).  Actual values are
    specified for -large and -xlarge configurations. 
 see comment in values/config.xml 
 see comment in values/config.xml 
         */
        public static final int abc_config_prefDialogWidth=0x7f0a0006;
        /**  Default rounded corner for controls 
         */
        public static final int abc_control_corner_material=0x7f0a001a;
        /**  Default insets (outer padding) around controls 
         */
        public static final int abc_control_inset_material=0x7f0a0018;
        /**  Default inner padding within controls 
         */
        public static final int abc_control_padding_material=0x7f0a0019;
        /**  Padding above and below selection dialog lists. 
         */
        public static final int abc_dialog_list_padding_vertical_material=0x7f0a0022;
        /**  The platform's desired minimum size for a dialog's width when it
         is along the major axis (that is the screen is landscape).  This may
         be either a fraction or a dimension. 
         */
        public static final int abc_dialog_min_width_major=0x7f0a0023;
        /**  The platform's desired minimum size for a dialog's width when it
         is along the minor axis (that is the screen is portrait).  This may
         be either a fraction or a dimension. 
         */
        public static final int abc_dialog_min_width_minor=0x7f0a0024;
        public static final int abc_dialog_padding_material=0x7f0a001f;
        public static final int abc_dialog_padding_top_material=0x7f0a0020;
        public static final int abc_disabled_alpha_material_dark=0x7f0a0048;
        public static final int abc_disabled_alpha_material_light=0x7f0a0047;
        /**  Width of the icon in a dropdown list 
         */
        public static final int abc_dropdownitem_icon_width=0x7f0a000f;
        /**  Text padding for dropdown items 
         */
        public static final int abc_dropdownitem_text_padding_left=0x7f0a000d;
        public static final int abc_dropdownitem_text_padding_right=0x7f0a000e;
        public static final int abc_edit_text_inset_bottom_material=0x7f0a001d;
        public static final int abc_edit_text_inset_horizontal_material=0x7f0a001b;
        public static final int abc_edit_text_inset_top_material=0x7f0a001c;
        public static final int abc_floating_window_z=0x7f0a0046;
        /**  Default padding for list items. This should match the action bar
         content inset so that ListActivity items line up correctly. 
         */
        public static final int abc_list_item_padding_horizontal_material=0x7f0a0031;
        public static final int abc_panel_menu_list_width=0x7f0a000a;
        /**  Preferred width of the search view. 
         */
        public static final int abc_search_view_preferred_width=0x7f0a000c;
        /**  Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
         */
        public static final int abc_search_view_text_min_width=0x7f0a000b;
        /**  Since optical insets are not available pre-v18, we add a small amount of padding 
 Since SwitchCompat can use optical insets on v18+, reset the manual padding 
         */
        public static final int abc_switch_padding=0x7f0a001e;
        public static final int abc_text_size_body_1_material=0x7f0a0040;
        public static final int abc_text_size_body_2_material=0x7f0a003f;
        public static final int abc_text_size_button_material=0x7f0a0042;
        public static final int abc_text_size_caption_material=0x7f0a0041;
        public static final int abc_text_size_display_1_material=0x7f0a003a;
        public static final int abc_text_size_display_2_material=0x7f0a0039;
        public static final int abc_text_size_display_3_material=0x7f0a0038;
        public static final int abc_text_size_display_4_material=0x7f0a0037;
        public static final int abc_text_size_headline_material=0x7f0a003b;
        public static final int abc_text_size_large_material=0x7f0a0043;
        public static final int abc_text_size_medium_material=0x7f0a0044;
        public static final int abc_text_size_menu_material=0x7f0a003e;
        public static final int abc_text_size_small_material=0x7f0a0045;
        public static final int abc_text_size_subhead_material=0x7f0a003d;
        /**  Use the default subtitle sizes on tablets. 
 Default text size for action bar subtitle.
         */
        public static final int abc_text_size_subtitle_material_toolbar=0x7f0a0029;
        public static final int abc_text_size_title_material=0x7f0a003c;
        /**  Use the default title sizes on tablets. 
 Default text size for action bar title.
         */
        public static final int abc_text_size_title_material_toolbar=0x7f0a0028;
        public static final int actionbar_tab_padding=0x7f0a0083;
        public static final int actionbar_title_font_size=0x7f0a0084;
        public static final int alarm_alert_clock_padding_left=0x7f0a00dc;
        /**  Width of the clock, for use with alarm buttons. 
 Width of the clock, for use with alarm buttons. 
         */
        public static final int alarm_alert_display_width=0x7f0a00c0;
        /**  Bottom padding for alarm lock screen hint text 
         */
        public static final int alarm_alert_hint_padding=0x7f0a00c1;
        public static final int alarm_clock_vertical_margin=0x7f0a0081;
        public static final int alarm_info_font_size=0x7f0a009c;
        public static final int alarm_label_padding=0x7f0a0077;
        public static final int alarm_label_size=0x7f0a00a4;
        public static final int alarm_lockscreen_alarm_horizontal_padding=0x7f0a008e;
        public static final int alarm_lockscreen_alarm_vertical_padding=0x7f0a008f;
        public static final int alarm_lockscreen_bottom_margin=0x7f0a0091;
        public static final int alarm_lockscreen_pulse_radius=0x7f0a0090;
        public static final int alarm_min_distance=0x7f0a0089;
        public static final int alarm_picker_dialog_horizontal_margin=0x7f0a009e;
        public static final int alarm_picker_dialog_vertical_margin=0x7f0a009f;
        public static final int alarm_picker_margin_bottom=0x7f0a00a0;
        public static final int alarm_side_padding=0x7f0a007d;
        public static final int alarm_text_font_size=0x7f0a0088;
        public static final int alarm_text_padding=0x7f0a0087;
        public static final int alarm_time_font_size=0x7f0a009b;
        public static final int alarm_undo_bar_horizontal_margin=0x7f0a008a;
        public static final int alert_dialog_title_height=0x7f0a0078;
        public static final int ampm_label_size=0x7f0a004b;
        /**  Add for the hour in alarm date picker disappear issue. 
 Add for the the am/pm show multi line issue. 
         */
        public static final int ampm_left_padding=0x7f0a004d;
        public static final int ampm_text_size=0x7f0a006f;
        public static final int analog_clock_margin=0x7f0a00b8;
        public static final int big_font_size=0x7f0a0092;
        public static final int body_font_padding=0x7f0a00a1;
        public static final int body_font_size=0x7f0a0099;
        /**  Analog clock size in the the screen saver 
         */
        public static final int bottom_text_size=0x7f0a0082;
        public static final int bottom_text_spacing_analog=0x7f0a007b;
        public static final int bottom_text_spacing_analog_small=0x7f0a007c;
        public static final int bottom_text_spacing_digital=0x7f0a0079;
        public static final int button_font_size=0x7f0a00a2;
        /**  Height of the button footers. 56 height and 16 on top and bottom. 
         */
        public static final int button_footer_height=0x7f0a00c5;
        /**  Negative value of the height of the button footers, for use with lightsout. 
         */
        public static final int button_footer_height_neg=0x7f0a00c6;
        /**  Size of margin for circles. 
         */
        public static final int circle_margin=0x7f0a00b7;
        /**  Size of margin for circles. 
 Size of margin for circles. 
 Size of margin for circles. 
         */
        public static final int circle_margin_top=0x7f0a00b6;
        /**  M: Change for timer or stopwatch circle size Suitable for Screen of display WVGA
 M:add for timer or stopwatch circle size Suitable for Screen of display WVGA
 M:add for timer or stopwatch circle size Suitable for Screen of display WVGA
         */
        public static final int circle_size=0x7f0a00ba;
        public static final int circletimer_circle_size=0x7f0a008c;
        public static final int circletimer_dot_size=0x7f0a008b;
        public static final int circletimer_marker_size=0x7f0a008d;
        public static final int cities_list_item_height=0x7f0a00b5;
        public static final int clock_fragment_end_padding=0x7f0a0080;
        public static final int clock_side_padding=0x7f0a007e;
        /**  clock_side_padding_reduced = clock_side_padding - world_clock_end_padding.
 M: Modified the value to make UI display perfect.
         */
        public static final int clock_side_padding_reduced=0x7f0a007f;
        /**  Bottom margin for the expand area 
         */
        public static final int collapse_expand_height=0x7f0a00d3;
        public static final int date_picker_component_width=0x7f0a0054;
        public static final int date_picker_header_height=0x7f0a0055;
        public static final int date_picker_header_text_size=0x7f0a0060;
        /**  M: 210dp is suitable for hvga 
 240dp is suitable for wvga 
         */
        public static final int date_picker_view_animator_height=0x7f0a0057;
        public static final int date_text_size=0x7f0a0070;
        public static final int day_button_font_size=0x7f0a009a;
        public static final int day_number_select_circle_radius=0x7f0a005b;
        public static final int day_number_size=0x7f0a0062;
        /**  The default gap between components in a layout. 
         */
        public static final int default_gap=0x7f0a0000;
        public static final int dialog_button_font_size=0x7f0a00a3;
        /**  The platform's desired fixed height for a dialog along the major axis
         (the screen is in portrait). This may be either a fraction or a dimension.
 The platform's desired fixed height for a dialog along the major axis
         (the screen is in portrait). This may be either a fraction or a dimension.
 The platform's desired fixed height for a dialog along the major axis
         (the screen is in portrait). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_height_major=0x7f0a0012;
        /**  The platform's desired fixed height for a dialog along the minor axis
         (the screen is in landscape). This may be either a fraction or a dimension.
 The platform's desired fixed height for a dialog along the minor axis
         (the screen is in landscape). This may be either a fraction or a dimension.
 The platform's desired fixed height for a dialog along the minor axis
         (the screen is in landscape). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_height_minor=0x7f0a0013;
        /**  The platform's desired fixed width for a dialog along the major axis
         (the screen is in landscape). This may be either a fraction or a dimension.
 The platform's desired fixed width for a dialog along the major axis
         (the screen is in landscape). This may be either a fraction or a dimension.
 The platform's desired fixed width for a dialog along the major axis
         (the screen is in landscape). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_width_major=0x7f0a0010;
        /**  The platform's desired fixed width for a dialog along the minor axis
         (the screen is in portrait). This may be either a fraction or a dimension.
 The platform's desired fixed width for a dialog along the minor axis
         (the screen is in portrait). This may be either a fraction or a dimension.
 The platform's desired fixed width for a dialog along the minor axis
         (the screen is in portrait). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_width_minor=0x7f0a0011;
        public static final int dialog_height=0x7f0a0065;
        /** padding should be (in dip) ~ 60% dialpad_font_size 
         */
        public static final int dialpad_digit_padding=0x7f0a00af;
        public static final int dialpad_font_size=0x7f0a00ae;
        public static final int digital_main_clock_text_size=0x7f0a00df;
        public static final int digital_widget_city_margin_bottom=0x7f0a00d2;
        /**  top margin for digital_appwidget_listview 
         */
        public static final int digital_widget_list_margin_top=0x7f0a00d1;
        /**  sum of fixed heights 
         */
        public static final int digital_widget_list_min_fixed_height=0x7f0a00d0;
        /**  sum of scaled heights 
         */
        public static final int digital_widget_list_min_scaled_height=0x7f0a00cf;
        public static final int digital_world_clock_ampm_text_size=0x7f0a00de;
        public static final int digital_world_clock_text_size=0x7f0a00dd;
        public static final int disabled_alpha_material_dark=0x7f0a0002;
        public static final int disabled_alpha_material_light=0x7f0a0001;
        public static final int done_button_height=0x7f0a0058;
        public static final int done_label_size=0x7f0a004c;
        /**  Add for the hour in alarm date picker disappear issue. 
 Add for the hour in alarm date picker disappear issue. 
         */
        public static final int extra_time_label_margin=0x7f0a004a;
        public static final int fastscroll_preview_padding=0x7f0a00d8;
        /**  Dimens for cities fastscroll 
         */
        public static final int fastscroll_thumb_height=0x7f0a00d6;
        public static final int fastscroll_thumb_width=0x7f0a00d7;
        public static final int fastscroll_track_width=0x7f0a00d9;
        public static final int footer_button_layout_margin=0x7f0a0086;
        public static final int footer_button_size=0x7f0a0085;
        public static final int footer_height=0x7f0a0050;
        public static final int glowpadview_margin_right=0x7f0a00e3;
        /**  Size of alarm alert outer ring. 
 Size of alarm alert outer ring. 
 Size of alarm alert outer ring. 
         */
        public static final int glowpadview_outerring_diameter=0x7f0a00e0;
        /**  Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
 Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
 Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
         */
        public static final int glowpadview_target_placement_radius=0x7f0a00e1;
        /**  Divider height 
         */
        public static final int hairline_height=0x7f0a00d4;
        public static final int header_font_size=0x7f0a0098;
        public static final int header_height=0x7f0a004f;
        public static final int highlight_alpha_material_colored=0x7f0a0005;
        public static final int highlight_alpha_material_dark=0x7f0a0004;
        public static final int highlight_alpha_material_light=0x7f0a0003;
        public static final int label_font_size=0x7f0a0095;
        public static final int label_margin_big=0x7f0a00ac;
        public static final int label_margin_small=0x7f0a00ad;
        public static final int label_text_size=0x7f0a006d;
        /**  M: only be used in layout-land/ in land mode. 
         */
        public static final int left_side_width=0x7f0a0066;
        /**  M: To make the am/pm font size suit for phone.
 M: To make the am/pm font size suit for tablet.
 M: To make the am/pm font size suit for tablet.
         */
        public static final int main_ampm_font_size=0x7f0a0097;
        public static final int main_clock_bottom_margin=0x7f0a00da;
        public static final int main_clock_padding=0x7f0a00ab;
        public static final int medium_font_padding=0x7f0a00a5;
        public static final int medium_font_size=0x7f0a0093;
        public static final int medium_space_bottom=0x7f0a00a8;
        public static final int medium_space_top=0x7f0a00a7;
        public static final int min_digital_widget_height=0x7f0a00ce;
        /**  width/height of layout/digital_widget_time 
         */
        public static final int min_digital_widget_width=0x7f0a00cd;
        public static final int min_lock=0x7f0a006c;
        public static final int min_swipe=0x7f0a006a;
        public static final int min_vert=0x7f0a006b;
        public static final int minimum_margin_sides=0x7f0a0051;
        public static final int minimum_margin_top_bottom=0x7f0a0052;
        public static final int month_day_label_text_size=0x7f0a005a;
        public static final int month_label_size=0x7f0a0061;
        public static final int month_list_item_header_height=0x7f0a0059;
        public static final int month_list_item_padding=0x7f0a0067;
        public static final int month_list_item_size=0x7f0a0068;
        public static final int month_select_circle_radius=0x7f0a005c;
        public static final int next_alarm_text_size=0x7f0a0071;
        public static final int no_alarm_font_size=0x7f0a009d;
        /**  The width and height of the notification icon 
         */
        public static final int notification_icon_size=0x7f0a00bd;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_height=0x7f0a0026;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_width=0x7f0a0025;
        /**  Size of smaller notification text (see TextAppearance.StatusBar.EventContent.Line2, Info,
         Time) 
         */
        public static final int notification_subtext_size=0x7f0a0027;
        /**  Size of notification text (see TextAppearance.StatusBar.EventContent) 
         */
        public static final int notification_text_size=0x7f0a00be;
        /**  Size of notification text titles (see TextAppearance.StatusBar.EventContent.Title) 
         */
        public static final int notification_title_text_size=0x7f0a00bf;
        /**  M: avoid view width out of parent view's boundary issue in land mode. 
         */
        public static final int picker_dimen=0x7f0a0053;
        public static final int screensaver_margin=0x7f0a0076;
        public static final int selected_calendar_layout_height=0x7f0a0056;
        public static final int selected_date_day_size=0x7f0a005e;
        public static final int selected_date_month_size=0x7f0a005f;
        public static final int selected_date_year_size=0x7f0a005d;
        public static final int separator_padding=0x7f0a004e;
        public static final int small_font_size=0x7f0a0094;
        public static final int small_space=0x7f0a00a6;
        public static final int stopwatch_circle_margin_bottom=0x7f0a00db;
        /**  stopwatch_list_bottom_spacing = footer_button_size + footer_button_layout_margin 
 stopwatch_list_bottom_spacing = footer_button_size + footer_button_layout_margin 
         */
        public static final int stopwatch_list_bottom_spacing=0x7f0a00bb;
        /**  M:add for stopwatch's lap list 
 M:add for stopwatch's lap list 
         */
        public static final int stopwatch_list_margin_start=0x7f0a00e2;
        public static final int style_label_space=0x7f0a00a9;
        public static final int sw_item_space=0x7f0a00aa;
        public static final int sw_padding_end=0x7f0a00bc;
        public static final int time_label_right_padding=0x7f0a0069;
        public static final int time_label_size=0x7f0a0049;
        public static final int time_margin_top=0x7f0a0072;
        public static final int time_text_size=0x7f0a006e;
        /**  88dip + 0.5 of footer_button_size 
 88dip + 0.5 of footer_button_size 
         */
        public static final int timer_cancel_end_margin=0x7f0a0075;
        public static final int timer_circle_margin=0x7f0a00b9;
        /**  Height of space between timers. 
         */
        public static final int timer_divider_height=0x7f0a00c7;
        public static final int timer_list_padding_bottom=0x7f0a0074;
        public static final int timer_padding_left=0x7f0a0073;
        public static final int timer_setup_button_size=0x7f0a00b1;
        public static final int timer_setup_delete_padding=0x7f0a00b3;
        /** margin should be ~ half timer_setup_font_size 
         */
        public static final int timer_setup_delete_start_margin=0x7f0a00b2;
        /**  M:add for timer's delete button when textsize is set as extra large 
         */
        public static final int timer_setup_font_size=0x7f0a00b0;
        public static final int timer_setup_label_size=0x7f0a00b4;
        public static final int toast_bar_bottom_margin_in_conversation=0x7f0a00c4;
        public static final int top_text_spacing_digital=0x7f0a007a;
        /**  The minimum height/width of any touch target 
         */
        public static final int touch_target_min_size=0x7f0a00d5;
        public static final int widget_24_medium_font_size=0x7f0a00ca;
        /**  Digital Widget settings (keyguard|home_screen) 
 Clock and world clock sizes 
 Use dp on purpose to ensure consistency across multiple screen sizes. 
 Digital Widget settings (keyguard|home_screen) 
 Clock and world clock sizes 
 Digital Widget settings (keyguard|home_screen) 
 Use larger fonts 
 Use dp on purpose to ensure consistency across multiple screen sizes 
 Digital Widget settings (keyguard|home_screen) 
 Clock and world clock sizes 
         */
        public static final int widget_big_font_size=0x7f0a00c8;
        /**  Hour and minute spacing 
         */
        public static final int widget_big_time_margin_right=0x7f0a00cb;
        /**  Use dp on purpose to ensure consistency across multiple screen sizes. 
 Use dp on purpose to ensure consistency across multiple screen sizes. 
 Use dp on purpose to ensure consistency across multiple screen sizes. 
 Use dp on purpose to ensure consistency across multiple screen sizes 
         */
        public static final int widget_label_font_size=0x7f0a0096;
        public static final int widget_medium_font_size=0x7f0a00c9;
        public static final int widget_medium_time_margin_right=0x7f0a00cc;
        /**  Size of time zone analog clocks in world clock. 
 Size of analog clock in world clock. 
         */
        public static final int world_clock_analog_size=0x7f0a00c2;
        public static final int world_clock_margin=0x7f0a00c3;
        public static final int year_label_height=0x7f0a0063;
        public static final int year_label_text_size=0x7f0a0064;
    }
    public static final class drawable {
        public static final int abc_ab_share_pack_mtrl_alpha=0x7f020000;
        public static final int abc_action_bar_item_background_material=0x7f020001;
        public static final int abc_btn_borderless_material=0x7f020002;
        public static final int abc_btn_check_material=0x7f020003;
        public static final int abc_btn_check_to_on_mtrl_000=0x7f020004;
        public static final int abc_btn_check_to_on_mtrl_015=0x7f020005;
        public static final int abc_btn_colored_material=0x7f020006;
        public static final int abc_btn_default_mtrl_shape=0x7f020007;
        public static final int abc_btn_radio_material=0x7f020008;
        public static final int abc_btn_radio_to_on_mtrl_000=0x7f020009;
        public static final int abc_btn_radio_to_on_mtrl_015=0x7f02000a;
        public static final int abc_btn_rating_star_off_mtrl_alpha=0x7f02000b;
        public static final int abc_btn_rating_star_on_mtrl_alpha=0x7f02000c;
        public static final int abc_btn_switch_to_on_mtrl_00001=0x7f02000d;
        public static final int abc_btn_switch_to_on_mtrl_00012=0x7f02000e;
        public static final int abc_cab_background_internal_bg=0x7f02000f;
        public static final int abc_cab_background_top_material=0x7f020010;
        public static final int abc_cab_background_top_mtrl_alpha=0x7f020011;
        public static final int abc_control_background_material=0x7f020012;
        public static final int abc_dialog_material_background_dark=0x7f020013;
        public static final int abc_dialog_material_background_light=0x7f020014;
        public static final int abc_edit_text_material=0x7f020015;
        public static final int abc_ic_ab_back_mtrl_am_alpha=0x7f020016;
        public static final int abc_ic_clear_mtrl_alpha=0x7f020017;
        public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f020018;
        public static final int abc_ic_go_search_api_mtrl_alpha=0x7f020019;
        public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f02001a;
        public static final int abc_ic_menu_cut_mtrl_alpha=0x7f02001b;
        public static final int abc_ic_menu_moreoverflow_mtrl_alpha=0x7f02001c;
        public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f02001d;
        public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f02001e;
        public static final int abc_ic_menu_share_mtrl_alpha=0x7f02001f;
        public static final int abc_ic_search_api_mtrl_alpha=0x7f020020;
        public static final int abc_ic_voice_search_api_mtrl_alpha=0x7f020021;
        public static final int abc_item_background_holo_dark=0x7f020022;
        public static final int abc_item_background_holo_light=0x7f020023;
        public static final int abc_list_divider_mtrl_alpha=0x7f020024;
        public static final int abc_list_focused_holo=0x7f020025;
        public static final int abc_list_longpressed_holo=0x7f020026;
        public static final int abc_list_pressed_holo_dark=0x7f020027;
        public static final int abc_list_pressed_holo_light=0x7f020028;
        public static final int abc_list_selector_background_transition_holo_dark=0x7f020029;
        public static final int abc_list_selector_background_transition_holo_light=0x7f02002a;
        public static final int abc_list_selector_disabled_holo_dark=0x7f02002b;
        public static final int abc_list_selector_disabled_holo_light=0x7f02002c;
        public static final int abc_list_selector_holo_dark=0x7f02002d;
        public static final int abc_list_selector_holo_light=0x7f02002e;
        public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f02002f;
        public static final int abc_popup_background_mtrl_mult=0x7f020030;
        public static final int abc_ratingbar_full_material=0x7f020031;
        public static final int abc_spinner_mtrl_am_alpha=0x7f020032;
        public static final int abc_spinner_textfield_background_material=0x7f020033;
        public static final int abc_switch_thumb_material=0x7f020034;
        public static final int abc_switch_track_mtrl_alpha=0x7f020035;
        public static final int abc_tab_indicator_material=0x7f020036;
        public static final int abc_tab_indicator_mtrl_alpha=0x7f020037;
        public static final int abc_text_cursor_material=0x7f020038;
        public static final int abc_textfield_activated_mtrl_alpha=0x7f020039;
        public static final int abc_textfield_default_mtrl_alpha=0x7f02003a;
        public static final int abc_textfield_search_activated_mtrl_alpha=0x7f02003b;
        public static final int abc_textfield_search_default_mtrl_alpha=0x7f02003c;
        public static final int abc_textfield_search_material=0x7f02003d;
        public static final int alarm_background_normal=0x7f02003e;
        public static final int appwidget_analog_clock_preview=0x7f02003f;
        public static final int appwidget_clock_dial=0x7f020040;
        public static final int appwidget_clock_hour=0x7f020041;
        public static final int appwidget_clock_minute=0x7f020042;
        public static final int appwidget_digital_clock_preview=0x7f020043;
        public static final int bg_circle_accent=0x7f020044;
        public static final int bg_circle_white=0x7f020045;
        public static final int bg_day_selected=0x7f020046;
        public static final int bg_edittext_activated=0x7f020047;
        public static final int bg_edittext_default=0x7f020048;
        public static final int bg_gray_circle=0x7f020049;
        public static final int clock_analog_dial=0x7f02004a;
        public static final int clock_analog_dial_mipmap=0x7f02004b;
        public static final int clock_analog_hour=0x7f02004c;
        public static final int clock_analog_hour_mipmap=0x7f02004d;
        public static final int clock_analog_minute=0x7f02004e;
        public static final int clock_analog_minute_mipmap=0x7f02004f;
        public static final int clock_analog_second=0x7f020050;
        public static final int clock_analog_second_mipmap=0x7f020051;
        public static final int divider=0x7f020052;
        public static final int done_background_color=0x7f020053;
        public static final int done_background_color_dark=0x7f020054;
        public static final int fastscroll_preview=0x7f020055;
        public static final int fastscroll_preview_left=0x7f020056;
        public static final int fastscroll_preview_right=0x7f020057;
        public static final int fastscroll_thumb=0x7f020058;
        public static final int fastscroll_track=0x7f020059;
        public static final int floating_action_button=0x7f02005a;
        public static final int horizontal_divider=0x7f02005b;
        public static final int ic_add_24dp=0x7f02005c;
        public static final int ic_add_timer=0x7f02005d;
        public static final int ic_add_white_24dp=0x7f02005e;
        public static final int ic_alarm=0x7f02005f;
        public static final int ic_alarm_off_24dp=0x7f020060;
        public static final int ic_alarm_off_white_24dp=0x7f020061;
        public static final int ic_alarm_off_white_80dp=0x7f020062;
        public static final int ic_alarm_small=0x7f020063;
        public static final int ic_backspace=0x7f020064;
        public static final int ic_backspace_disabled=0x7f020065;
        public static final int ic_backspace_normal=0x7f020066;
        public static final int ic_cancel=0x7f020067;
        public static final int ic_clock=0x7f020068;
        public static final int ic_delete=0x7f020069;
        public static final int ic_delete_small=0x7f02006a;
        public static final int ic_expand_down=0x7f02006b;
        public static final int ic_fab_alarm=0x7f02006c;
        public static final int ic_fab_pause=0x7f02006d;
        public static final int ic_fab_play=0x7f02006e;
        public static final int ic_fab_plus=0x7f02006f;
        public static final int ic_fab_stop=0x7f020070;
        public static final int ic_globe=0x7f020071;
        public static final int ic_label=0x7f020072;
        public static final int ic_label_normal=0x7f020073;
        public static final int ic_label_pressed=0x7f020074;
        public static final int ic_lap=0x7f020075;
        public static final int ic_lap_24dp=0x7f020076;
        public static final int ic_lap_white_24dp=0x7f020077;
        public static final int ic_noalarms=0x7f020078;
        public static final int ic_plusone=0x7f020079;
        public static final int ic_reset=0x7f02007a;
        public static final int ic_reset_24dp=0x7f02007b;
        public static final int ic_reset_white_24dp=0x7f02007c;
        public static final int ic_ringtone=0x7f02007d;
        public static final int ic_share=0x7f02007e;
        public static final int ic_snooze_24dp=0x7f02007f;
        public static final int ic_snooze_white_24dp=0x7f020080;
        public static final int ic_snooze_white_80dp=0x7f020081;
        public static final int ic_start_24dp=0x7f020082;
        public static final int ic_start_white_24dp=0x7f020083;
        public static final int ic_stop_24dp=0x7f020084;
        public static final int ic_stop_white_24dp=0x7f020085;
        public static final int ic_stopwatch=0x7f020086;
        public static final int ic_swipe_circle_bottom=0x7f020087;
        public static final int ic_swipe_circle_dark=0x7f020088;
        public static final int ic_swipe_circle_light=0x7f020089;
        public static final int ic_swipe_circle_top=0x7f02008a;
        public static final int ic_tab_alarm=0x7f02008b;
        public static final int ic_tab_alarm_activated=0x7f02008c;
        public static final int ic_tab_alarm_normal=0x7f02008d;
        public static final int ic_tab_clock=0x7f02008e;
        public static final int ic_tab_clock_activated=0x7f02008f;
        public static final int ic_tab_clock_normal=0x7f020090;
        public static final int ic_tab_stopwatch=0x7f020091;
        public static final int ic_tab_stopwatch_activated=0x7f020092;
        public static final int ic_tab_stopwatch_normal=0x7f020093;
        public static final int ic_tab_timer=0x7f020094;
        public static final int ic_tab_timer_activated=0x7f020095;
        public static final int ic_tab_timer_normal=0x7f020096;
        public static final int ic_timer=0x7f020097;
        public static final int notification_background=0x7f020098;
        public static final int notification_icon_bg=0x7f020099;
        public static final int notification_template_icon_bg=0x7f02009f;
        public static final int panel_undo_holo=0x7f02009a;
        public static final int stat_notify_alarm=0x7f02009b;
        public static final int stat_notify_stopwatch=0x7f02009c;
        public static final int stat_notify_timer=0x7f02009d;
        public static final int toggle_circle=0x7f02009e;
    }
    public static final class id {
        public static final int action0=0x7f0e00a4;
        public static final int action_bar=0x7f0e0050;
        public static final int action_bar_activity_content=0x7f0e0003;
        public static final int action_bar_container=0x7f0e004f;
        public static final int action_bar_root=0x7f0e004b;
        public static final int action_bar_spinner=0x7f0e0002;
        public static final int action_bar_subtitle=0x7f0e0034;
        public static final int action_bar_title=0x7f0e0033;
        public static final int action_button=0x7f0e0060;
        public static final int action_context_bar=0x7f0e0051;
        public static final int action_divider=0x7f0e00a8;
        public static final int action_menu_divider=0x7f0e0005;
        public static final int action_menu_presenter=0x7f0e0006;
        public static final int action_mode_bar=0x7f0e004d;
        public static final int action_mode_bar_stub=0x7f0e004c;
        public static final int action_mode_close_button=0x7f0e0035;
        public static final int action_text=0x7f0e0061;
        public static final int activity_chooser_view_content=0x7f0e0036;
        public static final int alarm=0x7f0e0067;
        public static final int alarm_item=0x7f0e0075;
        public static final int alarm_layout=0x7f0e0074;
        public static final int alarms_empty_view=0x7f0e006e;
        public static final int alarms_footer_view=0x7f0e0071;
        public static final int alarms_list=0x7f0e006d;
        public static final int alert=0x7f0e0069;
        public static final int alertTitle=0x7f0e0040;
        public static final int alert_info=0x7f0e006b;
        public static final int alert_title=0x7f0e006a;
        public static final int alignBounds=0x7f0e000c;
        public static final int alignMargins=0x7f0e000d;
        public static final int always=0x7f0e002c;
        public static final int ampm_hitspace=0x7f0e00cd;
        public static final int ampm_label=0x7f0e00ce;
        public static final int analog_appwidget=0x7f0e0085;
        public static final int analog_clock=0x7f0e009a;
        public static final int animator=0x7f0e0095;
        public static final int arrow=0x7f0e0084;
        public static final int beginning=0x7f0e0031;
        public static final int bottom=0x7f0e000e;
        public static final int bottom_space=0x7f0e00b9;
        public static final int buttonPanel=0x7f0e0046;
        public static final int cancel_action=0x7f0e00a5;
        public static final int cancel_button=0x7f0e00b1;
        public static final int center=0x7f0e000f;
        public static final int center_horizontal=0x7f0e0010;
        public static final int center_vertical=0x7f0e0011;
        public static final int center_view=0x7f0e00c7;
        public static final int checkbox=0x7f0e0048;
        public static final int choose_ringtone=0x7f0e007d;
        public static final int chronometer=0x7f0e00ab;
        public static final int cities=0x7f0e008c;
        public static final int cities_list=0x7f0e0086;
        public static final int city_day=0x7f0e00f3;
        public static final int city_day_left=0x7f0e00f8;
        public static final int city_day_right=0x7f0e00fb;
        public static final int city_left=0x7f0e00f4;
        public static final int city_name=0x7f0e008a;
        public static final int city_name_layout=0x7f0e00f2;
        public static final int city_name_left=0x7f0e00f7;
        public static final int city_name_right=0x7f0e00fa;
        public static final int city_onoff=0x7f0e0089;
        public static final int city_spacer=0x7f0e00fc;
        public static final int city_time=0x7f0e008b;
        public static final int clip_horizontal=0x7f0e0012;
        public static final int clip_vertical=0x7f0e0013;
        public static final int collapseActionView=0x7f0e002d;
        public static final int collapse_expand=0x7f0e0080;
        public static final int content=0x7f0e0062;
        public static final int contentPanel=0x7f0e0041;
        public static final int custom=0x7f0e0045;
        public static final int customPanel=0x7f0e0044;
        public static final int date=0x7f0e009b;
        public static final int date_picker_day=0x7f0e0093;
        public static final int date_picker_header=0x7f0e008f;
        public static final int date_picker_month=0x7f0e0092;
        public static final int date_picker_month_and_day=0x7f0e0091;
        public static final int date_picker_year=0x7f0e0094;
        public static final int day_picker_selected_date_layout=0x7f0e0090;
        public static final int daysOfWeek=0x7f0e0076;
        public static final int decor_content_parent=0x7f0e004e;
        public static final int default_activity_button=0x7f0e0039;
        public static final int delete=0x7f0e0081;
        public static final int description_text=0x7f0e005f;
        public static final int desk_clock_pager=0x7f0e0096;
        public static final int digital_appwidget=0x7f0e009d;
        public static final int digital_appwidget_listview=0x7f0e009e;
        public static final int digital_clock=0x7f0e0063;
        public static final int disableHome=0x7f0e0020;
        public static final int dismiss=0x7f0e0066;
        public static final int divider=0x7f0e00d5;
        public static final int done=0x7f0e008e;
        public static final int done_button=0x7f0e00d3;
        public static final int edit_label=0x7f0e007f;
        public static final int edit_query=0x7f0e0052;
        public static final int end=0x7f0e0014;
        public static final int end_padder=0x7f0e00b0;
        public static final int end_space=0x7f0e00b7;
        public static final int expand_activities_button=0x7f0e0037;
        public static final int expand_area=0x7f0e007a;
        public static final int expanded_menu=0x7f0e0047;
        public static final int fab=0x7f0e0073;
        public static final int fill=0x7f0e0015;
        public static final int fill_horizontal=0x7f0e0016;
        public static final int fill_vertical=0x7f0e0017;
        public static final int first=0x7f0e00d6;
        public static final int fourth=0x7f0e00d9;
        public static final int fragment_container=0x7f0e00db;
        public static final int hairline=0x7f0e0082;
        public static final int header=0x7f0e0087;
        public static final int hint=0x7f0e0068;
        public static final int home=0x7f0e0000;
        public static final int homeAsUp=0x7f0e0021;
        public static final int horizontal=0x7f0e000a;
        public static final int hour_space=0x7f0e00c8;
        public static final int hours=0x7f0e00ca;
        public static final int hours_label=0x7f0e00e1;
        public static final int hours_ones=0x7f0e00e0;
        public static final int icon=0x7f0e003b;
        public static final int ifRoom=0x7f0e002e;
        public static final int image=0x7f0e0038;
        public static final int index=0x7f0e0088;
        public static final int info=0x7f0e00af;
        public static final int key_left=0x7f0e00c3;
        public static final int key_middle=0x7f0e00c4;
        public static final int key_right=0x7f0e00c5;
        public static final int label=0x7f0e0078;
        public static final int lap_number=0x7f0e00a0;
        public static final int lap_time=0x7f0e00a1;
        public static final int lap_total=0x7f0e00a2;
        public static final int laps_list=0x7f0e00b8;
        public static final int left=0x7f0e0018;
        public static final int left_button=0x7f0e0097;
        public static final int left_clock=0x7f0e00f6;
        public static final int line=0x7f0e00d2;
        public static final int line1=0x7f0e00a9;
        public static final int line3=0x7f0e00ad;
        public static final int listMode=0x7f0e001d;
        public static final int list_item=0x7f0e003a;
        public static final int main=0x7f0e006c;
        public static final int main_clock=0x7f0e0099;
        public static final int main_clock_frame=0x7f0e00a3;
        public static final int main_clock_left_pane=0x7f0e008d;
        public static final int media_actions=0x7f0e00a7;
        public static final int menu_button=0x7f0e0072;
        public static final int menu_item_help=0x7f0e0103;
        public static final int menu_item_night_mode=0x7f0e0105;
        public static final int menu_item_search=0x7f0e0100;
        public static final int menu_item_settings=0x7f0e0102;
        public static final int menu_item_sort=0x7f0e0101;
        public static final int menu_items=0x7f0e0104;
        public static final int middle=0x7f0e0032;
        public static final int minutes=0x7f0e00cc;
        public static final int minutes_label=0x7f0e00e4;
        public static final int minutes_ones=0x7f0e00e3;
        public static final int minutes_picker=0x7f0e00b2;
        public static final int minutes_space=0x7f0e00cb;
        public static final int minutes_tens=0x7f0e00e2;
        public static final int month_text_view=0x7f0e00fd;
        public static final int multiply=0x7f0e0027;
        public static final int never=0x7f0e002f;
        public static final int nextAlarm=0x7f0e009c;
        public static final int none=0x7f0e0022;
        public static final int normal=0x7f0e001e;
        public static final int notification_icon=0x7f0e00c2;
        public static final int numbers_key=0x7f0e0009;
        public static final int off=0x7f0e00ff;
        public static final int on=0x7f0e00fe;
        public static final int onoff=0x7f0e0079;
        public static final int page_indicator0=0x7f0e00ed;
        public static final int page_indicator1=0x7f0e00ee;
        public static final int page_indicator2=0x7f0e00ef;
        public static final int page_indicator3=0x7f0e00f0;
        public static final int page_indicators=0x7f0e00ec;
        public static final int parentPanel=0x7f0e003d;
        public static final int progress_circular=0x7f0e0007;
        public static final int progress_horizontal=0x7f0e0008;
        public static final int pulse=0x7f0e0064;
        public static final int radio=0x7f0e004a;
        public static final int repeat_days=0x7f0e007c;
        public static final int repeat_onoff=0x7f0e007b;
        public static final int reset_add=0x7f0e00ea;
        public static final int right=0x7f0e0019;
        public static final int right_button=0x7f0e0098;
        public static final int right_clock=0x7f0e00f9;
        public static final int screen=0x7f0e0028;
        public static final int scrollView=0x7f0e0042;
        public static final int search_badge=0x7f0e0054;
        public static final int search_bar=0x7f0e0053;
        public static final int search_button=0x7f0e0055;
        public static final int search_close_btn=0x7f0e005a;
        public static final int search_edit_frame=0x7f0e0056;
        public static final int search_go_btn=0x7f0e005c;
        public static final int search_mag_icon=0x7f0e0057;
        public static final int search_plate=0x7f0e0058;
        public static final int search_src_text=0x7f0e0059;
        public static final int search_voice_btn=0x7f0e005d;
        public static final int second=0x7f0e00d7;
        public static final int seconds=0x7f0e00e5;
        public static final int seconds_label=0x7f0e00e6;
        public static final int select_dialog_listview=0x7f0e005e;
        public static final int separator=0x7f0e00c9;
        public static final int shortcut=0x7f0e0049;
        public static final int showCustom=0x7f0e0023;
        public static final int showHome=0x7f0e0024;
        public static final int showTitle=0x7f0e0025;
        public static final int snooze=0x7f0e0065;
        public static final int split_action_bar=0x7f0e0004;
        public static final int src_atop=0x7f0e0029;
        public static final int src_in=0x7f0e002a;
        public static final int src_over=0x7f0e002b;
        public static final int start=0x7f0e001a;
        public static final int start_space=0x7f0e00b3;
        public static final int status_bar_latest_event_content=0x7f0e00a6;
        public static final int stopwatch_circle=0x7f0e00b4;
        public static final int stopwatch_time=0x7f0e00b6;
        public static final int stopwatch_time_text=0x7f0e00b5;
        public static final int submit_area=0x7f0e005b;
        public static final int summary=0x7f0e0077;
        public static final int swn_collapsed_chronometer=0x7f0e00bb;
        public static final int swn_collapsed_hitspace=0x7f0e00ba;
        public static final int swn_collapsed_laps=0x7f0e00bc;
        public static final int swn_expanded_chronometer=0x7f0e00be;
        public static final int swn_expanded_hitspace=0x7f0e00bd;
        public static final int swn_expanded_laps=0x7f0e00bf;
        public static final int swn_left_button=0x7f0e00c0;
        public static final int swn_right_button=0x7f0e00c1;
        public static final int tabMode=0x7f0e001f;
        public static final int text=0x7f0e00ae;
        public static final int text2=0x7f0e00ac;
        public static final int textSpacerNoButtons=0x7f0e0043;
        public static final int the_clock=0x7f0e009f;
        public static final int third=0x7f0e00d8;
        public static final int time=0x7f0e00aa;
        public static final int time_display=0x7f0e00c6;
        public static final int time_display_background=0x7f0e00d0;
        public static final int time_picker=0x7f0e00d1;
        public static final int time_picker_dialog=0x7f0e00cf;
        public static final int timer_cancel=0x7f0e00dc;
        public static final int timer_circle=0x7f0e00e7;
        public static final int timer_label=0x7f0e00e9;
        public static final int timer_setup=0x7f0e00df;
        public static final int timer_time=0x7f0e00e8;
        public static final int timer_time_display=0x7f0e00da;
        public static final int timer_time_text=0x7f0e00d4;
        public static final int timer_view=0x7f0e00eb;
        public static final int timers_list=0x7f0e00de;
        public static final int timers_list_page=0x7f0e00dd;
        public static final int title=0x7f0e003c;
        public static final int title_template=0x7f0e003f;
        public static final int tomorrowLabel=0x7f0e0083;
        public static final int top=0x7f0e001b;
        public static final int topPanel=0x7f0e003e;
        public static final int undo_bar=0x7f0e0070;
        public static final int undo_frame=0x7f0e006f;
        public static final int up=0x7f0e0001;
        public static final int useLogo=0x7f0e0026;
        public static final int vertical=0x7f0e000b;
        public static final int vertical_view_pager=0x7f0e00f1;
        public static final int vibrate_onoff=0x7f0e007e;
        public static final int widget_item=0x7f0e00f5;
        public static final int withText=0x7f0e0030;
        public static final int wrap_content=0x7f0e001c;
    }
    public static final class integer {
        public static final int abc_config_activityDefaultDur=0x7f0d0001;
        /**  The duration (in milliseconds) of the activity open/close and fragment open/close animations. 
         */
        public static final int abc_config_activityShortDur=0x7f0d0000;
        /**  The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
     an action bar/action mode. This will be used to determine how many
     showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
         */
        public static final int abc_max_action_buttons=0x7f0d0004;
        /**  Number of world clocks in a row, for the digital appwidget. 
         */
        public static final int appwidget_world_clocks_per_row=0x7f0d0011;
        public static final int cancel_button_image_alpha=0x7f0d0003;
        public static final int dim_animation_duration=0x7f0d000e;
        public static final int dismiss_animation_duration=0x7f0d000b;
        public static final int escape_animation_duration=0x7f0d0007;
        /** 
    <integer name="activity_slide_left_duration">475</integer>
    <integer name="activity_slide_right_duration">525</integer>
    <integer name="activity_collapse_duration">125</integer>
    <integer name="expand_cc_bcc_dur">150</integer>
    <integer name="fadein_cc_bcc_dur">150</integer>

    <integer name="dialog_animationDefaultDur">220</integer>
    <integer name="dialog_animationShortDur">150</integer>
    <integer name="shrink_animation_duration">350</integer>
    <integer name="slide_animation_duration">320</integer>
    <integer name="fade_in_animation_duration">350</integer>
    
         */
        public static final int fade_duration=0x7f0d0005;
        public static final int hide_animation_duration=0x7f0d000d;
        public static final int max_dismiss_velocity=0x7f0d0009;
        public static final int max_escape_animation_duration=0x7f0d0008;
        public static final int snap_animation_duration=0x7f0d000a;
        /**  Maximum numerical value that will be shown in a status bar
         notification icon or in the notification itself. Will be replaced
         with @string/status_bar_notification_info_overflow when shown in the
         UI. 
         */
        public static final int status_bar_notification_info_maxnum=0x7f0d0002;
        /**  Swipe constants 
         */
        public static final int swipe_escape_velocity=0x7f0d0006;
        public static final int swipe_scroll_slop=0x7f0d000c;
        public static final int timer_column_count=0x7f0d000f;
        /**  Number of world clocks in a row, for the clock tab. 
         */
        public static final int world_clocks_per_row=0x7f0d0010;
    }
    public static final class interpolator {
        public static final int ic_stopwatch_button_translatex_interpolator=0x7f070000;
    }
    public static final class layout {
        public static final int abc_action_bar_title_item=0x7f040000;
        public static final int abc_action_bar_up_container=0x7f040001;
        public static final int abc_action_bar_view_list_nav_layout=0x7f040002;
        public static final int abc_action_menu_item_layout=0x7f040003;
        public static final int abc_action_menu_layout=0x7f040004;
        public static final int abc_action_mode_bar=0x7f040005;
        public static final int abc_action_mode_close_item_material=0x7f040006;
        public static final int abc_activity_chooser_view=0x7f040007;
        public static final int abc_activity_chooser_view_list_item=0x7f040008;
        public static final int abc_alert_dialog_material=0x7f040009;
        public static final int abc_dialog_title_material=0x7f04000a;
        public static final int abc_expanded_menu_layout=0x7f04000b;
        public static final int abc_list_menu_item_checkbox=0x7f04000c;
        public static final int abc_list_menu_item_icon=0x7f04000d;
        public static final int abc_list_menu_item_layout=0x7f04000e;
        public static final int abc_list_menu_item_radio=0x7f04000f;
        public static final int abc_popup_menu_item_layout=0x7f040010;
        public static final int abc_screen_content_include=0x7f040011;
        public static final int abc_screen_simple=0x7f040012;
        public static final int abc_screen_simple_overlay_action_mode=0x7f040013;
        public static final int abc_screen_toolbar=0x7f040014;
        public static final int abc_search_dropdown_item_icons_2line=0x7f040015;
        public static final int abc_search_view=0x7f040016;
        public static final int abc_select_dialog_material=0x7f040017;
        public static final int actionable_toast_row=0x7f040018;
        public static final int alarm_activity=0x7f040019;
        public static final int alarm_clock=0x7f04001a;
        public static final int alarm_row=0x7f04001b;
        public static final int alarm_time=0x7f04001c;
        public static final int analog_appwidget=0x7f04001d;
        public static final int blank_footer_view=0x7f04001e;
        public static final int cities_activity=0x7f04001f;
        public static final int city_list_header=0x7f040020;
        public static final int city_list_item=0x7f040021;
        public static final int clock_fragment=0x7f040022;
        public static final int date_picker_dialog=0x7f040023;
        public static final int date_picker_done_button=0x7f040024;
        public static final int date_picker_header_view=0x7f040025;
        public static final int date_picker_selected_date=0x7f040026;
        public static final int date_picker_view_animator=0x7f040027;
        public static final int day_button=0x7f040028;
        public static final int desk_clock=0x7f040029;
        public static final int desk_clock_saver=0x7f04002a;
        public static final int digital_appwidget=0x7f04002b;
        public static final int digital_widget_time=0x7f04002c;
        public static final int lap_view=0x7f04002d;
        public static final int main_clock_frame=0x7f04002e;
        public static final int notification_media_action=0x7f04002f;
        public static final int notification_media_cancel_action=0x7f040030;
        public static final int notification_template_big_media=0x7f040031;
        public static final int notification_template_big_media_narrow=0x7f040032;
        public static final int notification_template_lines=0x7f040033;
        public static final int notification_template_media=0x7f040034;
        public static final int notification_template_part_chronometer=0x7f040035;
        public static final int notification_template_part_time=0x7f040036;
        public static final int screensaver_settings=0x7f040037;
        public static final int select_dialog_item_material=0x7f040038;
        public static final int select_dialog_multichoice_material=0x7f040039;
        public static final int select_dialog_singlechoice_material=0x7f04003a;
        public static final int selection_layout=0x7f04003b;
        public static final int settings=0x7f04003c;
        public static final int snooze_length_picker=0x7f04003d;
        public static final int stopwatch_fragment=0x7f04003e;
        public static final int stopwatch_notif_collapsed=0x7f04003f;
        public static final int stopwatch_notif_expanded=0x7f040040;
        public static final int stopwatch_notif_expanded_rtl=0x7f040041;
        public static final int stopwatch_notification_icon=0x7f040042;
        public static final int stopwatch_spacer=0x7f040043;
        public static final int support_simple_spinner_dropdown_item=0x7f040044;
        public static final int three_keys_view=0x7f040045;
        public static final int time_header_label=0x7f040046;
        public static final int time_picker_dialog=0x7f040047;
        public static final int time_setup_view=0x7f040048;
        public static final int timer_alert_full_screen=0x7f040049;
        public static final int timer_cancel_button=0x7f04004a;
        public static final int timer_fragment=0x7f04004b;
        public static final int timer_full_screen_fragment=0x7f04004c;
        public static final int timer_h_mm_ss_view=0x7f04004d;
        public static final int timer_list_item=0x7f04004e;
        public static final int timer_setup_view=0x7f04004f;
        public static final int timer_timer_view=0x7f040050;
        public static final int world_clock_item=0x7f040051;
        public static final int world_clock_label=0x7f040052;
        public static final int world_clock_list_item=0x7f040053;
        public static final int world_clock_remote_list_item=0x7f040054;
        public static final int year_label_text_view=0x7f040055;
    }
    public static final class menu {
        public static final int cities_menu=0x7f130000;
        public static final int desk_clock_menu=0x7f130001;
        public static final int settings_menu=0x7f130002;
    }
    public static final class mipmap {
        public static final int ic_launcher_alarmclock=0x7f030000;
    }
    public static final class plurals {
        /**  Stopwatch accessibility strings 
 Stopwatch accessibility strings 
         */
        public static final int Nhours_description=0x7f120008;
        public static final int Nminutes_description=0x7f120009;
        public static final int Nseconds_description=0x7f12000a;
        /**  The text shown after user snoozed an alerting alarm. The text will be shown
         together with the word 'Snoozed' in two separate lines or example:
             Snoozed
             10 min
         [CHAR LIMIT=10]
    
 The text shown after user snoozed an alerting alarm. The text will be shown
         together with the word 'Snoozed' in two separate lines or example:
             Snoozed
             10 min
         [CHAR LIMIT=10]
    
         */
        public static final int alarm_alert_snooze_duration=0x7f120000;
        /**  Toast that appears after Alarm is snoozed from the Alarm
         dialog. Says the alarm will snooze for xxx minutes.  
 Toast that appears after Alarm is snoozed from the Alarm
         dialog. Says the alarm will snooze for xxx minutes.  
         */
        public static final int alarm_alert_snooze_set=0x7f120001;
        /**  Alarm deletion confirmation message
 Alarm deletion confirmation message
         */
        public static final int alarm_delete_confirmation=0x7f12000b;
        /**  Auto silence summary string set based on the preference value. 
         */
        public static final int auto_silence_summary=0x7f120007;
        /**  Alarm confirmation toast: days 
         */
        public static final int days=0x7f120002;
        /**  Alarm confirmation toast and timer notification: hours 
         */
        public static final int hours=0x7f120003;
        /**  Alarm confirmation toast and timer notification: minutes 
         */
        public static final int minutes=0x7f120004;
        /** modify bug_id:DELSLMY-1337 liqiang 20160407 start  
 <plurals name="snooze_duration" formatted="false" msgid="3112918131095248271">
      <item quantity="zero"><xliff:g id="NUMBER">%s</xliff:g> minutes</item>
      <item quantity="two">دقيقتان (<xliff:g id="NUMBER">%s</xliff:g>)</item>
      <item quantity="few"><xliff:g id="NUMBER">%s</xliff:g> دقائق</item>
      <item quantity="many"><xliff:g id="NUMBER">%s</xliff:g> دقيقة</item>
      <item quantity="other"><xliff:g id="NUMBER">%s</xliff:g> من الدقائق</item>
      <item quantity="one">دقيقة واحدة</item>
    </plurals> 
         */
        public static final int snooze_duration=0x7f120005;
        /** modify bug_id:DELSLMY-1337 liqiang 20160407 start  
         */
        public static final int snooze_picker_label=0x7f120006;
        public static final int timers_num=0x7f12000c;
    }
    public static final class raw {
        public static final int fallbackring=0x7f090000;
        public static final int in_call_alarm=0x7f090001;
    }
    public static final class string {
        /**  String matching the lock screen format for displaying the date. 
         */
        public static final int abbrev_wday_month_day_no_year=0x7f0f002c;
        /**  Content description for the action bar "home" affordance. [CHAR LIMIT=NONE] 
         */
        public static final int abc_action_bar_home_description=0x7f0f0001;
        /**  Formatting string for describing the action bar's title/home/up affordance.
         This is a single tappable "button" that includes the app icon, the Up indicator
         (usually a "<" chevron) and the window title text.
         %1$s is the title. %2$s is the description of what tapping/clicking the whole
         thing is going to do. 
         */
        public static final int abc_action_bar_home_description_format=0x7f0f0005;
        /**  Just like action_bar_home_description_format, but this one will be used
         if the window is also providing subtitle text.
         %1$s is the title. %2$s is the subtitle. %3$s is the description of what
         tapping/clicking the whole thing is going to do. 
         */
        public static final int abc_action_bar_home_subtitle_description_format=0x7f0f0006;
        /**  Content description for the action bar "up" affordance. [CHAR LIMIT=NONE] 
         */
        public static final int abc_action_bar_up_description=0x7f0f0002;
        /**  Content description for the action menu overflow button. [CHAR LIMIT=NONE] 
         */
        public static final int abc_action_menu_overflow_description=0x7f0f0003;
        /**  Label for the "Done" button on the far left of action mode toolbars. 
         */
        public static final int abc_action_mode_done=0x7f0f0000;
        /**  Title for a button to expand the list of activities in ActivityChooserView [CHAR LIMIT=25] 
         */
        public static final int abc_activity_chooser_view_see_all=0x7f0f000e;
        /**  ActivityChooserView - accessibility support 
 Description of the shwoing of a popup window with activities to choose from. [CHAR LIMIT=NONE] 
         */
        public static final int abc_activitychooserview_choose_application=0x7f0f000d;
        /**  Default hint text for the system-wide search UI's text field. [CHAR LIMIT=30] 
         */
        public static final int abc_search_hint=0x7f0f0008;
        /**  SearchView accessibility description for clear button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_clear=0x7f0f000a;
        /**  SearchView accessibility description for search text field [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_query=0x7f0f0009;
        /**  SearchView accessibility description for search button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_search=0x7f0f0007;
        /**  SearchView accessibility description for submit button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_submit=0x7f0f000b;
        /**  SearchView accessibility description for voice button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_voice=0x7f0f000c;
        /**  Description of the choose target button in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] 
         */
        public static final int abc_shareactionprovider_share_with=0x7f0f0010;
        /**  Description of a share target (both in the list of such or the default share button) in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] 
         */
        public static final int abc_shareactionprovider_share_with_application=0x7f0f000f;
        /**  Content description for the Toolbar icon used to collapse an expanded action mode. [CHAR LIMIT=NONE] 
         */
        public static final int abc_toolbar_collapse_description=0x7f0f0004;
        public static final int action_add_minute=0x7f0f003d;
        public static final int action_create=0x7f0f0035;
        public static final int action_delete=0x7f0f0036;
        /**  Action names for events describe what type of manipulation was performed. 
         */
        public static final int action_dismiss=0x7f0f0033;
        public static final int action_fire=0x7f0f003a;
        public static final int action_lap=0x7f0f003e;
        public static final int action_reset=0x7f0f003b;
        public static final int action_show=0x7f0f003c;
        public static final int action_snooze=0x7f0f0034;
        public static final int action_start=0x7f0f0038;
        public static final int action_stop=0x7f0f0039;
        public static final int action_update=0x7f0f0037;
        /**  Menu item on Alarm Clock screen: Add alarm 
 Menu item on Alarm Clock screen: Add alarm 
         */
        public static final int add_alarm=0x7f0f004a;
        /**  Button labels on the pre-dismiss alarm notifications: Dismiss now 
 Button labels on the pre-dismiss alarm notifications: Dismiss now 
         */
        public static final int alarm_alert_dismiss_now_text=0x7f0f0061;
        /**  Button labels on the alarm dialog: Dismiss 
 Button labels on the alarm dialog: Dismiss 
         */
        public static final int alarm_alert_dismiss_text=0x7f0f0060;
        /**  The text shown as an option to dismiss an alerting alarm [CHAR LIMIT=5] 
 The text shown as an option to dismiss an alerting alarm [CHAR LIMIT=5] 
         */
        public static final int alarm_alert_off_action_text=0x7f0f005f;
        /**  The text shown after user dismissed an alerting alarm [CHAR LIMIT=15] 
 The text shown after user dismissed an alerting alarm [CHAR LIMIT=15] 
         */
        public static final int alarm_alert_off_text=0x7f0f0065;
        /**  Text to appear in the notification title while an alarm is about to go off. 
 Text to appear in the notification title while an alarm is about to go off. 
         */
        public static final int alarm_alert_predismiss_title=0x7f0f0068;
        /**  Button labels on the alarm dialog: Snooze 
 Button labels on the alarm dialog: Snooze 
         */
        public static final int alarm_alert_snooze_text=0x7f0f0066;
        /**  Text to appear inside a notification while an alarm is snoozing. 
 no translation found for alarm_alert_snooze_set:one (7884410398338611019) 
 no translation found for alarm_alert_snooze_set:other (7377899473014259727) 
 Text to appear inside a notification while an alarm is snoozing. 
         */
        public static final int alarm_alert_snooze_until=0x7f0f0067;
        /**  The text shown after user snoozed an alerting alarm. The text will be shown
         together with the number of minutes in two separate lines. For example:
             Snoozed
             10 min
         [CHAR LIMIT=10]
    
 The text shown after user snoozed an alerting alarm. The text will be shown
         together with the number of minutes in two separate lines. For example:
             Snoozed
             10 min
         [CHAR LIMIT=10]
    
         */
        public static final int alarm_alert_snoozed_text=0x7f0f0064;
        /**  The text shown above the clock when alarm is alerting [CHAR LIMIT=10] 
 The text shown above the clock when alarm is alerting [CHAR LIMIT=10] 
         */
        public static final int alarm_alert_wake_up=0x7f0f005e;
        public static final int alarm_button_description=0x7f0f007f;
        /**  String that represents that the user attempted to dismiss an alarm that is more than
    24 hours away
    %s represents the time of the alarm (e.g. 15:39)
    [CHAR LIMIT=NONE]
    
         */
        public static final int alarm_cant_be_dismissed_still_more_than_24_hours_away=0x7f0f010b;
        /**  Toast content when an alarm was deleted  
 Toast content when an alarm was deleted  
         */
        public static final int alarm_deleted=0x7f0f00d7;
        /**  String that represents that the user has dismissed an alarm through a voice action.
    %s represents alarm time, e.g. 14:20
    [CHAR LIMIT=NONE]
    
         */
        public static final int alarm_is_dismissed=0x7f0f00fa;
        /**  String that represents that the user has dismissed an alarm through a voice action.
    %s represents alarm time, e.g. 14:20
    [CHAR LIMIT=NONE]
    
         */
        public static final int alarm_is_set=0x7f0f00fb;
        /**  String that represents that the user has snoozed an alarm through a voice action for 10
    minutes.
    %s represents alarm time, e.g. 14:20
    [CHAR LIMIT=NONE]
    
         */
        public static final int alarm_is_snoozed=0x7f0f010f;
        /**  A description for the DeskClock alarm sound playback service.
         [CHAR LIMIT=NONE] 
 A description for the DeskClock alarm sound playback service.
         [CHAR LIMIT=NONE] 
         */
        public static final int alarm_klaxon_service_desc=0x7f0f0088;
        /**  Title for AlarmClock activity 
 Label for the Alarms activity displayed on-screen when that activity must be represented to the user. 
 Title for AlarmClock activity 
 Label for the Alarms activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int alarm_list_title=0x7f0f0049;
        public static final int alarm_missed_text=0x7f0f0063;
        /**  Alarm Alert screen: this message is shown after an alarm rung
         unattended for a number of minutes.  It tells the user that
         the alarm has been silenced.
 Alarm Alert screen: this message is shown after an alarm rung
         unattended for a number of minutes.  It tells the user that
         the alarm has been silenced.
         */
        public static final int alarm_missed_title=0x7f0f0062;
        /**  Text to display in the notification ticker and label 
 Text to display in the notification ticker and label 
         */
        public static final int alarm_notify_snooze_label=0x7f0f007a;
        /**  Text to display in the notification when the alarm has been snoozed 
 Text to display in the notification when the alarm has been snoozed 
         */
        public static final int alarm_notify_snooze_text=0x7f0f007b;
        /**  Text to display in the small text of the notification 
 Text to display in the small text of the notification 
         */
        public static final int alarm_notify_text=0x7f0f0079;
        /**  Setting labels on Set alarm screen: Repeat 
 Setting labels on Set alarm screen: Repeat 
         */
        public static final int alarm_repeat=0x7f0f0057;
        /**  Header in the preferences settings for the section pertaining to alarms 
 no translation found for timezone_labels:84 (5176858645450908751) 
  by  liupeng  20160407  BUG_ID: DELSLMY-1351 (end) 
  by  liupeng  20160407  BUG_ID: DELSLMY-1351 (end) 
  by  liupeng  20160407  BUG_ID: DELSLMY-1351 (end) 
  by  liupeng  20160407  BUG_ID: DELSLMY-1351 (end) 
 Header in the preferences settings for the section pertaining to alarms 
  by  liupeng  20160407  BUG_ID: DELSLMY-1351 (end) 
  by  liupeng  20160407  BUG_ID: DELSLMY-1351 (end) 
         */
        public static final int alarm_settings=0x7f0f00c5;
        /**  Font size for AM/PM should match alarm_label_size 
 Font size for AM/PM should match alarm_label_size 
 Font size for AM/PM should match alarm_label_size 
         */
        public static final int alarm_time_12_hours_format=0x7f0f00e5;
        /**  Label shown when user is setting up non-repeating alarm for later today [CHAR LIMIT=15] 
 Label shown when user is setting up non-repeating alarm for later today [CHAR LIMIT=15] 
         */
        public static final int alarm_today=0x7f0f005d;
        /**  Label shown when user is setting up non-repeating alarm for tomorrow [CHAR LIMIT=15] 
 Label shown when user is setting up non-repeating alarm for tomorrow [CHAR LIMIT=15] 
         */
        public static final int alarm_tomorrow=0x7f0f005c;
        /**  Description of the button to undo change to alarm 
 Description of the button to undo change to alarm 
         */
        public static final int alarm_undo=0x7f0f00d6;
        /**  Setting labels on Set alarm screen: Vibration on or off 
 Setting labels on Set alarm screen: Vibration on or off 
         */
        public static final int alarm_vibrate=0x7f0f0056;
        /**  Setting title for changing the alarm volume. 
 Setting title for changing the alarm volume. 
         */
        public static final int alarm_volume_title=0x7f0f0077;
        public static final int alarms_exist=0x7f0f0110;
        /**  Displays the number of alarms selected from the list of alarms. 
 Displays the number of alarms selected from the list of alarms. 
         */
        public static final int alarms_selected=0x7f0f00db;
        /**  Setting labels on Set alarm screen: Select alarm ringtone  
 Setting labels on Set alarm screen: Select alarm ringtone  
         */
        public static final int alert=0x7f0f0058;
        /**  Notification text when multiple timers are stopped. 
 Notification text when multiple timers are stopped. 
         */
        public static final int all_timers_stopped_notif=0x7f0f00ce;
        public static final int ampm_circle_radius_multiplier=0x7f0f0015;
        /**  Label for analog clock gadget displayed on-screen when that gadget is represented to the user. 
 Label for analog clock gadget displayed on-screen when that gadget is represented to the user. 
         */
        public static final int analog_gadget=0x7f0f006d;
        /**  
 Label shown on launcher icon 
 Label for the this application displayed on-screen when this application must be represented to the user. 
 
 Label shown on launcher icon 
 Label for the this application displayed on-screen when this application must be represented to the user. 
         */
        public static final int app_label=0x7f0f0048;
        /**  Auto silence summary when turned off 
 Auto silence summary when turned off 
         */
        public static final int auto_silence_never=0x7f0f0072;
        /**  Auto silence preference title 
 M: Get rid of colon 
 Auto silence preference title 
         */
        public static final int auto_silence_title=0x7f0f0071;
        /**  Title for an option that will automtically show a clock representing the user's regular timezone on the main fragment whenever the user leaves their regular timezone
 Title for an option that will automtically show a clock representing the user's regular timezone on the main fragment whenever the user leaves their regular timezone
         */
        public static final int automatic_home_clock=0x7f0f00bb;
        /**  Describes the functionality provided by the automatic_home_clock option 
 Describes the functionality provided by the automatic_home_clock option 
         */
        public static final int automatic_home_clock_summary=0x7f0f00bc;
        /**  Clock view buttons strings
 Describes the purpose of the button to start the activity to add/edit/delete alarms 
 Clock view buttons strings
 Describes the purpose of the button to start the activity to add/edit/delete alarms 
         */
        public static final int button_alarms=0x7f0f0091;
        /**  Describes the purpose of the button which provides a list of cities for the world clock settings 
 Describes the purpose of the button which provides a list of cities for the world clock settings 
         */
        public static final int button_cities=0x7f0f0092;
        /**  Describes the purpose of the button which pops up a menu of setting choices 
 Describes the purpose of the button which pops up a menu of setting choices 
         */
        public static final int button_menu=0x7f0f0093;
        /**  Category names for events describe the type of object that was manipulated. 
         */
        public static final int category_alarm=0x7f0f002f;
        public static final int category_clock=0x7f0f0030;
        public static final int category_stopwatch=0x7f0f0032;
        public static final int category_timer=0x7f0f0031;
        public static final int circle_radius_multiplier=0x7f0f0012;
        public static final int circle_radius_multiplier_24HourMode=0x7f0f0013;
        /**  Label for the Cities activity displayed on-screen when that activity must be represented to the user. 
 Label for the Cities activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int cities_activity_title=0x7f0f00b8;
        /**  String that represents that the user successfully added a world clock through a
    voice action
    %s represents the name of the city they added.
    [CHAR LIMIT=NONE]
    
         */
        public static final int city_added=0x7f0f0109;
        /**  world clock deletion confirmation 
 world clock deletion confirmation 
         */
        public static final int city_delete_confirmation=0x7f0f00de;
        /**  String that represents that the user successfully deleted a world clock through
    a voice action
    %s represents the name of the city they deleted.
    [CHAR LIMIT=NONE]
    
         */
        public static final int city_deleted=0x7f0f010a;
        /**  format strings for clocks 
 format strings for clocks 
         */
        public static final int clock_24_hours_format=0x7f0f00e0;
        /**  Appears at the top of the Clock Picker screen: Tell user to
         select a clock to display 
 Appears at the top of the Clock Picker screen: Tell user to
         select a clock to display 
         */
        public static final int clock_instructions=0x7f0f006c;
        /**  Settings strings 
 Header in the preferences settings for the section pertaining to clocks on the main fragment 
 Settings strings 
 Header in the preferences settings for the section pertaining to clocks on the main fragment 
         */
        public static final int clock_settings=0x7f0f00b9;
        /**  Header for a Clock Dream Setting referring to choosing analog or digital style 
 Header for a Clock Dream Setting referring to choosing analog or digital style 
         */
        public static final int clock_style=0x7f0f00ba;
        /**  Description of the up caret in the alarm alert screen to collapse the alarm content to summary perspective. [CHAR LIMIT=NONE] 
 Description of the up caret in the alarm alert screen to collapse the alarm content to summary perspective. [CHAR LIMIT=NONE] 
         */
        public static final int collapse_alarm=0x7f0f00d5;
        /**  Label on the main screen control used to set alarm [CHAR LIMIT=30]
 Label on the main screen control used to set alarm [CHAR LIMIT=30]
         */
        public static final int control_set_alarm=0x7f0f008b;
        /**  Label on the main screen control used to set alarm when there is already an existing alarm [CHAR LIMIT=30]
 Label on the main screen control used to set alarm when there is already an existing alarm [CHAR LIMIT=30]
         */
        public static final int control_set_alarm_with_existing=0x7f0f008c;
        /**  Label on expanded alarm edit view indicating the ringtone is custom. 
         */
        public static final int custom_ringtone=0x7f0f0059;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: concatenate days with
         this character, i.e. "Mon, Tue, Wed" 
 Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: concatenate days with
         this character, i.e. "Mon, Tue, Wed" 
         */
        public static final int day_concat=0x7f0f006b;
        /**  DO NOT TRANSLATE 
 DO NOT TRANSLATE 
         */
        public static final int day_of_week_label_typeface=0x7f0f002b;
        /** 
        Content description for the month and day selector in the date picker, which displays
        a selectable grid of days laid out by month.
        [CHAR LIMIT=50]
     
         */
        public static final int day_picker_description=0x7f0f0021;
        /**  Default clock style. 
         */
        public static final int default_clock_style=0x7f0f002e;
        /**  Default label to display for an alarm 
 Default label to display for an alarm 
         */
        public static final int default_label=0x7f0f0054;
        /**  Title of the ringtone setting. 
 Title of the ringtone setting. 
         */
        public static final int default_ringtone_setting_title=0x7f0f007e;
        /**  Delete button when editing an alarm. 
 Delete button when editing an alarm. 
         */
        public static final int delete=0x7f0f0076;
        /**  Context Menu Item on Alarm Settings screen: Delete alarm 
 Context Menu Item on Alarm Settings screen: Delete alarm 
         */
        public static final int delete_alarm=0x7f0f004d;
        /**  Delete alarm confirmation dialog message. 
 Delete alarm confirmation dialog message. 
         */
        public static final int delete_alarm_confirm=0x7f0f0050;
        /**  Accessibility announcement when a number that had been typed in is deleted [CHAR_LIMIT=NONE] 
         */
        public static final int deleted_key=0x7f0f0026;
        /**  message used by the talkback accessebility app to say that something was deleted 
 message used by the talkback accessebility app to say that something was deleted 
         */
        public static final int deleted_message=0x7f0f00dc;
        /**  Text instruction for alarm icon on alarm lock screen. The snooze button will still
         be on the left even on RTL languages so please do not reverse this during
         translation. 
         */
        public static final int description_direction_both=0x7f0f00cb;
        /**  Text instruction for snooze alarm on alarm lock screen. The snooze button will still
         be on the left even on RTL languages so please do not reverse this during
         translation. 
 Text instruction for snooze alarm on alarm lock screen. The snooze button will still
         be on the left even on RTL languages so please do not reverse this during
         translation. 
         */
        public static final int description_direction_left=0x7f0f00ca;
        /**  Text instruction for dismiss alarm on alarm lock screen. The dismiss button will still
         be on the right even on RTL languages so please do not reverse this during
         translation. 
 Text instruction for dismiss alarm on alarm lock screen. The dismiss button will still
         be on the right even on RTL languages so please do not reverse this during
         translation. 
         */
        public static final int description_direction_right=0x7f0f00c9;
        public static final int desk_clock_button_description=0x7f0f0084;
        public static final int desk_clock_help_url=0x7f0f00c6;
        /**  Label for digital clock gadget displayed on-screen when that gadget is represented to the user. 
 Label for digital clock gadget displayed on-screen when that gadget is represented to the user. 
         */
        public static final int digital_gadget=0x7f0f00df;
        /**  Context Menu Item on Alarm Settings screen: Disable alarm 
 Context Menu Item on Alarm Settings screen: Disable alarm 
         */
        public static final int disable_alarm=0x7f0f004f;
        /**  String that shows up in the action bar for the Picker Activity
         where a use gets to pick which alarm to dismiss
   [CHAR LIMIT=NONE]
   
         */
        public static final int dismiss_alarm=0x7f0f010c;
        /**  Done button when editing an alarm. 
 Done button when editing an alarm. 
         */
        public static final int done=0x7f0f0074;
        /**  Label for button to confirm chosen date or time [CHAR LIMIT=30] 
         */
        public static final int done_label=0x7f0f001c;
        /**  Context Menu Item on Alarm Settings screen: Enable alarm 
 Context Menu Item on Alarm Settings screen: Enable alarm 
         */
        public static final int enable_alarm=0x7f0f004e;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: special case for when
         the alarm is set to repeat every day 
 Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: special case for when
         the alarm is set to repeat every day 
         */
        public static final int every_day=0x7f0f006a;
        /**  Description of the down caret in the alarm alert screen to expand the alarm content to edit perspective. [CHAR LIMIT=NONE] 
 Description of the down caret in the alarm alert screen to expand the alarm content to edit perspective. [CHAR LIMIT=NONE] 
         */
        public static final int expand_alarm=0x7f0f00d4;
        /**  Format for describing the date, for accessibility. 
         */
        public static final int full_wday_month_day_no_year=0x7f0f002d;
        public static final int gallery_button_description=0x7f0f0080;
        /**  Help activity name 
 Help activity name 
         */
        public static final int help=0x7f0f006e;
        /**  Menu item on Alarm Clock screen: Hide clock 
 Menu item on Alarm Clock screen: Hide clock 
         */
        public static final int hide_clock=0x7f0f0052;
        public static final int home_button_description=0x7f0f0083;
        /**  Title with the clock on the main page displaying the user's regular timezone (shows when automatic_home_clock enabled) 
 Title with the clock on the main page displaying the user's regular timezone (shows when automatic_home_clock enabled) 
         */
        public static final int home_label=0x7f0f00b7;
        /**  Title in the preferences change the time zone for the user's home 
 Title in the preferences change the time zone for the user's home 
         */
        public static final int home_time_zone=0x7f0f00bd;
        /**  Title in a list dialog box to pick a time zone for the user's home 
 Title in a list dialog box to pick a time zone for the user's home 
         */
        public static final int home_time_zone_title=0x7f0f00be;
        /** 
         Content description for the hour selector in the time picker, which displays
         selectable hours of the day along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static final int hour_picker_description=0x7f0f001d;
        /**  Abbreviation for temporal hours [CHAR LIMIT=1] 
 Abbreviation for temporal hours [CHAR LIMIT=1] 
         */
        public static final int hours_label=0x7f0f00a0;
        /**  Accessibility strings 
 Accessibility strings 
         */
        public static final int hours_label_description=0x7f0f00a3;
        /**  String that represents that invalid time for an alarm was specified, e.g. 23:00am
     or 27:68pm.
    First %d represents hour, second %d represents minutes, %s represents am/pm,
    If no am/pm is passed in (e.g. the locale uses 24h time) only hour and minute are printed.
    [CHAR LIMIT=NONE]
    
         */
        public static final int invalid_time=0x7f0f00ed;
        /**  String that represents that the user attempted to start a timer through a voice action
    but specified invalid length.
    [CHAR LIMIT=NONE]
    
         */
        public static final int invalid_timer_length=0x7f0f0102;
        /**  Accessibility description for the item that is currently selected. 
         */
        public static final int item_is_selected=0x7f0f0025;
        /**  Setting label on Set alarm screen: Label 
 Setting label on Set alarm screen: Label 
         */
        public static final int label=0x7f0f0053;
        /**  Accessibility labels for alarm buttons 
 Accessibility labels for alarm buttons 
         */
        public static final int label_description=0x7f0f0085;
        /**  Label names for events describe the entity responsible for the event. 
         */
        public static final int label_deskclock=0x7f0f003f;
        public static final int label_intent=0x7f0f0041;
        public static final int label_notification=0x7f0f0040;
        /**  String displayed as the alert summary while loading the alert name from
         the media player. [CHAR LIMIT=NONE] 
 String displayed as the alert summary while loading the alert name from
         the media player. [CHAR LIMIT=NONE] 
         */
        public static final int loading_ringtone=0x7f0f0089;
        /**  Font size for AM/PM should match bottom_text_size 
 format strings for clocks 
 Font size for AM/PM should match bottom_text_size 
 Font size for AM/PM should match bottom_text_size 
         */
        public static final int main_clock_12_hours_format=0x7f0f00e3;
        public static final int main_widget_12_hours_format=0x7f0f00e1;
        /**   ActionBar strings 
 Describes the purpose of the tab button which which switches the activity to the Alarm page 
  ActionBar strings 
 Describes the purpose of the tab button which which switches the activity to the Alarm page 
 no translation found for control_set_alarm_with_existing (3359285346655630660) 
         */
        public static final int menu_alarm=0x7f0f008d;
        /**  Describes the purpose of the tab button which which switches the activity to the Clock page 
 Describes the purpose of the tab button which which switches the activity to the Clock page 
         */
        public static final int menu_clock=0x7f0f008f;
        /**  Menu item on Alarm Clock screen: Desk clock 
 Menu item on Alarm Clock screen: Desk clock 
         */
        public static final int menu_desk_clock=0x7f0f004b;
        /**  Menu item on Alarm Clock screen: Edit alarm 
 Menu item on Alarm Clock screen: Edit alarm 
         */
        public static final int menu_edit_alarm=0x7f0f004c;
        /**  Menu item on most screens to get to the help information 
 Menu item on most screens to get to the help information 
         */
        public static final int menu_item_help=0x7f0f0095;
        /**  Menu item on clock screen to enter night mode. 
 Menu item on clock screen to enter night mode. 
         */
        public static final int menu_item_night_mode=0x7f0f0096;
        /**  Menu item on most screens to get to more settings 
 Menu item on most screens to get to more settings 
         */
        public static final int menu_item_settings=0x7f0f0094;
        /**  Menu item on Cities screen to sort by GMT offset 
 Menu item on Cities screen to sort by GMT offset 
         */
        public static final int menu_item_sort_by_gmt_offset=0x7f0f0097;
        /**  Menu item on Cities screen to sort by alphabetical order 
 Menu item on Cities screen to sort by alphabetical order 
         */
        public static final int menu_item_sort_by_name=0x7f0f0098;
        /**  Describes the purpose of the tab button which which switches the activity to the Stopwatch page 
 Describes the purpose of the tab button which which switches the activity to the Stopwatch page 
         */
        public static final int menu_stopwatch=0x7f0f0090;
        /**  Describes the purpose of the tab button which which switches the activity to the Timer page 
 Describes the purpose of the tab button which which switches the activity to the Timer page 
         */
        public static final int menu_timer=0x7f0f008e;
        /** 
         Content description for the minute selector in the time picker, which displays
         selectable five-minute intervals along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static final int minute_picker_description=0x7f0f001e;
        /**  Abbreviation for temporal minutes [CHAR LIMIT=1] 
 Abbreviation for temporal minutes [CHAR LIMIT=1] 
         */
        public static final int minutes_label=0x7f0f00a1;
        public static final int minutes_label_description=0x7f0f00a4;
        /**  Text to appear in when trying to view a missed alarm that has been deleted 
 Text to appear in when trying to view a missed alarm that has been deleted 
         */
        public static final int missed_alarm_has_been_deleted=0x7f0f0069;
        /**  String that represents that the user has attempted to start or reset a timer when
     there were more than 1 timer of desired state in which case it's ambiguous
     which timer the user meant.
    [CHAR LIMIT=NONE]
     
         */
        public static final int multiple_timers_available=0x7f0f00ff;
        public static final int music_button_description=0x7f0f0081;
        /**  Description of field showing the next alarm time in the clock page, for accessibility. 
 Description of field showing the next alarm time in the clock page, for accessibility. 
         */
        public static final int next_alarm_description=0x7f0f00da;
        /**  Notification text when at least one timer, of those in use, is counting down. 
 Notification text when at least one timer, of those in use, is counting down. 
         */
        public static final int next_timer_notif=0x7f0f00d0;
        /**  Describes intensity of display diminuation during dream mode 
 Describes intensity of display diminuation during dream mode 
         */
        public static final int night_mode_summary=0x7f0f00d3;
        /**  Title for check box to pick intensity of display diminuation during dream mode 
 Title for check box to pick intensity of display diminuation during dream mode 
         */
        public static final int night_mode_title=0x7f0f00d2;
        public static final int nightmode_button_description=0x7f0f0082;
        /**  String that represents that no alarm has been specified for a requested hour:minutes.
    This happens when a user sends a voice command 'dismiss my alarm at 3:00pm' but they have no
    alarms specified for that time. %s represents the time of the alarm.
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_alarm_at=0x7f0f00ee;
        /**  String that represents that the user has sent a voice command 'dismiss my alarm at 3pm' when
    there was no alarm scheduled for that time (they might have had an alarm for 3pm on the list
    but it was disabled).
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_alarm_scheduled_for_this_time=0x7f0f00f9;
        /**  String for no alarms 
 String for no alarms 
         */
        public static final int no_alarms=0x7f0f00e6;
        /**  String for no alarms set [CHAR LIMIT=24] 
 String for no alarms set [CHAR LIMIT=24] 
         */
        public static final int no_alarms_set=0x7f0f00e7;
        /**  String that represents that no alarm has been specified for a requested label.
    This happens when a user sends a voice command 'dismiss my alarm with label pick up kids'
     but they have no alarms with that label.
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_alarms_with_label=0x7f0f00f1;
        /**  String that represents that the user attempted to add or delete a world clock through
    a voice action
    but they didn't specify a city so no world clock was selected.
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_city_selected=0x7f0f0106;
        /**  String that represents that the user doesn't have any alarms firing at the moment.
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_firing_alarms=0x7f0f010e;
        /**  String that represents that the user specified that they want to select an alarm to
    dismiss by specifying a 'label' but they didn't specify any labels.
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_label_specified=0x7f0f00f0;
        /**  String that represents that the user doesn't have any alarms scheduled. This happens when
    a user sends a voice command 'dismiss next alarm' or 'dismiss all of my alarms' but they have
    no alarms scheduled in the app.
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_scheduled_alarms=0x7f0f00ef;
        /**  String that represents that the user attempted to send a voice action 'delete a timer'
    when there were no timers available.
    [CHAR LIMIT=NONE]
    
         */
        public static final int no_timer_set=0x7f0f00fc;
        /**  String for no enabled alarms in timeline view [CHAR LIMIT=30] 
 String for no enabled alarms in timeline view [CHAR LIMIT=30] 
         */
        public static final int no_upcoming_alarms=0x7f0f00e8;
        public static final int numbers_radius_multiplier_inner=0x7f0f0017;
        public static final int numbers_radius_multiplier_normal=0x7f0f0016;
        public static final int numbers_radius_multiplier_outer=0x7f0f0018;
        /**  String that represents that further action is needed from the user in case their
    voice command was ambiguous or there are more than 1 alarms that match their request.
    The user needs to choose an alarm they want to dismiss through the UI
   [CHAR LIMIT=NONE]
   
         */
        public static final int pick_alarm_to_dismiss=0x7f0f010d;
        /**  DO NOT TRANSLATE 
         */
        public static final int radial_numbers_typeface=0x7f0f0029;
        /**  Revert button when editing an alarm. 
 Revert button when editing an alarm. 
         */
        public static final int revert=0x7f0f0075;
        /**  Label on expanded alarm edit view. 
 Label on expanded alarm edit view. 
         */
        public static final int ringtone=0x7f0f005a;
        public static final int ringtone_description=0x7f0f0086;
        /**  DO NOT TRANSLATE 
         */
        public static final int sans_serif=0x7f0f002a;
        /**  screensaver settings strings 
 Label for the screen saver activity displayed on-screen when that activity must be represented to the user. 
 screensaver settings strings 
 Label for the screen saver activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int screensaver_settings=0x7f0f00d1;
        /**  Abbreviation for temporal seconds [CHAR LIMIT=1] 
 Abbreviation for temporal seconds [CHAR LIMIT=1] 
         */
        public static final int seconds_label=0x7f0f00a2;
        public static final int seconds_label_description=0x7f0f00a5;
        /**  Accessibility announcement for the day picker [CHAR LIMIT=NONE] 
         */
        public static final int select_day=0x7f0f0023;
        /**  Accessibility announcement for hour circular picker [CHAR LIMIT=NONE] 
         */
        public static final int select_hours=0x7f0f001f;
        /**  Accessibility announcement for minute circular picker [CHAR LIMIT=NONE] 
         */
        public static final int select_minutes=0x7f0f0020;
        /**  Accessibility announcement for the year picker [CHAR LIMIT=NONE] 
         */
        public static final int select_year=0x7f0f0024;
        /**  Label for selected cities in Cities list view 
 Label for selected cities in Cities list view 
         */
        public static final int selected_cities_label=0x7f0f0099;
        public static final int selection_radius_multiplier=0x7f0f0014;
        /**  Preference category on Alarm Settings screen: Set alarm 
 Also label for the old Alarms dialog activity displayed on-screen when that activity must be represented to the user. 
 Preference category on Alarm Settings screen: Set alarm 
 Also label for the old Alarms dialog activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int set_alarm=0x7f0f0055;
        /**  Settings activity name 
 Label for the Settings activity displayed on-screen when that activity must be represented to the user. 
 Settings activity name 
 Label for the Settings activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int settings=0x7f0f006f;
        /**  Menu item on Alarm Clock screen: Show clock 
 Menu item on Alarm Clock screen: Show clock 
         */
        public static final int show_clock=0x7f0f0051;
        /**  Summary for the alarm preference when silent is chosen. 
 Summary for the alarm preference when silent is chosen. 
         */
        public static final int silent_alarm_summary=0x7f0f0078;
        /**  slash between date and next alarm in the clock 
 slash between date and next alarm in the clock 
         */
        public static final int slash=0x7f0f00d8;
        /**  Setting title for changing the snooze duration. 
 Setting title for changing the snooze duration. 
         */
        public static final int snooze_duration_title=0x7f0f0070;
        /**  Text to use when the number in a notification info is too large
         (greater than status_bar_notification_info_maxnum, defined in
         values/config.xml) and must be truncated. May need to be localized
         for most appropriate textual indicator of "more than X".
         [CHAR LIMIT=4] 
         */
        public static final int status_bar_notification_info_overflow=0x7f0f0011;
        /**  String that represents that the user has sent a voice command 'start a stopwatch' when
    the stopwatch was already running so the command wasn't executed.
    [CHAR LIMIT=NONE]
    
         */
        public static final int stopwatch_already_running=0x7f0f00f2;
        /**  String that represents that the user has sent a voice command 'reset the stopwatch' or
     when the stopwatch was running so the command wasn't executed.
    [CHAR LIMIT=NONE]
    
         */
        public static final int stopwatch_cant_be_reset_because_is_running=0x7f0f00f4;
        /**  String that represents that the user has sent a voice command 'stop the stopwatch' or
    'lap the stopwatch' when the stopwatch wasn't running so the command wasn't executed.
    [CHAR LIMIT=NONE]
    
         */
        public static final int stopwatch_isnt_running=0x7f0f00f3;
        /**  String that represents that the user has successfully sent a voice command lapping
    the stopwatch.
    [CHAR LIMIT=NONE]
    
         */
        public static final int stopwatch_lapped=0x7f0f00f7;
        /**  String that represents that the user has successfully sent a voice command resetting
    the stopwatch.
    [CHAR LIMIT=NONE]
    
         */
        public static final int stopwatch_reset=0x7f0f00f6;
        /**  Describes the running service for the stopwatch 
 Describes the running service for the stopwatch 
         */
        public static final int stopwatch_service_desc=0x7f0f00c7;
        /**  String that represents that the user has successfully sent a voice command starting
    the stopwatch.
    [CHAR LIMIT=NONE]
    
         */
        public static final int stopwatch_started=0x7f0f00f8;
        /**  String that represents that the user has successfully sent a voice command stopping
     the stopwatch.
    [CHAR LIMIT=NONE]
    
         */
        public static final int stopwatch_stopped=0x7f0f00f5;
        /**  Describes the purpose of the button to record current the stopwatch value into the4 collection of lap times. 
 Describes the purpose of the button to record current the stopwatch value into the4 collection of lap times. 
         */
        public static final int sw_lap_button=0x7f0f009d;
        /**  Label to enumerate the number of laps in the notification the user has counted 
 Label to enumerate the number of laps in the notification the user has counted 
         */
        public static final int sw_notification_lap_number=0x7f0f00a9;
        /**  Describes the purpose of the button to return the stopwatch to zero and remove the lap times. 
 Describes the purpose of the button to return the stopwatch to zero and remove the lap times. 
         */
        public static final int sw_reset_button=0x7f0f009e;
        /**  Stop Watch strings 
 Describes the purpose of the button to resume running a stopwatch 
 Stop Watch strings 
 Describes the purpose of the button to resume running a stopwatch 
         */
        public static final int sw_resume_button=0x7f0f009a;
        /**  Describes the purpose of the button to share the stopwatch value.
         Also used as title for chooser when sharing stopwatch results. 
 Describes the purpose of the button to share the stopwatch value.
         Also used as title for chooser when sharing stopwatch results. 
         */
        public static final int sw_share_button=0x7f0f009f;
        /**  Header within the message created to share a list of lap times (a new line is appended to this) 
 Header within the message created to share a list of lap times (a new line is appended to this) 
         */
        public static final int sw_share_laps=0x7f0f00a8;
        /**   Stopwatch share strings 
 Sentence within the message created to share the total time recorded within the stopwatch 
  Stopwatch share strings 
 Sentence within the message created to share the total time recorded within the stopwatch 
         */
        public static final int sw_share_main=0x7f0f00a7;
        /**  Describes the purpose of the button to begin running a stopwatch 
 Describes the purpose of the button to begin running a stopwatch 
         */
        public static final int sw_start_button=0x7f0f009b;
        /**  Describes the purpose of the button to pause a stopwatch. 
 Describes the purpose of the button to pause a stopwatch. 
         */
        public static final int sw_stop_button=0x7f0f009c;
        /**  Desription for the stopped stop watch 
 Desription for the stopped stop watch 
         */
        public static final int swn_stopped=0x7f0f00c8;
        public static final int text_size_multiplier_inner=0x7f0f001a;
        public static final int text_size_multiplier_normal=0x7f0f0019;
        public static final int text_size_multiplier_outer=0x7f0f001b;
        /**  String that represents that the user attempted to add a world clock through a voice action
    but the city they specified is already added to the list.
    [CHAR LIMIT=NONE]
    
         */
        public static final int the_city_already_added=0x7f0f0108;
        /**  String that represents that the user attempted to add or delete a world clock through
    a voice action
    but the city they specified wasn't listed in the database.
    [CHAR LIMIT=NONE]
    
         */
        public static final int the_city_you_specified_is_not_available=0x7f0f0107;
        /**  Setting labels on Set alarm screen: Set time  
 Setting labels on Set alarm screen: Set time  
         */
        public static final int time=0x7f0f005b;
        /** 
        String that represents time format for 12-hour time.
        h represents hour in range (1-12) with the minimum number of digits
        mm represents minute with leading 0 in case of values < 10
        a represents am/pm
        Ex: h:mm a = 12:54 am, 8:05 pm
    
         */
        public static final int time_format_12_mode=0x7f0f00e9;
        /** 
        String that represents time format for 24-hour time.
        k represents hour in range (0-23) with the minimum number of digits
        mm represents minute with leading 0 in case of values < 10
        Ex: k:mm = 13:51, 5:05
    
         */
        public static final int time_format_24_mode=0x7f0f00ea;
        /**  add 00 as minutes to the time when pressing this button 
 add 00 as minutes to the time when pressing this button 
         */
        public static final int time_picker_00_label=0x7f0f00c3;
        /**  add 30 as minutes to the time when pressing this button 
 add 30 as minutes to the time when pressing this button 
         */
        public static final int time_picker_30_label=0x7f0f00c4;
        /**   place holder for am/pm label when it is not set 
  place holder for am/pm label when it is not set 
         */
        public static final int time_picker_ampm_label=0x7f0f00c2;
        /**  Textual content of the button to discard the current dialog values and close the dialog 
 Textual content of the button to discard the current dialog values and close the dialog 
         */
        public static final int time_picker_cancel=0x7f0f00bf;
        /**  Textual content of the button to update an alarm with the current dialog values 
 Textual content of the button to update an alarm with the current dialog values 
         */
        public static final int time_picker_set=0x7f0f00c0;
        public static final int time_picker_time_seperator=0x7f0f00c1;
        /**  DO NOT TRANSLATE 
         */
        public static final int time_placeholder=0x7f0f0027;
        /**  DO NOT TRANSLATE 
         */
        public static final int time_separator=0x7f0f0028;
        /**  timer strings 
 Describes the purpose of the button to add a new timer 
 timer strings 
 Describes the purpose of the button to add a new timer 
         */
        public static final int timer_add_timer=0x7f0f00aa;
        /**  String that represents that the user has attempted to start a timer when a timer was
    already running.
    [CHAR LIMIT=NONE]
    
         */
        public static final int timer_already_running=0x7f0f00fe;
        /**  String that represents that the user attempted to stop a timer through a voice action but
    the timer was already stopped (resetting is only allowed when a timer is stopped).
    [CHAR LIMIT=NONE]
    
         */
        public static final int timer_already_stopped=0x7f0f0105;
        /**  Describes the purpose of the button to discard the current dialog values. Will also close the dialog if other time's exist 
 Describes the purpose of the button to discard the current dialog values. Will also close the dialog if other time's exist 
         */
        public static final int timer_cancel=0x7f0f00b3;
        /**  String that represents that the user attempted to reset a timer through a voice action but
    the timer wasn't stopped (resetting is only allowed when a timer is stopped).
    [CHAR LIMIT=NONE]
    
         */
        public static final int timer_cant_be_reset_because_its_running=0x7f0f0104;
        /**  String that represents that the user has successfully created a timer through a voice action.
    [CHAR LIMIT=NONE]
    
         */
        public static final int timer_created=0x7f0f0101;
        /**  Describes the purpose of the button to delete a timer. 
 Describes the purpose of the button to delete a timer. 
         */
        public static final int timer_delete=0x7f0f00ac;
        /**  Timer deletion confirmation 
 Timer deletion confirmation 
         */
        public static final int timer_delete_confirmation=0x7f0f00dd;
        /**  String that represents that the user has successfully deleted a timer through a voice action.
    [CHAR LIMIT=NONE]
    
         */
        public static final int timer_deleted=0x7f0f00fd;
        /**  Talkback description for deleting a number. 
         */
        public static final int timer_descriptive_delete=0x7f0f00ad;
        /**  Describes the purpose of the button to stop and delete the timer. 
 Describes the purpose of the button to stop and delete the timer. 
         */
        public static final int timer_done=0x7f0f00b1;
        /**  Label associated with a notification for a Timer 
 Label associated with a notification for a Timer 
         */
        public static final int timer_notification_label=0x7f0f00b5;
        /**  Like "timer_plus_one", but with 'minute' abbreviated for the notification. 
 Like "timer_plus_one", but with 'minute' abbreviated for the notification. 
         */
        public static final int timer_plus_1_min=0x7f0f00af;
        /**  Describes the purpose of the button increase the remaining time on a timer by one minute. 
 Describes the purpose of the button increase the remaining time on a timer by one minute. 
         */
        public static final int timer_plus_one=0x7f0f00ae;
        /**  Describes the purpose of the button to return the timer to it's original starting value. 
 Describes the purpose of the button to return the timer to it's original starting value. 
         */
        public static final int timer_reset=0x7f0f00b2;
        /**  A description for the DeskClock timer sound playback service.
         [CHAR LIMIT=NONE] 
 A description for the DeskClock timer sound playback service.
         [CHAR LIMIT=NONE] 
         */
        public static final int timer_ring_service_desc=0x7f0f008a;
        /**  Describes the purpose of the button to begin or continue running a timer 
 Describes the purpose of the button to begin or continue running a timer 
         */
        public static final int timer_start=0x7f0f00ab;
        /**  String that represents that the user has successfully started a timer through a voice action.
    [CHAR LIMIT=NONE]
    
         */
        public static final int timer_started=0x7f0f0100;
        /**  Describes the purpose of the button to stop the timer. 
 Describes the purpose of the button to stop the timer. 
         */
        public static final int timer_stop=0x7f0f00b0;
        /**  Notification title when timer is stopped. 
 Notification title when timer is stopped. 
         */
        public static final int timer_stopped=0x7f0f00cc;
        /**  Notification content shown when a timer has completed and has no more time remaining 
 Notification content shown when a timer has completed and has no more time remaining 
         */
        public static final int timer_times_up=0x7f0f00b4;
        /**  String that represents that the user has successfully reset a timer through a voice action.
    [CHAR LIMIT=NONE]
    
         */
        public static final int timer_was_reset=0x7f0f0103;
        /**  Notification title when at least one timer, of those in use, is counting down. 
 Notification title when at least one timer, of those in use, is counting down. 
         */
        public static final int timers_in_use=0x7f0f00cf;
        /**  Toast content shown when user attempts to create a new timer when there are already 4 timers 
 Toast content shown when user attempts to create a new timer when there are already 4 timers 
         */
        public static final int timers_max_count_reached=0x7f0f00b6;
        /**  Notification title when multiple timers are stopped. 
 Notification title when multiple timers are stopped. 
         */
        public static final int timers_stopped=0x7f0f00cd;
        /**  Dialog title of the volume and power setting. 
 Dialog title of the volume and power setting. 
         */
        public static final int volume_button_dialog_title=0x7f0f007d;
        /**  Title of the setting to change hardware button behavior. This string
         should be changed for each piece of hardware. [CHAR LIMIT=20] 
 Title of the setting to change hardware button behavior. This string
         should be changed for each piece of hardware. [CHAR LIMIT=20] 
         */
        public static final int volume_button_setting_title=0x7f0f007c;
        /**  Font size for AM/PM should match widget_label_font_size 
 Font size for AM/PM should match widget_label_font_size 
 Font size for AM/PM should match widget_label_font_size 
         */
        public static final int wc_widget_12_hours_format=0x7f0f00e2;
        /**  What to show the user if the weather widget exists but fails to
         respond. This is a sign of an error; if the weather widget is not
         present on the device, we show nothing at all. 
 What to show the user if the weather widget exists but fails to
         respond. This is a sign of an error; if the weather widget is not
         present on the device, we show nothing at all. 
         */
        public static final int weather_fetch_failure=0x7f0f0087;
        /**  Week start day preference title. 
 no translation found for auto_silence_entries:1 (5431906692406316549) 
 no translation found for auto_silence_entries:2 (7742728812068919959) 
 no translation found for auto_silence_entries:3 (2855948657259647629) 
 no translation found for auto_silence_entries:4 (6330196381284475079) 
 no translation found for auto_silence_entries:5 (7809240121716151904) 
         */
        public static final int week_start_title=0x7f0f0073;
        /** 
        String that represents weekday, time format for 12-hour time.
        EEE represents weekday name in short form (ex. Mon, Tue, Wed)
        h represents hour in range (1-12) with the minimum number of digits
        mm represents minute with leading 0 in case of values < 10
        a represents am/pm
        Ex: EEE, h:mm a = Mon, 2:55 pm
    
         */
        public static final int weekday_time_format_12_mode=0x7f0f00eb;
        /** 
        String that represents weekday, time format for 24-hour time.
        EEE represents weekday name in short form (ex. Mon, Tue, Wed)
        k represents hour in range (0-23) with the minimum number of digits
        mm represents minute with leading 0 in case of values < 10
        Ex: EEE, k:mm = Mon, 2:55
    
         */
        public static final int weekday_time_format_24_mode=0x7f0f00ec;
        /**  Font size for AM/PM should match label_font_size 
 Font size for AM/PM should match label_font_size 
 Font size for AM/PM should match label_font_size 
         */
        public static final int world_clock_12_hours_format=0x7f0f00e4;
        /**  slash between date and next alarm in the clock 
 slash between date and next alarm in the clock 
         */
        public static final int world_day_of_week_label=0x7f0f00d9;
        /** 
        Content description for the year selector in the date picker, which displays
        a scrolling, vertical list of years.
        [CHAR LIMIT=50]
     
         */
        public static final int year_picker_description=0x7f0f0022;
        public static final int zero=0x7f0f00a6;
    }
    public static final class style {
        public static final int AlarmAlertFullScreenTheme=0x7f100145;
        public static final int AlertDialog_AppCompat=0x7f100041;
        public static final int AlertDialog_AppCompat_Light=0x7f100042;
        public static final int AlertDialogTheme=0x7f100137;
        public static final int AmPmTextAppearance=0x7f10013a;
        public static final int Animation_AppCompat_Dialog=0x7f100047;
        public static final int Animation_AppCompat_DropDownUp=0x7f100048;
        /** 
        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f100131;
        public static final int Base_AlertDialog_AppCompat=0x7f1000c8;
        public static final int Base_AlertDialog_AppCompat_Light=0x7f1000c9;
        public static final int Base_Animation_AppCompat_Dialog=0x7f1000c4;
        public static final int Base_Animation_AppCompat_DropDownUp=0x7f1000c7;
        public static final int Base_DialogWindowTitle_AppCompat=0x7f1000c3;
        public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f1000c2;
        public static final int Base_TextAppearance_AppCompat=0x7f1000cc;
        public static final int Base_TextAppearance_AppCompat_Body1=0x7f1000d7;
        public static final int Base_TextAppearance_AppCompat_Body2=0x7f1000d6;
        public static final int Base_TextAppearance_AppCompat_Button=0x7f1000da;
        public static final int Base_TextAppearance_AppCompat_Caption=0x7f1000d8;
        public static final int Base_TextAppearance_AppCompat_Display1=0x7f1000d0;
        public static final int Base_TextAppearance_AppCompat_Display2=0x7f1000cf;
        public static final int Base_TextAppearance_AppCompat_Display3=0x7f1000ce;
        public static final int Base_TextAppearance_AppCompat_Display4=0x7f1000cd;
        public static final int Base_TextAppearance_AppCompat_Headline=0x7f1000d1;
        /**  Deprecated text styles 
 Deprecated text styles 
 Now deprecated styles 
         */
        public static final int Base_TextAppearance_AppCompat_Inverse=0x7f1000dd;
        public static final int Base_TextAppearance_AppCompat_Large=0x7f1000de;
        public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f1000df;
        public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f1000a2;
        public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f1000a3;
        public static final int Base_TextAppearance_AppCompat_Medium=0x7f1000e0;
        public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f1000e1;
        public static final int Base_TextAppearance_AppCompat_Menu=0x7f1000d9;
        public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f1000a4;
        public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f1000a6;
        /**  Search View result styles 
         */
        public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f1000a5;
        public static final int Base_TextAppearance_AppCompat_Small=0x7f1000e2;
        public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f1000e3;
        public static final int Base_TextAppearance_AppCompat_Subhead=0x7f1000d4;
        public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f1000d5;
        public static final int Base_TextAppearance_AppCompat_Title=0x7f1000d2;
        public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f1000d3;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f10008b;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f10008d;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f10008f;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f10008c;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f10008e;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f10008a;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f100089;
        public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f1000db;
        public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f1000dc;
        public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f100098;
        public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f1000a0;
        public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f1000a1;
        public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f1000b8;
        public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f1000c1;
        public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f100099;
        public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f1000ae;
        public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f1000ad;
        public static final int Base_Theme_AppCompat=0x7f100108;
        /**  Menu/item attributes 
         */
        public static final int Base_Theme_AppCompat_CompactMenu=0x7f10010b;
        public static final int Base_Theme_AppCompat_Dialog=0x7f10010e;
        public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f100110;
        public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f100114;
        public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f100112;
        /**  We're not large, so redirect to Theme.AppCompat 
         */
        public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f100116;
        public static final int Base_Theme_AppCompat_Light=0x7f100109;
        public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f10010a;
        public static final int Base_Theme_AppCompat_Light_Dialog=0x7f10010f;
        public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f100111;
        public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f100115;
        public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f100113;
        public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f100117;
        public static final int Base_ThemeOverlay_AppCompat=0x7f100119;
        public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f10011e;
        public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f10011d;
        public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f10011f;
        public static final int Base_ThemeOverlay_AppCompat_Light=0x7f10011c;
        public static final int Base_V11_Theme_AppCompat_Dialog=0x7f100122;
        public static final int Base_V11_Theme_AppCompat_Light_Dialog=0x7f100123;
        public static final int Base_V12_Widget_AppCompat_AutoCompleteTextView=0x7f1000cb;
        public static final int Base_V12_Widget_AppCompat_EditText=0x7f1000ca;
        public static final int Base_V21_Theme_AppCompat=0x7f100126;
        public static final int Base_V21_Theme_AppCompat_Dialog=0x7f100128;
        public static final int Base_V21_Theme_AppCompat_Light=0x7f100127;
        public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f100129;
        public static final int Base_V22_Theme_AppCompat=0x7f10012a;
        public static final int Base_V22_Theme_AppCompat_Light=0x7f10012b;
        public static final int Base_V23_Theme_AppCompat=0x7f10012c;
        public static final int Base_V23_Theme_AppCompat_Light=0x7f10012d;
        /**  Base platform-dependent theme providing an action bar in a dark-themed activity. 
         */
        public static final int Base_V7_Theme_AppCompat=0x7f100106;
        public static final int Base_V7_Theme_AppCompat_Dialog=0x7f10010c;
        /**  Base platform-dependent theme providing an action bar in a light-themed activity. 
         */
        public static final int Base_V7_Theme_AppCompat_Light=0x7f100107;
        public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f10010d;
        public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f1000a8;
        public static final int Base_V7_Widget_AppCompat_EditText=0x7f1000b2;
        public static final int Base_Widget_AppCompat_ActionBar=0x7f10007a;
        public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f10007c;
        public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f100081;
        public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f100085;
        public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f100083;
        /**  Action Button Styles 
         */
        public static final int Base_Widget_AppCompat_ActionButton=0x7f10007e;
        public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f10007f;
        public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f100080;
        public static final int Base_Widget_AppCompat_ActionMode=0x7f100088;
        public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f1000a9;
        public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f1000a7;
        /**  Bordered ink button 
         */
        public static final int Base_Widget_AppCompat_Button=0x7f1000ba;
        /**  Borderless ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Borderless=0x7f1000bd;
        /**  Colored borderless ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f1000be;
        public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f1000bf;
        /**  Colored bordered ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Colored=0x7f1000bc;
        /**  Small bordered ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Small=0x7f1000bb;
        public static final int Base_Widget_AppCompat_ButtonBar=0x7f1000c5;
        public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f1000c6;
        public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f1000b5;
        public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f1000b6;
        public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f1000b7;
        /**  contains values used in all dpis except hdpi and xxhdpi 
         */
        public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f1000b4;
        /**  contains values used in all dpis 
         */
        public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f1000b3;
        public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f100095;
        public static final int Base_Widget_AppCompat_EditText=0x7f1000b1;
        public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f10007b;
        public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f10007d;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f100082;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f100086;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f100087;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f100084;
        public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f10009f;
        public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f10009d;
        /**  Popup Menu 
         */
        public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f10009b;
        public static final int Base_Widget_AppCompat_ListView=0x7f100096;
        /**  Spinner Widgets 
         */
        public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f100097;
        public static final int Base_Widget_AppCompat_ListView_Menu=0x7f10009a;
        public static final int Base_Widget_AppCompat_PopupMenu=0x7f10009e;
        public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f10009c;
        public static final int Base_Widget_AppCompat_PopupWindow=0x7f1000aa;
        public static final int Base_Widget_AppCompat_ProgressBar=0x7f100091;
        /**  Progress Bar 
 Progress Bar 
         */
        public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f100090;
        public static final int Base_Widget_AppCompat_RatingBar=0x7f1000b9;
        public static final int Base_Widget_AppCompat_SearchView=0x7f1000af;
        public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f1000b0;
        public static final int Base_Widget_AppCompat_Spinner=0x7f100093;
        public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f100094;
        public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1000c0;
        public static final int Base_Widget_AppCompat_Toolbar=0x7f1000ab;
        /** 
        Widget.AppCompat.Toolbar style is purposely ommitted. This is because the support
        Toolbar implementation is used on ALL platforms and relies on the unbundled attrs.
        The supporting Toolbar styles below only use basic attrs so work fine.
    
         */
        public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1000ac;
        public static final int BaseActivityTheme=0x7f100135;
        public static final int CitiesActionBarStyle=0x7f100143;
        public static final int CitiesTheme=0x7f100142;
        public static final int ControlAccentThemeOverlay=0x7f100138;
        public static final int DeskClock=0x7f10013b;
        public static final int DeskClockActionBarStyle=0x7f10013f;
        public static final int DeskClockTabBarStyle=0x7f10013e;
        public static final int DeskClockTabBaseStyle=0x7f10013c;
        public static final int DeskClockTabStyle=0x7f10013d;
        /**  variants: v21 
         */
        public static final int FabStyle=0x7f100144;
        public static final int FastScrollStyle=0x7f10016e;
        public static final int ImageButtonStyle=0x7f100148;
        public static final int Platform_AppCompat=0x7f100104;
        public static final int Platform_AppCompat_Light=0x7f100105;
        /**  Overlay themes 
         */
        public static final int Platform_ThemeOverlay_AppCompat=0x7f100118;
        public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f10011a;
        public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f10011b;
        public static final int Platform_V11_AppCompat=0x7f100120;
        public static final int Platform_V11_AppCompat_Light=0x7f100121;
        public static final int Platform_V14_AppCompat=0x7f100124;
        public static final int Platform_V14_AppCompat_Light=0x7f100125;
        /**  Spinner Widgets 
         */
        public static final int Platform_Widget_AppCompat_Spinner=0x7f100092;
        public static final int PrimaryLabelTextAppearance=0x7f100165;
        public static final int PrimaryLabelTextParentAppearance=0x7f100164;
        public static final int RoundTouchButton=0x7f100149;
        public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f1000f0;
        public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f1000ea;
        public static final int RtlOverlay_Widget_AppCompat_ActionButton_Overflow=0x7f1000eb;
        public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f1000ef;
        public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f1000ec;
        public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f1000ed;
        public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f1000ee;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f1000e5;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f1000e7;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f1000e8;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f1000e6;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f1000e9;
        public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f1000e4;
        public static final int ScreensaverActivityTheme=0x7f100147;
        public static final int SecondaryLabelTextAppearance=0x7f100167;
        public static final int SecondaryLabelTextParentAppearance=0x7f100166;
        public static final int SettingsActionBarStyle=0x7f100141;
        /**  Theme that will be used by PreferenceFragment (i.e. *not* AppCompat). 
         */
        public static final int SettingsAlertDialogTheme=0x7f10016b;
        public static final int SettingsTheme=0x7f100140;
        public static final int TextAppearance=0x7f100168;
        public static final int TextAppearance_AppCompat=0x7f100049;
        public static final int TextAppearance_AppCompat_Body1=0x7f100054;
        public static final int TextAppearance_AppCompat_Body2=0x7f100053;
        public static final int TextAppearance_AppCompat_Button=0x7f10005e;
        public static final int TextAppearance_AppCompat_Caption=0x7f100055;
        public static final int TextAppearance_AppCompat_Display1=0x7f10004d;
        public static final int TextAppearance_AppCompat_Display2=0x7f10004c;
        public static final int TextAppearance_AppCompat_Display3=0x7f10004b;
        public static final int TextAppearance_AppCompat_Display4=0x7f10004a;
        public static final int TextAppearance_AppCompat_Headline=0x7f10004e;
        public static final int TextAppearance_AppCompat_Inverse=0x7f100057;
        public static final int TextAppearance_AppCompat_Large=0x7f100058;
        public static final int TextAppearance_AppCompat_Large_Inverse=0x7f100059;
        public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f100067;
        public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f100066;
        public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f10002b;
        public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f10002c;
        public static final int TextAppearance_AppCompat_Medium=0x7f10005a;
        public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f10005b;
        public static final int TextAppearance_AppCompat_Menu=0x7f100056;
        public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f10002e;
        public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f10002d;
        public static final int TextAppearance_AppCompat_Small=0x7f10005c;
        public static final int TextAppearance_AppCompat_Small_Inverse=0x7f10005d;
        public static final int TextAppearance_AppCompat_Subhead=0x7f100051;
        public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f100052;
        public static final int TextAppearance_AppCompat_Title=0x7f10004f;
        public static final int TextAppearance_AppCompat_Title_Inverse=0x7f100050;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f100015;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f100005;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f100007;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f100004;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f100006;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f100018;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f10006a;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f100017;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f100069;
        public static final int TextAppearance_AppCompat_Widget_Button=0x7f10005f;
        public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f100060;
        public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f100019;
        public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f100029;
        public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f10002a;
        public static final int TextAppearance_AppCompat_Widget_Switch=0x7f100061;
        public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f100062;
        /**  Status Bar Styles 
         */
        public static final int TextAppearance_StatusBar=0x7f100169;
        /**  These styles didn't exist on v7. Since we only use the media template in later versions
         (ICS+), just define it here and use the correct references in values/v14 
 Use platform styles 
 Notification content styles 
 Custom notification content styles 
         */
        public static final int TextAppearance_StatusBar_EventContent=0x7f100075;
        public static final int TextAppearance_StatusBar_EventContent_Info=0x7f100078;
        /**  Use own styles for which platform styles are not public 
         */
        public static final int TextAppearance_StatusBar_EventContent_Line2=0x7f100077;
        public static final int TextAppearance_StatusBar_EventContent_Time=0x7f100079;
        public static final int TextAppearance_StatusBar_EventContent_Title=0x7f100076;
        public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f100021;
        public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f100046;
        public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f100045;
        /**  Themes in the "Theme.AppCompat" family will contain an action bar by default.
         If Holo themes are available on the current platform version they will be used.
         A limited Holo-styled action bar will be provided on platform versions older
         than 3.0. (API 11)

         These theme declarations contain any version-independent specification. Items
         that need to vary based on platform version should be defined in the corresponding
         "Theme.Base" theme. 
 Platform-independent theme providing an action bar in a dark-themed activity. 
         */
        public static final int Theme_AppCompat=0x7f1000f1;
        /**  Menu/item attributes 
         */
        public static final int Theme_AppCompat_CompactMenu=0x7f1000fe;
        public static final int Theme_AppCompat_Dialog=0x7f1000f8;
        /**  Material theme for alert dialog windows, which is used by the AlertDialog class.
         This is basically a dialog but sets the background to empty so it can do
         two-tone backgrounds. For applications targeting Honeycomb or newer, this is the default
         AlertDialog theme. 
         */
        public static final int Theme_AppCompat_Dialog_Alert=0x7f1000fa;
        /**  Variant of Theme.AppCompat.Dialog that has a nice minimum width for
         a regular dialog. 
         */
        public static final int Theme_AppCompat_Dialog_MinWidth=0x7f1000fc;
        public static final int Theme_AppCompat_DialogWhenLarge=0x7f1000f6;
        /**  Platform-independent theme providing an action bar in a light-themed activity. 
         */
        public static final int Theme_AppCompat_Light=0x7f1000f2;
        /**  Platform-independent theme providing an action bar in a dark-themed activity. 
         */
        public static final int Theme_AppCompat_Light_DarkActionBar=0x7f1000f3;
        public static final int Theme_AppCompat_Light_Dialog=0x7f1000f9;
        public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f1000fb;
        public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f1000fd;
        public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f1000f7;
        public static final int Theme_AppCompat_Light_NoActionBar=0x7f1000f5;
        public static final int Theme_AppCompat_NoActionBar=0x7f1000f4;
        public static final int ThemeOverlay_AppCompat=0x7f1000ff;
        /**  Theme overlay that replaces the normal control color, which by default is the same as the
         secondary text color, with the primary text color. 
         */
        public static final int ThemeOverlay_AppCompat_ActionBar=0x7f100102;
        /**  Theme overlay that replaces colors with their dark versions but preserves
         the value of colorAccent, colorPrimary and its variants. 
         */
        public static final int ThemeOverlay_AppCompat_Dark=0x7f100101;
        /**  Theme overlay that replaces colors with their dark versions and replaces the normal
         control color, which by default is the same as the secondary text color, with the primary
         text color. 
         */
        public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f100103;
        /**  Theme overlay that replaces colors with their light versions but preserves
         the value of colorAccent, colorPrimary and its variants. 
         */
        public static final int ThemeOverlay_AppCompat_Light=0x7f100100;
        public static final int TimeLabelTextAppearance=0x7f100139;
        public static final int TimePickerStyle=0x7f10016d;
        public static final int TimePickerTheme=0x7f10016c;
        public static final int TimerAlertFullScreenTheme=0x7f100146;
        public static final int ToastBarStyle=0x7f10016a;
        public static final int TranslucentDecorActivityTheme=0x7f100136;
        /**  Styles in here can be extended for customisation in your application. Each utilises
         one of the.styles. If Holo themes are available on the current platform version
         they will be used instead of the compat styles. 
         */
        public static final int Widget_AppCompat_ActionBar=0x7f100000;
        public static final int Widget_AppCompat_ActionBar_Solid=0x7f100002;
        public static final int Widget_AppCompat_ActionBar_TabBar=0x7f10000d;
        public static final int Widget_AppCompat_ActionBar_TabText=0x7f100011;
        public static final int Widget_AppCompat_ActionBar_TabView=0x7f10000f;
        public static final int Widget_AppCompat_ActionButton=0x7f10000a;
        public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f10000b;
        public static final int Widget_AppCompat_ActionButton_Overflow=0x7f10000c;
        public static final int Widget_AppCompat_ActionMode=0x7f100016;
        public static final int Widget_AppCompat_ActivityChooserView=0x7f100030;
        public static final int Widget_AppCompat_AutoCompleteTextView=0x7f10002f;
        public static final int Widget_AppCompat_Button=0x7f100038;
        public static final int Widget_AppCompat_Button_Borderless=0x7f10003a;
        public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f10003b;
        public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f10003c;
        public static final int Widget_AppCompat_Button_Colored=0x7f10003d;
        public static final int Widget_AppCompat_Button_Small=0x7f100039;
        public static final int Widget_AppCompat_ButtonBar=0x7f10003e;
        public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f10003f;
        public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f100035;
        public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f100036;
        public static final int Widget_AppCompat_CompoundButton_Switch=0x7f100034;
        public static final int Widget_AppCompat_DrawerArrowToggle=0x7f100012;
        /**  This style has an extra indirection to properly set RTL attributes. See styles_rtl.xml 
         */
        public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f10001e;
        public static final int Widget_AppCompat_EditText=0x7f100033;
        public static final int Widget_AppCompat_Light_ActionBar=0x7f100001;
        public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f100003;
        /** 
         The following themes are deprecated.
    
         */
        public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f100063;
        public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f10000e;
        public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f100064;
        public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f100013;
        public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f100014;
        public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f100010;
        public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f100065;
        public static final int Widget_AppCompat_Light_ActionButton=0x7f10006d;
        public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f10006f;
        public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f10006e;
        public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f100068;
        public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f100074;
        public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f100073;
        public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f10006b;
        public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f100072;
        public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f100071;
        public static final int Widget_AppCompat_Light_PopupMenu=0x7f100026;
        public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f100024;
        public static final int Widget_AppCompat_Light_SearchView=0x7f10006c;
        public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f100070;
        public static final int Widget_AppCompat_ListPopupWindow=0x7f100022;
        public static final int Widget_AppCompat_ListView=0x7f10001f;
        public static final int Widget_AppCompat_ListView_DropDown=0x7f100020;
        public static final int Widget_AppCompat_ListView_Menu=0x7f100027;
        public static final int Widget_AppCompat_PopupMenu=0x7f100025;
        public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f100023;
        public static final int Widget_AppCompat_PopupWindow=0x7f100028;
        public static final int Widget_AppCompat_ProgressBar=0x7f100009;
        public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f100008;
        public static final int Widget_AppCompat_RatingBar=0x7f100037;
        public static final int Widget_AppCompat_SearchView=0x7f100031;
        public static final int Widget_AppCompat_SearchView_ActionBar=0x7f100032;
        public static final int Widget_AppCompat_Spinner=0x7f10001a;
        public static final int Widget_AppCompat_Spinner_DropDown=0x7f10001c;
        public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f10001d;
        public static final int Widget_AppCompat_Spinner_Underlined=0x7f10001b;
        public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f100040;
        /**  Toolbar 
         */
        public static final int Widget_AppCompat_Toolbar=0x7f100043;
        public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f100044;
        public static final int alarm_label=0x7f10015b;
        public static final int alarm_label_bold=0x7f10015d;
        public static final int alarm_label_not_caps=0x7f10015c;
        public static final int alarm_list_left_column=0x7f10014a;
        public static final int alarm_lockscreen_thin=0x7f100159;
        public static final int ampm_label=0x7f10012f;
        public static final int big_thin=0x7f100158;
        public static final int body=0x7f10015e;
        public static final int body_bold=0x7f100161;
        public static final int body_not_caps=0x7f100160;
        public static final int clock=0x7f100134;
        public static final int day_of_week_label_condensed=0x7f100130;
        public static final int dialpad=0x7f100163;
        public static final int done_button_light=0x7f100133;
        public static final int header=0x7f100156;
        public static final int header_not_caps=0x7f100157;
        public static final int label=0x7f100153;
        public static final int labelEditTextStyle=0x7f100162;
        public static final int label_not_caps=0x7f100154;
        public static final int medium_light=0x7f100151;
        public static final int no_alarms=0x7f10014d;
        public static final int small_bold=0x7f10014b;
        public static final int small_light=0x7f10014e;
        public static final int small_thin=0x7f10014c;
        public static final int time_label=0x7f10012e;
        /**  Style for dialog labels. 
         */
        public static final int time_label_thin=0x7f100132;
        public static final int timer_setup_digit=0x7f10014f;
        public static final int timer_setup_label=0x7f100150;
        public static final int undo_toast=0x7f10015f;
        public static final int widget_big_thin=0x7f10015a;
        /** modify by liqiang  First letter lowercase in digitalwidget 20160408 start bug_id:DELSLMY-1441   
         */
        public static final int widget_label=0x7f100155;
        public static final int widget_medium_thin=0x7f100152;
    }
    public static final class xml {
        public static final int analog_appwidget=0x7f080000;
        public static final int backup_scheme=0x7f080001;
        public static final int digital_appwidget=0x7f080002;
        public static final int dream_info=0x7f080003;
        public static final int dream_settings=0x7f080004;
        public static final int settings=0x7f080005;
    }
    public static final class styleable {
        /**  ============================================ 
 Attributes used to style the Action Bar.
         These should be set on your theme; the default actionBarStyle will
         propagate them to the correct elements as needed.

         Please Note: when overriding attributes for an ActionBar style
         you must specify each attribute twice: once with the "android:"
         namespace prefix and once without. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionBar_background com.android.deskclock:background}</code></td><td> Specifies a background drawable for the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_backgroundSplit com.android.deskclock:backgroundSplit}</code></td><td> Specifies a background drawable for the bottom component of a split action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_backgroundStacked com.android.deskclock:backgroundStacked}</code></td><td> Specifies a background drawable for a second stacked row of the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.deskclock:contentInsetEnd}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.deskclock:contentInsetLeft}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetRight com.android.deskclock:contentInsetRight}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetStart com.android.deskclock:contentInsetStart}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.deskclock:customNavigationLayout}</code></td><td> Specifies a layout for custom navigation.</td></tr>
           <tr><td><code>{@link #ActionBar_displayOptions com.android.deskclock:displayOptions}</code></td><td> Options affecting how the action bar is displayed.</td></tr>
           <tr><td><code>{@link #ActionBar_divider com.android.deskclock:divider}</code></td><td> Specifies the drawable used for item dividers.</td></tr>
           <tr><td><code>{@link #ActionBar_elevation com.android.deskclock:elevation}</code></td><td> Elevation for the action bar itself </td></tr>
           <tr><td><code>{@link #ActionBar_height com.android.deskclock:height}</code></td><td> Specifies a fixed height.</td></tr>
           <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.deskclock:hideOnContentScroll}</code></td><td> Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
           <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.deskclock:homeAsUpIndicator}</code></td><td> Up navigation glyph </td></tr>
           <tr><td><code>{@link #ActionBar_homeLayout com.android.deskclock:homeLayout}</code></td><td> Specifies a layout to use for the "home" section of the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_icon com.android.deskclock:icon}</code></td><td> Specifies the drawable used for the application icon.</td></tr>
           <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.deskclock:indeterminateProgressStyle}</code></td><td> Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
           <tr><td><code>{@link #ActionBar_itemPadding com.android.deskclock:itemPadding}</code></td><td> Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar.</td></tr>
           <tr><td><code>{@link #ActionBar_logo com.android.deskclock:logo}</code></td><td> Specifies the drawable used for the application logo.</td></tr>
           <tr><td><code>{@link #ActionBar_navigationMode com.android.deskclock:navigationMode}</code></td><td> The type of navigation to use.</td></tr>
           <tr><td><code>{@link #ActionBar_popupTheme com.android.deskclock:popupTheme}</code></td><td> Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_progressBarPadding com.android.deskclock:progressBarPadding}</code></td><td> Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
           <tr><td><code>{@link #ActionBar_progressBarStyle com.android.deskclock:progressBarStyle}</code></td><td> Specifies a style resource to use for an embedded progress bar.</td></tr>
           <tr><td><code>{@link #ActionBar_subtitle com.android.deskclock:subtitle}</code></td><td> Specifies subtitle text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.deskclock:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
           <tr><td><code>{@link #ActionBar_title com.android.deskclock:title}</code></td><td> Specifies title text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #ActionBar_titleTextStyle com.android.deskclock:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
           </table>
           @see #ActionBar_background
           @see #ActionBar_backgroundSplit
           @see #ActionBar_backgroundStacked
           @see #ActionBar_contentInsetEnd
           @see #ActionBar_contentInsetLeft
           @see #ActionBar_contentInsetRight
           @see #ActionBar_contentInsetStart
           @see #ActionBar_customNavigationLayout
           @see #ActionBar_displayOptions
           @see #ActionBar_divider
           @see #ActionBar_elevation
           @see #ActionBar_height
           @see #ActionBar_hideOnContentScroll
           @see #ActionBar_homeAsUpIndicator
           @see #ActionBar_homeLayout
           @see #ActionBar_icon
           @see #ActionBar_indeterminateProgressStyle
           @see #ActionBar_itemPadding
           @see #ActionBar_logo
           @see #ActionBar_navigationMode
           @see #ActionBar_popupTheme
           @see #ActionBar_progressBarPadding
           @see #ActionBar_progressBarStyle
           @see #ActionBar_subtitle
           @see #ActionBar_subtitleTextStyle
           @see #ActionBar_title
           @see #ActionBar_titleTextStyle
         */
        public static final int[] ActionBar = {
            0x7f01000e, 0x7f01000f, 0x7f01003f, 0x7f01007b,
            0x7f01007c, 0x7f01007d, 0x7f01007e, 0x7f01007f,
            0x7f010080, 0x7f010081, 0x7f010082, 0x7f010083,
            0x7f010084, 0x7f010085, 0x7f010086, 0x7f010087,
            0x7f010088, 0x7f010089, 0x7f01008a, 0x7f01008b,
            0x7f01008c, 0x7f01008d, 0x7f01008e, 0x7f01008f,
            0x7f010090, 0x7f010091, 0x7f010092
        };
        /**
          <p>
          @attr description
           Specifies a background drawable for the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:background
        */
        public static final int ActionBar_background = 11;
        /**
          <p>
          @attr description
           Specifies a background drawable for the bottom component of a split action bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:backgroundSplit
        */
        public static final int ActionBar_backgroundSplit = 13;
        /**
          <p>
          @attr description
           Specifies a background drawable for a second stacked row of the action bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:backgroundStacked
        */
        public static final int ActionBar_backgroundStacked = 12;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetEnd
        */
        public static final int ActionBar_contentInsetEnd = 22;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetLeft
        */
        public static final int ActionBar_contentInsetLeft = 23;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetRight
        */
        public static final int ActionBar_contentInsetRight = 24;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetStart
        */
        public static final int ActionBar_contentInsetStart = 21;
        /**
          <p>
          @attr description
           Specifies a layout for custom navigation. Overrides navigationMode. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:customNavigationLayout
        */
        public static final int ActionBar_customNavigationLayout = 14;
        /**
          <p>
          @attr description
           Options affecting how the action bar is displayed. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
<tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
<tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
<tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
<tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
<tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:displayOptions
        */
        public static final int ActionBar_displayOptions = 4;
        /**
          <p>
          @attr description
           Specifies the drawable used for item dividers. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:divider
        */
        public static final int ActionBar_divider = 10;
        /**
          <p>
          @attr description
           Elevation for the action bar itself 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:elevation
        */
        public static final int ActionBar_elevation = 25;
        /**
          <p>
          @attr description
           Specifies a fixed height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:height
        */
        public static final int ActionBar_height = 1;
        /**
          <p>
          @attr description
           Set true to hide the action bar on a vertical nested scroll of content. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:hideOnContentScroll
        */
        public static final int ActionBar_hideOnContentScroll = 20;
        /**
          <p>
          @attr description
           Up navigation glyph 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:homeAsUpIndicator
        */
        public static final int ActionBar_homeAsUpIndicator = 2;
        /**
          <p>
          @attr description
           Specifies a layout to use for the "home" section of the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:homeLayout
        */
        public static final int ActionBar_homeLayout = 15;
        /**
          <p>
          @attr description
           Specifies the drawable used for the application icon. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:icon
        */
        public static final int ActionBar_icon = 8;
        /**
          <p>
          @attr description
           Specifies a style resource to use for an indeterminate progress spinner. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:indeterminateProgressStyle
        */
        public static final int ActionBar_indeterminateProgressStyle = 17;
        /**
          <p>
          @attr description
           Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:itemPadding
        */
        public static final int ActionBar_itemPadding = 19;
        /**
          <p>
          @attr description
           Specifies the drawable used for the application logo. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:logo
        */
        public static final int ActionBar_logo = 9;
        /**
          <p>
          @attr description
           The type of navigation to use. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
<tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
<tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:navigationMode
        */
        public static final int ActionBar_navigationMode = 3;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:popupTheme
        */
        public static final int ActionBar_popupTheme = 26;
        /**
          <p>
          @attr description
           Specifies the horizontal padding on either end for an embedded progress bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:progressBarPadding
        */
        public static final int ActionBar_progressBarPadding = 18;
        /**
          <p>
          @attr description
           Specifies a style resource to use for an embedded progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:progressBarStyle
        */
        public static final int ActionBar_progressBarStyle = 16;
        /**
          <p>
          @attr description
           Specifies subtitle text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:subtitle
        */
        public static final int ActionBar_subtitle = 5;
        /**
          <p>
          @attr description
           Specifies a style to use for subtitle text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:subtitleTextStyle
        */
        public static final int ActionBar_subtitleTextStyle = 7;
        /**
          <p>
          @attr description
           Specifies title text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:title
        */
        public static final int ActionBar_title = 0;
        /**
          <p>
          @attr description
           Specifies a style to use for title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:titleTextStyle
        */
        public static final int ActionBar_titleTextStyle = 6;
        /**  Valid LayoutParams for views placed in the action bar as custom views. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
           </table>
           @see #ActionBarLayout_android_layout_gravity
         */
        public static final int[] ActionBarLayout = {
            0x010100b3
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
          attribute's value can be found in the {@link #ActionBarLayout} array.
          @attr name android:layout_gravity
        */
        public static final int ActionBarLayout_android_layout_gravity = 0;
        /** Attributes that can be used with a ActionMenuItemView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
           </table>
           @see #ActionMenuItemView_android_minWidth
         */
        public static final int[] ActionMenuItemView = {
            0x0101013f
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#minWidth}
          attribute's value can be found in the {@link #ActionMenuItemView} array.
          @attr name android:minWidth
        */
        public static final int ActionMenuItemView_android_minWidth = 0;
        /**  Size of padding on either end of a divider. 
         */
        public static final int[] ActionMenuView = {
            
        };
        /** Attributes that can be used with a ActionMode.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionMode_background com.android.deskclock:background}</code></td><td> Specifies a background for the action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_backgroundSplit com.android.deskclock:backgroundSplit}</code></td><td> Specifies a background for the split action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_closeItemLayout com.android.deskclock:closeItemLayout}</code></td><td> Specifies a layout to use for the "close" item at the starting edge.</td></tr>
           <tr><td><code>{@link #ActionMode_height com.android.deskclock:height}</code></td><td> Specifies a fixed height for the action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.deskclock:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
           <tr><td><code>{@link #ActionMode_titleTextStyle com.android.deskclock:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
           </table>
           @see #ActionMode_background
           @see #ActionMode_backgroundSplit
           @see #ActionMode_closeItemLayout
           @see #ActionMode_height
           @see #ActionMode_subtitleTextStyle
           @see #ActionMode_titleTextStyle
         */
        public static final int[] ActionMode = {
            0x7f01000f, 0x7f01007e, 0x7f01007f, 0x7f010083,
            0x7f010085, 0x7f010093
        };
        /**
          <p>
          @attr description
           Specifies a background for the action mode bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:background
        */
        public static final int ActionMode_background = 3;
        /**
          <p>
          @attr description
           Specifies a background for the split action mode bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:backgroundSplit
        */
        public static final int ActionMode_backgroundSplit = 4;
        /**
          <p>
          @attr description
           Specifies a layout to use for the "close" item at the starting edge. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:closeItemLayout
        */
        public static final int ActionMode_closeItemLayout = 5;
        /**
          <p>
          @attr description
           Specifies a fixed height for the action mode bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:height
        */
        public static final int ActionMode_height = 0;
        /**
          <p>
          @attr description
           Specifies a style to use for subtitle text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:subtitleTextStyle
        */
        public static final int ActionMode_subtitleTextStyle = 2;
        /**
          <p>
          @attr description
           Specifies a style to use for title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:titleTextStyle
        */
        public static final int ActionMode_titleTextStyle = 1;
        /**  Attrbitutes for a ActivityChooserView. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.deskclock:expandActivityOverflowButtonDrawable}</code></td><td> The drawable to show in the button for expanding the activities overflow popup.</td></tr>
           <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.deskclock:initialActivityCount}</code></td><td> The maximal number of items initially shown in the activity list.</td></tr>
           </table>
           @see #ActivityChooserView_expandActivityOverflowButtonDrawable
           @see #ActivityChooserView_initialActivityCount
         */
        public static final int[] ActivityChooserView = {
            0x7f0100ab, 0x7f0100ac
        };
        /**
          <p>
          @attr description
           The drawable to show in the button for expanding the activities overflow popup.
             <strong>Note:</strong> Clients would like to set this drawable
             as a clue about the action the chosen activity will perform. For
             example, if share activity is to be chosen the drawable should
             give a clue that sharing is to be performed.
         


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:expandActivityOverflowButtonDrawable
        */
        public static final int ActivityChooserView_expandActivityOverflowButtonDrawable = 1;
        /**
          <p>
          @attr description
           The maximal number of items initially shown in the activity list. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:initialActivityCount
        */
        public static final int ActivityChooserView_initialActivityCount = 0;
        /**  The set of attributes that describe a AlertDialog's theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.deskclock:buttonPanelSideLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_listItemLayout com.android.deskclock:listItemLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_listLayout com.android.deskclock:listLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.deskclock:multiChoiceItemLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.deskclock:singleChoiceItemLayout}</code></td><td></td></tr>
           </table>
           @see #AlertDialog_android_layout
           @see #AlertDialog_buttonPanelSideLayout
           @see #AlertDialog_listItemLayout
           @see #AlertDialog_listLayout
           @see #AlertDialog_multiChoiceItemLayout
           @see #AlertDialog_singleChoiceItemLayout
         */
        public static final int[] AlertDialog = {
            0x010100f2, 0x7f0100d4, 0x7f0100d5, 0x7f0100d6,
            0x7f0100d7, 0x7f0100d8
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout}
          attribute's value can be found in the {@link #AlertDialog} array.
          @attr name android:layout
        */
        public static final int AlertDialog_android_layout = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#buttonPanelSideLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:buttonPanelSideLayout
        */
        public static final int AlertDialog_buttonPanelSideLayout = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#listItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:listItemLayout
        */
        public static final int AlertDialog_listItemLayout = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#listLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:listLayout
        */
        public static final int AlertDialog_listLayout = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#multiChoiceItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:multiChoiceItemLayout
        */
        public static final int AlertDialog_multiChoiceItemLayout = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#singleChoiceItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:singleChoiceItemLayout
        */
        public static final int AlertDialog_singleChoiceItemLayout = 4;
        /** Attributes that can be used with a AnalogClock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnalogClock_jewelColor com.android.deskclock:jewelColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_jewelOffset com.android.deskclock:jewelOffset}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_jewelRadius com.android.deskclock:jewelRadius}</code></td><td></td></tr>
           </table>
           @see #AnalogClock_jewelColor
           @see #AnalogClock_jewelOffset
           @see #AnalogClock_jewelRadius
         */
        public static final int[] AnalogClock = {
            0x7f0100d9, 0x7f0100da, 0x7f0100db
        };
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelColor}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelColor
        */
        public static final int AnalogClock_jewelColor = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelOffset}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelOffset
        */
        public static final int AnalogClock_jewelOffset = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelRadius}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelRadius
        */
        public static final int AnalogClock_jewelRadius = 0;
        /** Attributes that can be used with a AppCompatTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.deskclock:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           </table>
           @see #AppCompatTextView_android_textAppearance
           @see #AppCompatTextView_textAllCaps
         */
        public static final int[] AppCompatTextView = {
            0x01010034, 0x7f0100ad
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
          attribute's value can be found in the {@link #AppCompatTextView} array.
          @attr name android:textAppearance
        */
        public static final int AppCompatTextView_android_textAppearance = 0;
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAllCaps
        */
        public static final int AppCompatTextView_textAllCaps = 1;
        /** Attributes that can be used with a CircleView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CircleView_android_gravity android:gravity}</code></td><td> Sets the center/radius of the circle relative to the view's bounds.</td></tr>
           <tr><td><code>{@link #CircleView_centerX com.android.deskclock:centerX}</code></td><td> The center x-coordinate of the circle.</td></tr>
           <tr><td><code>{@link #CircleView_centerY com.android.deskclock:centerY}</code></td><td> The center y-coordinate of the circle.</td></tr>
           <tr><td><code>{@link #CircleView_fillColor com.android.deskclock:fillColor}</code></td><td> The ARGB fill color of the circle.</td></tr>
           <tr><td><code>{@link #CircleView_radius com.android.deskclock:radius}</code></td><td> The radius of the circle.</td></tr>
           </table>
           @see #CircleView_android_gravity
           @see #CircleView_centerX
           @see #CircleView_centerY
           @see #CircleView_fillColor
           @see #CircleView_radius
         */
        public static final int[] CircleView = {
            0x010100af, 0x7f0100de, 0x7f0100df, 0x7f0100e0,
            0x7f0100e1
        };
        /**
          <p>
          @attr description
           Sets the center/radius of the circle relative to the view's bounds. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#gravity}.
          @attr name android:gravity
        */
        public static final int CircleView_android_gravity = 0;
        /**
          <p>
          @attr description
           The center x-coordinate of the circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:centerX
        */
        public static final int CircleView_centerX = 2;
        /**
          <p>
          @attr description
           The center y-coordinate of the circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:centerY
        */
        public static final int CircleView_centerY = 3;
        /**
          <p>
          @attr description
           The ARGB fill color of the circle. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:fillColor
        */
        public static final int CircleView_fillColor = 1;
        /**
          <p>
          @attr description
           The radius of the circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:radius
        */
        public static final int CircleView_radius = 4;
        /** Attributes that can be used with a CompoundButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
           <tr><td><code>{@link #CompoundButton_buttonTint com.android.deskclock:buttonTint}</code></td><td> Tint to apply to the button drawable.</td></tr>
           <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.deskclock:buttonTintMode}</code></td><td> Blending mode used to apply the button tint.</td></tr>
           </table>
           @see #CompoundButton_android_button
           @see #CompoundButton_buttonTint
           @see #CompoundButton_buttonTintMode
         */
        public static final int[] CompoundButton = {
            0x01010107, 0x7f0100cb, 0x7f0100cc
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#button}
          attribute's value can be found in the {@link #CompoundButton} array.
          @attr name android:button
        */
        public static final int CompoundButton_android_button = 0;
        /**
          <p>
          @attr description
           Tint to apply to the button drawable. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonTint
        */
        public static final int CompoundButton_buttonTint = 1;
        /**
          <p>
          @attr description
           Blending mode used to apply the button tint. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonTintMode
        */
        public static final int CompoundButton_buttonTintMode = 2;
        /** Attributes that can be used with a DrawerArrowToggle.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.deskclock:arrowHeadLength}</code></td><td> The length of the arrow head when formed to make an arrow </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.deskclock:arrowShaftLength}</code></td><td> The length of the shaft when formed to make an arrow </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.deskclock:barLength}</code></td><td> The length of the bars when they are parallel to each other </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_color com.android.deskclock:color}</code></td><td> The drawing color for the bars </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.deskclock:drawableSize}</code></td><td> The total size of the drawable </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.deskclock:gapBetweenBars}</code></td><td> The max gap between the bars when they are parallel to each other </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.deskclock:spinBars}</code></td><td> Whether bars should rotate or not during transition </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.deskclock:thickness}</code></td><td> The thickness (stroke size) for the bar paint </td></tr>
           </table>
           @see #DrawerArrowToggle_arrowHeadLength
           @see #DrawerArrowToggle_arrowShaftLength
           @see #DrawerArrowToggle_barLength
           @see #DrawerArrowToggle_color
           @see #DrawerArrowToggle_drawableSize
           @see #DrawerArrowToggle_gapBetweenBars
           @see #DrawerArrowToggle_spinBars
           @see #DrawerArrowToggle_thickness
         */
        public static final int[] DrawerArrowToggle = {
            0x7f0100c2, 0x7f0100c3, 0x7f0100c4, 0x7f0100c5,
            0x7f0100c6, 0x7f0100c7, 0x7f0100c8, 0x7f0100c9
        };
        /**
          <p>
          @attr description
           The length of the arrow head when formed to make an arrow 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:arrowHeadLength
        */
        public static final int DrawerArrowToggle_arrowHeadLength = 4;
        /**
          <p>
          @attr description
           The length of the shaft when formed to make an arrow 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:arrowShaftLength
        */
        public static final int DrawerArrowToggle_arrowShaftLength = 5;
        /**
          <p>
          @attr description
           The length of the bars when they are parallel to each other 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:barLength
        */
        public static final int DrawerArrowToggle_barLength = 6;
        /**
          <p>
          @attr description
           The drawing color for the bars 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:color
        */
        public static final int DrawerArrowToggle_color = 0;
        /**
          <p>
          @attr description
           The total size of the drawable 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:drawableSize
        */
        public static final int DrawerArrowToggle_drawableSize = 2;
        /**
          <p>
          @attr description
           The max gap between the bars when they are parallel to each other 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:gapBetweenBars
        */
        public static final int DrawerArrowToggle_gapBetweenBars = 3;
        /**
          <p>
          @attr description
           Whether bars should rotate or not during transition 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:spinBars
        */
        public static final int DrawerArrowToggle_spinBars = 1;
        /**
          <p>
          @attr description
           The thickness (stroke size) for the bar paint 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:thickness
        */
        public static final int DrawerArrowToggle_thickness = 7;
        /** Attributes that can be used with a GridLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_alignmentMode com.android.deskclock:alignmentMode}</code></td><td>
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins.</td></tr>
           <tr><td><code>{@link #GridLayout_columnCount com.android.deskclock:columnCount}</code></td><td> The maximum number of columns to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_columnOrderPreserved com.android.deskclock:columnOrderPreserved}</code></td><td>
        When set to true, forces column boundaries to appear in the same order
        as column indices.</td></tr>
           <tr><td><code>{@link #GridLayout_orientation com.android.deskclock:orientation}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_rowCount com.android.deskclock:rowCount}</code></td><td> The maximum number of rows to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_rowOrderPreserved com.android.deskclock:rowOrderPreserved}</code></td><td>
        When set to true, forces row boundaries to appear in the same order
        as row indices.</td></tr>
           <tr><td><code>{@link #GridLayout_useDefaultMargins com.android.deskclock:useDefaultMargins}</code></td><td>
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.</td></tr>
           </table>
           @see #GridLayout_alignmentMode
           @see #GridLayout_columnCount
           @see #GridLayout_columnOrderPreserved
           @see #GridLayout_orientation
           @see #GridLayout_rowCount
           @see #GridLayout_rowOrderPreserved
           @see #GridLayout_useDefaultMargins
         */
        public static final int[] GridLayout = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006
        };
        /**
          <p>
          @attr description
          
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:alignmentMode
        */
        public static final int GridLayout_alignmentMode = 4;
        /**
          <p>
          @attr description
           The maximum number of columns to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:columnCount
        */
        public static final int GridLayout_columnCount = 2;
        /**
          <p>
          @attr description
          
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:columnOrderPreserved
        */
        public static final int GridLayout_columnOrderPreserved = 6;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:orientation
        */
        public static final int GridLayout_orientation = 0;
        /**
          <p>
          @attr description
           The maximum number of rows to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:rowCount
        */
        public static final int GridLayout_rowCount = 1;
        /**
          <p>
          @attr description
          
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:rowOrderPreserved
        */
        public static final int GridLayout_rowOrderPreserved = 5;
        /**
          <p>
          @attr description
          
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:useDefaultMargins
        */
        public static final int GridLayout_useDefaultMargins = 3;
        /** Attributes that can be used with a GridLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_margin android:layout_margin}</code></td><td>
              Specifies extra space on the left, top, right and bottom
              sides of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td>
              Specifies extra space on the bottom side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td>
              Specifies extra space on the left side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight android:layout_marginRight}</code></td><td>
              Specifies extra space on the right side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop android:layout_marginTop}</code></td><td>
              Specifies extra space on the top side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_width android:layout_width}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_column com.android.deskclock:layout_column}</code></td><td>
        The column boundary delimiting the left of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan com.android.deskclock:layout_columnSpan}</code></td><td>
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_columnWeight com.android.deskclock:layout_columnWeight}</code></td><td> The relative proportion of horizontal space that should be allocated to this view
        during excess space distribution.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_gravity com.android.deskclock:layout_gravity}</code></td><td>
        Gravity specifies how a component should be placed in its group of cells.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_row com.android.deskclock:layout_row}</code></td><td> END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan com.android.deskclock:layout_rowSpan}</code></td><td>
        The row span: the difference between the top and bottom
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_rowWeight com.android.deskclock:layout_rowWeight}</code></td><td> The relative proportion of vertical space that should be allocated to this view
        during excess space distribution.</td></tr>
           </table>
           @see #GridLayout_Layout_android_layout_height
           @see #GridLayout_Layout_android_layout_margin
           @see #GridLayout_Layout_android_layout_marginBottom
           @see #GridLayout_Layout_android_layout_marginLeft
           @see #GridLayout_Layout_android_layout_marginRight
           @see #GridLayout_Layout_android_layout_marginTop
           @see #GridLayout_Layout_android_layout_width
           @see #GridLayout_Layout_layout_column
           @see #GridLayout_Layout_layout_columnSpan
           @see #GridLayout_Layout_layout_columnWeight
           @see #GridLayout_Layout_layout_gravity
           @see #GridLayout_Layout_layout_row
           @see #GridLayout_Layout_layout_rowSpan
           @see #GridLayout_Layout_layout_rowWeight
         */
        public static final int[] GridLayout_Layout = {
            0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7,
            0x010100f8, 0x010100f9, 0x010100fa, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
            0x7f01000c, 0x7f01000d
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_height}
          attribute's value can be found in the {@link #GridLayout_Layout} array.
          @attr name android:layout_height
        */
        public static final int GridLayout_Layout_android_layout_height = 1;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_margin}.
          @attr name android:layout_margin
        */
        public static final int GridLayout_Layout_android_layout_margin = 2;
        /**
          <p>
          @attr description
          
              Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginBottom}.
          @attr name android:layout_marginBottom
        */
        public static final int GridLayout_Layout_android_layout_marginBottom = 6;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginLeft}.
          @attr name android:layout_marginLeft
        */
        public static final int GridLayout_Layout_android_layout_marginLeft = 3;
        /**
          <p>
          @attr description
          
              Specifies extra space on the right side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginRight}.
          @attr name android:layout_marginRight
        */
        public static final int GridLayout_Layout_android_layout_marginRight = 5;
        /**
          <p>
          @attr description
          
              Specifies extra space on the top side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_marginTop}.
          @attr name android:layout_marginTop
        */
        public static final int GridLayout_Layout_android_layout_marginTop = 4;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in MarginLayout are
              redefined in the support library name space.
        
 START MarginLayout layoutparams 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout_width}.
          @attr name android:layout_width
        */
        public static final int GridLayout_Layout_android_layout_width = 0;
        /**
          <p>
          @attr description
          
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout_column
        */
        public static final int GridLayout_Layout_layout_column = 10;
        /**
          <p>
          @attr description
          
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout_columnSpan
        */
        public static final int GridLayout_Layout_layout_columnSpan = 11;
        /**
          <p>
          @attr description
           The relative proportion of horizontal space that should be allocated to this view
        during excess space distribution. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout_columnWeight
        */
        public static final int GridLayout_Layout_layout_columnWeight = 12;
        /**
          <p>
          @attr description
          
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout_gravity
        */
        public static final int GridLayout_Layout_layout_gravity = 13;
        /**
          <p>
          @attr description
           END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout_row
        */
        public static final int GridLayout_Layout_layout_row = 7;
        /**
          <p>
          @attr description
          
        The row span: the difference between the top and bottom
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout_rowSpan
        */
        public static final int GridLayout_Layout_layout_rowSpan = 8;
        /**
          <p>
          @attr description
           The relative proportion of vertical space that should be allocated to this view
        during excess space distribution. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout_rowWeight
        */
        public static final int GridLayout_Layout_layout_rowWeight = 9;
        /** Attributes that can be used with a LinearLayoutCompat.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td> When set to false, prevents the layout from aligning its children's
             baselines.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td> When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td> Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td> Defines the maximum weight sum.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_divider com.android.deskclock:divider}</code></td><td> Drawable to use as a vertical divider between buttons.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.deskclock:dividerPadding}</code></td><td> Size of padding on either end of a divider.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.deskclock:measureWithLargestChild}</code></td><td> When set to true, all children with a weight will be considered having
             the minimum size of the largest child.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.deskclock:showDividers}</code></td><td> Setting for which dividers to show.</td></tr>
           </table>
           @see #LinearLayoutCompat_android_baselineAligned
           @see #LinearLayoutCompat_android_baselineAlignedChildIndex
           @see #LinearLayoutCompat_android_gravity
           @see #LinearLayoutCompat_android_orientation
           @see #LinearLayoutCompat_android_weightSum
           @see #LinearLayoutCompat_divider
           @see #LinearLayoutCompat_dividerPadding
           @see #LinearLayoutCompat_measureWithLargestChild
           @see #LinearLayoutCompat_showDividers
         */
        public static final int[] LinearLayoutCompat = {
            0x010100af, 0x010100c4, 0x01010126, 0x01010127,
            0x01010128, 0x7f010082, 0x7f0100ae, 0x7f0100af,
            0x7f0100b0
        };
        /**
          <p>
          @attr description
           When set to false, prevents the layout from aligning its children's
             baselines. This attribute is particularly useful when the children
             use different values for gravity. The default value is true. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#baselineAligned}.
          @attr name android:baselineAligned
        */
        public static final int LinearLayoutCompat_android_baselineAligned = 2;
        /**
          <p>
          @attr description
           When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#baselineAlignedChildIndex}.
          @attr name android:baselineAlignedChildIndex
        */
        public static final int LinearLayoutCompat_android_baselineAlignedChildIndex = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gravity}
          attribute's value can be found in the {@link #LinearLayoutCompat} array.
          @attr name android:gravity
        */
        public static final int LinearLayoutCompat_android_gravity = 0;
        /**
          <p>
          @attr description
           Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.  The default is
             horizontal. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int LinearLayoutCompat_android_orientation = 1;
        /**
          <p>
          @attr description
           Defines the maximum weight sum. If unspecified, the sum is computed
             by adding the layout_weight of all of the children. This can be
             used for instance to give a single child 50% of the total available
             space by giving it a layout_weight of 0.5 and setting the weightSum
             to 1.0. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#weightSum}.
          @attr name android:weightSum
        */
        public static final int LinearLayoutCompat_android_weightSum = 4;
        /**
          <p>
          @attr description
           Drawable to use as a vertical divider between buttons. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:divider
        */
        public static final int LinearLayoutCompat_divider = 5;
        /**
          <p>
          @attr description
           Size of padding on either end of a divider. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:dividerPadding
        */
        public static final int LinearLayoutCompat_dividerPadding = 8;
        /**
          <p>
          @attr description
           When set to true, all children with a weight will be considered having
             the minimum size of the largest child. If false, all children are
             measured normally. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:measureWithLargestChild
        */
        public static final int LinearLayoutCompat_measureWithLargestChild = 6;
        /**
          <p>
          @attr description
           Setting for which dividers to show. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>beginning</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:showDividers
        */
        public static final int LinearLayoutCompat_showDividers = 7;
        /** Attributes that can be used with a LinearLayoutCompat_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
           </table>
           @see #LinearLayoutCompat_Layout_android_layout_gravity
           @see #LinearLayoutCompat_Layout_android_layout_height
           @see #LinearLayoutCompat_Layout_android_layout_weight
           @see #LinearLayoutCompat_Layout_android_layout_width
         */
        public static final int[] LinearLayoutCompat_Layout = {
            0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_gravity
        */
        public static final int LinearLayoutCompat_Layout_android_layout_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_height}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_height
        */
        public static final int LinearLayoutCompat_Layout_android_layout_height = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_weight
        */
        public static final int LinearLayoutCompat_Layout_android_layout_weight = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_width}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_width
        */
        public static final int LinearLayoutCompat_Layout_android_layout_width = 1;
        /** Attributes that can be used with a ListPopupWindow.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td> Amount of pixels by which the drop down should be offset horizontally.</td></tr>
           <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td> Amount of pixels by which the drop down should be offset vertically.</td></tr>
           </table>
           @see #ListPopupWindow_android_dropDownHorizontalOffset
           @see #ListPopupWindow_android_dropDownVerticalOffset
         */
        public static final int[] ListPopupWindow = {
            0x010102ac, 0x010102ad
        };
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset horizontally. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#dropDownHorizontalOffset}.
          @attr name android:dropDownHorizontalOffset
        */
        public static final int ListPopupWindow_android_dropDownHorizontalOffset = 0;
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset vertically. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#dropDownVerticalOffset}.
          @attr name android:dropDownVerticalOffset
        */
        public static final int ListPopupWindow_android_dropDownVerticalOffset = 1;
        /**  Base attributes that are available to all groups. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td> Whether the items are capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td> Whether the items are enabled.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td> The ID of the group.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td> The category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td> Whether the items are shown/visible.</td></tr>
           </table>
           @see #MenuGroup_android_checkableBehavior
           @see #MenuGroup_android_enabled
           @see #MenuGroup_android_id
           @see #MenuGroup_android_menuCategory
           @see #MenuGroup_android_orderInCategory
           @see #MenuGroup_android_visible
         */
        public static final int[] MenuGroup = {
            0x0101000e, 0x010100d0, 0x01010194, 0x010101de,
            0x010101df, 0x010101e0
        };
        /**
          <p>
          @attr description
           Whether the items are capable of displaying a check mark. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#checkableBehavior}.
          @attr name android:checkableBehavior
        */
        public static final int MenuGroup_android_checkableBehavior = 5;
        /**
          <p>
          @attr description
           Whether the items are enabled. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int MenuGroup_android_enabled = 0;
        /**
          <p>
          @attr description
           The ID of the group. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int MenuGroup_android_id = 1;
        /**
          <p>
          @attr description
           The category applied to all items within this group.
             (This will be or'ed with the orderInCategory attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#menuCategory}.
          @attr name android:menuCategory
        */
        public static final int MenuGroup_android_menuCategory = 3;
        /**
          <p>
          @attr description
           The order within the category applied to all items within this group.
             (This will be or'ed with the category attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orderInCategory}.
          @attr name android:orderInCategory
        */
        public static final int MenuGroup_android_orderInCategory = 4;
        /**
          <p>
          @attr description
           Whether the items are shown/visible. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int MenuGroup_android_visible = 2;
        /**  Base attributes that are available to all Item objects. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItem_actionLayout com.android.deskclock:actionLayout}</code></td><td> An optional layout to be used as an action view.</td></tr>
           <tr><td><code>{@link #MenuItem_actionProviderClass com.android.deskclock:actionProviderClass}</code></td><td> The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.</td></tr>
           <tr><td><code>{@link #MenuItem_actionViewClass com.android.deskclock:actionViewClass}</code></td><td> The name of an optional View class to instantiate and use as an
             action view.</td></tr>
           <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td> The alphabetic shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td> Whether the item is capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td> Whether the item is checked.</td></tr>
           <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td> Whether the item is enabled.</td></tr>
           <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td> The icon associated with this item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td> The ID of the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td> The category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td> The numeric shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td> Name of a method on the Context used to inflate the menu that will be
             called when the item is clicked.</td></tr>
           <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td> The title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td> The condensed title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td> Whether the item is shown/visible.</td></tr>
           <tr><td><code>{@link #MenuItem_showAsAction com.android.deskclock:showAsAction}</code></td><td> How this item should display in the Action Bar, if present.</td></tr>
           </table>
           @see #MenuItem_actionLayout
           @see #MenuItem_actionProviderClass
           @see #MenuItem_actionViewClass
           @see #MenuItem_android_alphabeticShortcut
           @see #MenuItem_android_checkable
           @see #MenuItem_android_checked
           @see #MenuItem_android_enabled
           @see #MenuItem_android_icon
           @see #MenuItem_android_id
           @see #MenuItem_android_menuCategory
           @see #MenuItem_android_numericShortcut
           @see #MenuItem_android_onClick
           @see #MenuItem_android_orderInCategory
           @see #MenuItem_android_title
           @see #MenuItem_android_titleCondensed
           @see #MenuItem_android_visible
           @see #MenuItem_showAsAction
         */
        public static final int[] MenuItem = {
            0x01010002, 0x0101000e, 0x010100d0, 0x01010106,
            0x01010194, 0x010101de, 0x010101df, 0x010101e1,
            0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5,
            0x0101026f, 0x7f01009a, 0x7f01009b, 0x7f01009c,
            0x7f01009d
        };
        /**
          <p>
          @attr description
           An optional layout to be used as an action view.
             See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionLayout
        */
        public static final int MenuItem_actionLayout = 14;
        /**
          <p>
          @attr description
           The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.
             See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
             for more info. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionProviderClass
        */
        public static final int MenuItem_actionProviderClass = 16;
        /**
          <p>
          @attr description
           The name of an optional View class to instantiate and use as an
             action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionViewClass
        */
        public static final int MenuItem_actionViewClass = 15;
        /**
          <p>
          @attr description
           The alphabetic shortcut key.  This is the shortcut when using a keyboard
             with alphabetic keys. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#alphabeticShortcut}.
          @attr name android:alphabeticShortcut
        */
        public static final int MenuItem_android_alphabeticShortcut = 9;
        /**
          <p>
          @attr description
           Whether the item is capable of displaying a check mark. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#checkable}.
          @attr name android:checkable
        */
        public static final int MenuItem_android_checkable = 11;
        /**
          <p>
          @attr description
           Whether the item is checked.  Note that you must first have enabled checking with
             the checkable attribute or else the check mark will not appear. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#checked}.
          @attr name android:checked
        */
        public static final int MenuItem_android_checked = 3;
        /**
          <p>
          @attr description
           Whether the item is enabled. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int MenuItem_android_enabled = 1;
        /**
          <p>
          @attr description
           The icon associated with this item.  This icon will not always be shown, so
             the title should be sufficient in describing this item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int MenuItem_android_icon = 0;
        /**
          <p>
          @attr description
           The ID of the item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int MenuItem_android_id = 2;
        /**
          <p>
          @attr description
           The category applied to the item.
             (This will be or'ed with the orderInCategory attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#menuCategory}.
          @attr name android:menuCategory
        */
        public static final int MenuItem_android_menuCategory = 5;
        /**
          <p>
          @attr description
           The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
             keyboard. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#numericShortcut}.
          @attr name android:numericShortcut
        */
        public static final int MenuItem_android_numericShortcut = 10;
        /**
          <p>
          @attr description
           Name of a method on the Context used to inflate the menu that will be
             called when the item is clicked. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#onClick}.
          @attr name android:onClick
        */
        public static final int MenuItem_android_onClick = 12;
        /**
          <p>
          @attr description
           The order within the category applied to the item.
             (This will be or'ed with the category attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orderInCategory}.
          @attr name android:orderInCategory
        */
        public static final int MenuItem_android_orderInCategory = 6;
        /**
          <p>
          @attr description
           The title associated with the item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#title}.
          @attr name android:title
        */
        public static final int MenuItem_android_title = 7;
        /**
          <p>
          @attr description
           The condensed title associated with the item.  This is used in situations where the
             normal title may be too long to be displayed. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#titleCondensed}.
          @attr name android:titleCondensed
        */
        public static final int MenuItem_android_titleCondensed = 8;
        /**
          <p>
          @attr description
           Whether the item is shown/visible. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int MenuItem_android_visible = 4;
        /**
          <p>
          @attr description
           How this item should display in the Action Bar, if present. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
                 Mutually exclusive with "ifRoom" and "always". </td></tr>
<tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
                 by the system. Favor this option over "always" where possible.
                 Mutually exclusive with "never" and "always". </td></tr>
<tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
                 the system's limits of how much stuff to put there. This may make
                 your action bar look bad on some screens. In most cases you should
                 use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
<tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
                 label with it even if it has an icon representation. </td></tr>
<tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
                 item. When expanded, the action view takes over a
                 larger segment of its container. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:showAsAction
        */
        public static final int MenuItem_showAsAction = 13;
        /** Attributes that can be used with a MenuView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td> Default background for the menu header.</td></tr>
           <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td> Default horizontal divider between rows of menu items.</td></tr>
           <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td> Default background for each menu item.</td></tr>
           <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td> Default disabled icon alpha for each menu item that shows an icon.</td></tr>
           <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td> Default appearance of menu item text.</td></tr>
           <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td> Default vertical divider between menu items.</td></tr>
           <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td> Default animations for the menu.</td></tr>
           <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.deskclock:preserveIconSpacing}</code></td><td> Whether space should be reserved in layout when an icon is missing.</td></tr>
           </table>
           @see #MenuView_android_headerBackground
           @see #MenuView_android_horizontalDivider
           @see #MenuView_android_itemBackground
           @see #MenuView_android_itemIconDisabledAlpha
           @see #MenuView_android_itemTextAppearance
           @see #MenuView_android_verticalDivider
           @see #MenuView_android_windowAnimationStyle
           @see #MenuView_preserveIconSpacing
         */
        public static final int[] MenuView = {
            0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e,
            0x0101012f, 0x01010130, 0x01010131, 0x7f010099
        };
        /**
          <p>
          @attr description
           Default background for the menu header. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#headerBackground}.
          @attr name android:headerBackground
        */
        public static final int MenuView_android_headerBackground = 4;
        /**
          <p>
          @attr description
           Default horizontal divider between rows of menu items. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#horizontalDivider}.
          @attr name android:horizontalDivider
        */
        public static final int MenuView_android_horizontalDivider = 2;
        /**
          <p>
          @attr description
           Default background for each menu item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#itemBackground}.
          @attr name android:itemBackground
        */
        public static final int MenuView_android_itemBackground = 5;
        /**
          <p>
          @attr description
           Default disabled icon alpha for each menu item that shows an icon. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#itemIconDisabledAlpha}.
          @attr name android:itemIconDisabledAlpha
        */
        public static final int MenuView_android_itemIconDisabledAlpha = 6;
        /**
          <p>
          @attr description
           Default appearance of menu item text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#itemTextAppearance}.
          @attr name android:itemTextAppearance
        */
        public static final int MenuView_android_itemTextAppearance = 1;
        /**
          <p>
          @attr description
           Default vertical divider between menu items. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#verticalDivider}.
          @attr name android:verticalDivider
        */
        public static final int MenuView_android_verticalDivider = 3;
        /**
          <p>
          @attr description
           Default animations for the menu. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#windowAnimationStyle}.
          @attr name android:windowAnimationStyle
        */
        public static final int MenuView_android_windowAnimationStyle = 0;
        /**
          <p>
          @attr description
           Whether space should be reserved in layout when an icon is missing. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:preserveIconSpacing
        */
        public static final int MenuView_preserveIconSpacing = 7;
        /** Attributes that can be used with a PopupWindow.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.deskclock:overlapAnchor}</code></td><td> Whether the popup window should overlap its anchor view.</td></tr>
           </table>
           @see #PopupWindow_android_popupBackground
           @see #PopupWindow_overlapAnchor
         */
        public static final int[] PopupWindow = {
            0x01010176, 0x7f0100c1
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
          attribute's value can be found in the {@link #PopupWindow} array.
          @attr name android:popupBackground
        */
        public static final int PopupWindow_android_popupBackground = 0;
        /**
          <p>
          @attr description
           Whether the popup window should overlap its anchor view. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:overlapAnchor
        */
        public static final int PopupWindow_overlapAnchor = 1;
        /** Attributes that can be used with a PopupWindowBackgroundState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.deskclock:state_above_anchor}</code></td><td> State identifier indicating the popup will be above the anchor.</td></tr>
           </table>
           @see #PopupWindowBackgroundState_state_above_anchor
         */
        public static final int[] PopupWindowBackgroundState = {
            0x7f0100c0
        };
        /**
          <p>
          @attr description
           State identifier indicating the popup will be above the anchor. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:state_above_anchor
        */
        public static final int PopupWindowBackgroundState_state_above_anchor = 0;
        /** Attributes that can be used with a SearchView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
           <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td> The IME options to set on the query text field.</td></tr>
           <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td> The input type to set on the query text field.</td></tr>
           <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td> An optional maximum width of the SearchView.</td></tr>
           <tr><td><code>{@link #SearchView_closeIcon com.android.deskclock:closeIcon}</code></td><td> Close button icon </td></tr>
           <tr><td><code>{@link #SearchView_commitIcon com.android.deskclock:commitIcon}</code></td><td> Commit icon shown in the query suggestion row </td></tr>
           <tr><td><code>{@link #SearchView_defaultQueryHint com.android.deskclock:defaultQueryHint}</code></td><td> Default query hint used when {@code queryHint} is undefined and
             the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
           <tr><td><code>{@link #SearchView_goIcon com.android.deskclock:goIcon}</code></td><td> Go button icon </td></tr>
           <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.deskclock:iconifiedByDefault}</code></td><td> The default state of the SearchView.</td></tr>
           <tr><td><code>{@link #SearchView_layout com.android.deskclock:layout}</code></td><td> The layout to use for the search view.</td></tr>
           <tr><td><code>{@link #SearchView_queryBackground com.android.deskclock:queryBackground}</code></td><td> Background for the section containing the search query </td></tr>
           <tr><td><code>{@link #SearchView_queryHint com.android.deskclock:queryHint}</code></td><td> An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
           <tr><td><code>{@link #SearchView_searchHintIcon com.android.deskclock:searchHintIcon}</code></td><td> Search icon displayed as a text field hint </td></tr>
           <tr><td><code>{@link #SearchView_searchIcon com.android.deskclock:searchIcon}</code></td><td> Search icon </td></tr>
           <tr><td><code>{@link #SearchView_submitBackground com.android.deskclock:submitBackground}</code></td><td> Background for the section containing the action (e.</td></tr>
           <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.deskclock:suggestionRowLayout}</code></td><td> Layout for query suggestion rows </td></tr>
           <tr><td><code>{@link #SearchView_voiceIcon com.android.deskclock:voiceIcon}</code></td><td> Voice button icon </td></tr>
           </table>
           @see #SearchView_android_focusable
           @see #SearchView_android_imeOptions
           @see #SearchView_android_inputType
           @see #SearchView_android_maxWidth
           @see #SearchView_closeIcon
           @see #SearchView_commitIcon
           @see #SearchView_defaultQueryHint
           @see #SearchView_goIcon
           @see #SearchView_iconifiedByDefault
           @see #SearchView_layout
           @see #SearchView_queryBackground
           @see #SearchView_queryHint
           @see #SearchView_searchHintIcon
           @see #SearchView_searchIcon
           @see #SearchView_submitBackground
           @see #SearchView_suggestionRowLayout
           @see #SearchView_voiceIcon
         */
        public static final int[] SearchView = {
            0x010100da, 0x0101011f, 0x01010220, 0x01010264,
            0x7f01009e, 0x7f01009f, 0x7f0100a0, 0x7f0100a1,
            0x7f0100a2, 0x7f0100a3, 0x7f0100a4, 0x7f0100a5,
            0x7f0100a6, 0x7f0100a7, 0x7f0100a8, 0x7f0100a9,
            0x7f0100aa
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#focusable}
          attribute's value can be found in the {@link #SearchView} array.
          @attr name android:focusable
        */
        public static final int SearchView_android_focusable = 0;
        /**
          <p>
          @attr description
           The IME options to set on the query text field. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#imeOptions}.
          @attr name android:imeOptions
        */
        public static final int SearchView_android_imeOptions = 3;
        /**
          <p>
          @attr description
           The input type to set on the query text field. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#inputType}.
          @attr name android:inputType
        */
        public static final int SearchView_android_inputType = 2;
        /**
          <p>
          @attr description
           An optional maximum width of the SearchView. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#maxWidth}.
          @attr name android:maxWidth
        */
        public static final int SearchView_android_maxWidth = 1;
        /**
          <p>
          @attr description
           Close button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:closeIcon
        */
        public static final int SearchView_closeIcon = 8;
        /**
          <p>
          @attr description
           Commit icon shown in the query suggestion row 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:commitIcon
        */
        public static final int SearchView_commitIcon = 13;
        /**
          <p>
          @attr description
           Default query hint used when {@code queryHint} is undefined and
             the search view's {@code SearchableInfo} does not provide a hint. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:defaultQueryHint
        */
        public static final int SearchView_defaultQueryHint = 7;
        /**
          <p>
          @attr description
           Go button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:goIcon
        */
        public static final int SearchView_goIcon = 9;
        /**
          <p>
          @attr description
           The default state of the SearchView. If true, it will be iconified when not in
             use and expanded when clicked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:iconifiedByDefault
        */
        public static final int SearchView_iconifiedByDefault = 5;
        /**
          <p>
          @attr description
           The layout to use for the search view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:layout
        */
        public static final int SearchView_layout = 4;
        /**
          <p>
          @attr description
           Background for the section containing the search query 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:queryBackground
        */
        public static final int SearchView_queryBackground = 15;
        /**
          <p>
          @attr description
           An optional user-defined query hint string to be displayed in the empty query field. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:queryHint
        */
        public static final int SearchView_queryHint = 6;
        /**
          <p>
          @attr description
           Search icon displayed as a text field hint 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:searchHintIcon
        */
        public static final int SearchView_searchHintIcon = 11;
        /**
          <p>
          @attr description
           Search icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:searchIcon
        */
        public static final int SearchView_searchIcon = 10;
        /**
          <p>
          @attr description
           Background for the section containing the action (e.g. voice search) 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:submitBackground
        */
        public static final int SearchView_submitBackground = 16;
        /**
          <p>
          @attr description
           Layout for query suggestion rows 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:suggestionRowLayout
        */
        public static final int SearchView_suggestionRowLayout = 14;
        /**
          <p>
          @attr description
           Voice button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:voiceIcon
        */
        public static final int SearchView_voiceIcon = 12;
        /** Attributes that can be used with a Spinner.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td> Width of the dropdown in spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td> Background drawable to use for the dropdown in spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td> The prompt to display when the spinner's dialog is shown.</td></tr>
           <tr><td><code>{@link #Spinner_popupTheme com.android.deskclock:popupTheme}</code></td><td> Theme to use for the drop-down or dialog popup window.</td></tr>
           </table>
           @see #Spinner_android_dropDownWidth
           @see #Spinner_android_popupBackground
           @see #Spinner_android_prompt
           @see #Spinner_popupTheme
         */
        public static final int[] Spinner = {
            0x01010176, 0x0101017b, 0x01010262, 0x7f010092
        };
        /**
          <p>
          @attr description
           Width of the dropdown in spinnerMode="dropdown". 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#dropDownWidth}.
          @attr name android:dropDownWidth
        */
        public static final int Spinner_android_dropDownWidth = 2;
        /**
          <p>
          @attr description
           Background drawable to use for the dropdown in spinnerMode="dropdown". 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#popupBackground}.
          @attr name android:popupBackground
        */
        public static final int Spinner_android_popupBackground = 0;
        /**
          <p>
          @attr description
           The prompt to display when the spinner's dialog is shown. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#prompt}.
          @attr name android:prompt
        */
        public static final int Spinner_android_prompt = 1;
        /**
          <p>
          @attr description
           Theme to use for the drop-down or dialog popup window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:popupTheme
        */
        public static final int Spinner_popupTheme = 3;
        /** Attributes that can be used with a SwitchCompat.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td> Text to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td> Text to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td> Drawable to use as the "thumb" that switches back and forth.</td></tr>
           <tr><td><code>{@link #SwitchCompat_showText com.android.deskclock:showText}</code></td><td> Whether to draw on/off text.</td></tr>
           <tr><td><code>{@link #SwitchCompat_splitTrack com.android.deskclock:splitTrack}</code></td><td> Whether to split the track and leave a gap for the thumb drawable.</td></tr>
           <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.deskclock:switchMinWidth}</code></td><td> Minimum width for the switch component </td></tr>
           <tr><td><code>{@link #SwitchCompat_switchPadding com.android.deskclock:switchPadding}</code></td><td> Minimum space between the switch and caption text </td></tr>
           <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.deskclock:switchTextAppearance}</code></td><td> TextAppearance style for text displayed on the switch thumb.</td></tr>
           <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.deskclock:thumbTextPadding}</code></td><td> Amount of padding on either side of text within the switch thumb.</td></tr>
           <tr><td><code>{@link #SwitchCompat_track com.android.deskclock:track}</code></td><td> Drawable to use as the "track" that the switch thumb slides within.</td></tr>
           </table>
           @see #SwitchCompat_android_textOff
           @see #SwitchCompat_android_textOn
           @see #SwitchCompat_android_thumb
           @see #SwitchCompat_showText
           @see #SwitchCompat_splitTrack
           @see #SwitchCompat_switchMinWidth
           @see #SwitchCompat_switchPadding
           @see #SwitchCompat_switchTextAppearance
           @see #SwitchCompat_thumbTextPadding
           @see #SwitchCompat_track
         */
        public static final int[] SwitchCompat = {
            0x01010124, 0x01010125, 0x01010142, 0x7f0100cd,
            0x7f0100ce, 0x7f0100cf, 0x7f0100d0, 0x7f0100d1,
            0x7f0100d2, 0x7f0100d3
        };
        /**
          <p>
          @attr description
           Text to use when the switch is in the unchecked/"off" state. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textOff}.
          @attr name android:textOff
        */
        public static final int SwitchCompat_android_textOff = 1;
        /**
          <p>
          @attr description
           Text to use when the switch is in the checked/"on" state. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textOn}.
          @attr name android:textOn
        */
        public static final int SwitchCompat_android_textOn = 0;
        /**
          <p>
          @attr description
           Drawable to use as the "thumb" that switches back and forth. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#thumb}.
          @attr name android:thumb
        */
        public static final int SwitchCompat_android_thumb = 2;
        /**
          <p>
          @attr description
           Whether to draw on/off text. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:showText
        */
        public static final int SwitchCompat_showText = 9;
        /**
          <p>
          @attr description
           Whether to split the track and leave a gap for the thumb drawable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:splitTrack
        */
        public static final int SwitchCompat_splitTrack = 8;
        /**
          <p>
          @attr description
           Minimum width for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:switchMinWidth
        */
        public static final int SwitchCompat_switchMinWidth = 6;
        /**
          <p>
          @attr description
           Minimum space between the switch and caption text 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:switchPadding
        */
        public static final int SwitchCompat_switchPadding = 7;
        /**
          <p>
          @attr description
           TextAppearance style for text displayed on the switch thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:switchTextAppearance
        */
        public static final int SwitchCompat_switchTextAppearance = 5;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch thumb. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:thumbTextPadding
        */
        public static final int SwitchCompat_thumbTextPadding = 4;
        /**
          <p>
          @attr description
           Drawable to use as the "track" that the switch thumb slides within. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:track
        */
        public static final int SwitchCompat_track = 3;
        /** Attributes that can be used with a TextAppearance.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_textAllCaps com.android.deskclock:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           </table>
           @see #TextAppearance_android_textColor
           @see #TextAppearance_android_textSize
           @see #TextAppearance_android_textStyle
           @see #TextAppearance_android_typeface
           @see #TextAppearance_textAllCaps
         */
        public static final int[] TextAppearance = {
            0x01010095, 0x01010096, 0x01010097, 0x01010098,
            0x7f0100ad
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textColor}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:textColor
        */
        public static final int TextAppearance_android_textColor = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textSize}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:textSize
        */
        public static final int TextAppearance_android_textSize = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textStyle}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:textStyle
        */
        public static final int TextAppearance_android_textStyle = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#typeface}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:typeface
        */
        public static final int TextAppearance_android_typeface = 1;
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAllCaps
        */
        public static final int TextAppearance_textAllCaps = 4;
        /** Attributes that can be used with a TextTime.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextTime_format12Hour com.android.deskclock:format12Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode.</td></tr>
           <tr><td><code>{@link #TextTime_format24Hour com.android.deskclock:format24Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode.</td></tr>
           </table>
           @see #TextTime_format12Hour
           @see #TextTime_format24Hour
         */
        public static final int[] TextTime = {
            0x7f0100dc, 0x7f0100dd
        };
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm a". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:format12Hour
        */
        public static final int TextTime_format12Hour = 0;
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "H:mm". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:format24Hour
        */
        public static final int TextTime_format24Hour = 1;
        /**  These are the standard attributes that make up a complete theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Theme_actionBarDivider com.android.deskclock:actionBarDivider}</code></td><td> Custom divider drawable to use for elements in the action bar.</td></tr>
           <tr><td><code>{@link #Theme_actionBarItemBackground com.android.deskclock:actionBarItemBackground}</code></td><td> Custom item state list drawable background for action bar items.</td></tr>
           <tr><td><code>{@link #Theme_actionBarPopupTheme com.android.deskclock:actionBarPopupTheme}</code></td><td> Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar.</td></tr>
           <tr><td><code>{@link #Theme_actionBarSize com.android.deskclock:actionBarSize}</code></td><td> Size of the Action Bar, including the contextual
             bar used to present Action Modes.</td></tr>
           <tr><td><code>{@link #Theme_actionBarSplitStyle com.android.deskclock:actionBarSplitStyle}</code></td><td> Reference to a style for the split Action Bar.</td></tr>
           <tr><td><code>{@link #Theme_actionBarStyle com.android.deskclock:actionBarStyle}</code></td><td> Reference to a style for the Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionBarTabBarStyle com.android.deskclock:actionBarTabBarStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionBarTabStyle com.android.deskclock:actionBarTabStyle}</code></td><td> Default style for tabs within an action bar </td></tr>
           <tr><td><code>{@link #Theme_actionBarTabTextStyle com.android.deskclock:actionBarTabTextStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionBarTheme com.android.deskclock:actionBarTheme}</code></td><td> Reference to a theme that should be used to inflate the
             action bar.</td></tr>
           <tr><td><code>{@link #Theme_actionBarWidgetTheme com.android.deskclock:actionBarWidgetTheme}</code></td><td> Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar.</td></tr>
           <tr><td><code>{@link #Theme_actionButtonStyle com.android.deskclock:actionButtonStyle}</code></td><td> Default action button style.</td></tr>
           <tr><td><code>{@link #Theme_actionDropDownStyle com.android.deskclock:actionDropDownStyle}</code></td><td> Default ActionBar dropdown style.</td></tr>
           <tr><td><code>{@link #Theme_actionMenuTextAppearance com.android.deskclock:actionMenuTextAppearance}</code></td><td> TextAppearance style that will be applied to text that
             appears within action menu items.</td></tr>
           <tr><td><code>{@link #Theme_actionMenuTextColor com.android.deskclock:actionMenuTextColor}</code></td><td> Color for text that appears within action menu items.</td></tr>
           <tr><td><code>{@link #Theme_actionModeBackground com.android.deskclock:actionModeBackground}</code></td><td> Background drawable to use for action mode UI </td></tr>
           <tr><td><code>{@link #Theme_actionModeCloseButtonStyle com.android.deskclock:actionModeCloseButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionModeCloseDrawable com.android.deskclock:actionModeCloseDrawable}</code></td><td> Drawable to use for the close action mode button </td></tr>
           <tr><td><code>{@link #Theme_actionModeCopyDrawable com.android.deskclock:actionModeCopyDrawable}</code></td><td> Drawable to use for the Copy action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeCutDrawable com.android.deskclock:actionModeCutDrawable}</code></td><td> Drawable to use for the Cut action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeFindDrawable com.android.deskclock:actionModeFindDrawable}</code></td><td> Drawable to use for the Find action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #Theme_actionModePasteDrawable com.android.deskclock:actionModePasteDrawable}</code></td><td> Drawable to use for the Paste action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModePopupWindowStyle com.android.deskclock:actionModePopupWindowStyle}</code></td><td> PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
           <tr><td><code>{@link #Theme_actionModeSelectAllDrawable com.android.deskclock:actionModeSelectAllDrawable}</code></td><td> Drawable to use for the Select all action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeShareDrawable com.android.deskclock:actionModeShareDrawable}</code></td><td> Drawable to use for the Share action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #Theme_actionModeSplitBackground com.android.deskclock:actionModeSplitBackground}</code></td><td> Background drawable to use for action mode UI in the lower split bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeStyle com.android.deskclock:actionModeStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionModeWebSearchDrawable com.android.deskclock:actionModeWebSearchDrawable}</code></td><td> Drawable to use for the Web Search action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #Theme_actionOverflowButtonStyle com.android.deskclock:actionOverflowButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionOverflowMenuStyle com.android.deskclock:actionOverflowMenuStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_activityChooserViewStyle com.android.deskclock:activityChooserViewStyle}</code></td><td> Default ActivityChooserView style.</td></tr>
           <tr><td><code>{@link #Theme_alertDialogButtonGroupStyle com.android.deskclock:alertDialogButtonGroupStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_alertDialogCenterButtons com.android.deskclock:alertDialogCenterButtons}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_alertDialogStyle com.android.deskclock:alertDialogStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_alertDialogTheme com.android.deskclock:alertDialogTheme}</code></td><td> Theme to use for alert dialogs spawned from this theme.</td></tr>
           <tr><td><code>{@link #Theme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_autoCompleteTextViewStyle com.android.deskclock:autoCompleteTextViewStyle}</code></td><td> Default AutoCompleteTextView style.</td></tr>
           <tr><td><code>{@link #Theme_borderlessButtonStyle com.android.deskclock:borderlessButtonStyle}</code></td><td> Style for buttons without an explicit border, often used in groups.</td></tr>
           <tr><td><code>{@link #Theme_buttonBarButtonStyle com.android.deskclock:buttonBarButtonStyle}</code></td><td> Style for buttons within button bars </td></tr>
           <tr><td><code>{@link #Theme_buttonBarNegativeButtonStyle com.android.deskclock:buttonBarNegativeButtonStyle}</code></td><td> Style for the "negative" buttons within button bars </td></tr>
           <tr><td><code>{@link #Theme_buttonBarNeutralButtonStyle com.android.deskclock:buttonBarNeutralButtonStyle}</code></td><td> Style for the "neutral" buttons within button bars </td></tr>
           <tr><td><code>{@link #Theme_buttonBarPositiveButtonStyle com.android.deskclock:buttonBarPositiveButtonStyle}</code></td><td> Style for the "positive" buttons within button bars </td></tr>
           <tr><td><code>{@link #Theme_buttonBarStyle com.android.deskclock:buttonBarStyle}</code></td><td> Style for button bars </td></tr>
           <tr><td><code>{@link #Theme_buttonStyle com.android.deskclock:buttonStyle}</code></td><td> Normal Button style.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyleSmall com.android.deskclock:buttonStyleSmall}</code></td><td> Small Button style.</td></tr>
           <tr><td><code>{@link #Theme_checkboxStyle com.android.deskclock:checkboxStyle}</code></td><td> Default Checkbox style.</td></tr>
           <tr><td><code>{@link #Theme_checkedTextViewStyle com.android.deskclock:checkedTextViewStyle}</code></td><td> Default CheckedTextView style.</td></tr>
           <tr><td><code>{@link #Theme_colorAccent com.android.deskclock:colorAccent}</code></td><td> Bright complement to the primary branding color.</td></tr>
           <tr><td><code>{@link #Theme_colorButtonNormal com.android.deskclock:colorButtonNormal}</code></td><td> The color applied to framework buttons in their normal state.</td></tr>
           <tr><td><code>{@link #Theme_colorControlActivated com.android.deskclock:colorControlActivated}</code></td><td> The color applied to framework controls in their activated (ex.</td></tr>
           <tr><td><code>{@link #Theme_colorControlHighlight com.android.deskclock:colorControlHighlight}</code></td><td> The color applied to framework control highlights (ex.</td></tr>
           <tr><td><code>{@link #Theme_colorControlNormal com.android.deskclock:colorControlNormal}</code></td><td> The color applied to framework controls in their normal state.</td></tr>
           <tr><td><code>{@link #Theme_colorPrimary com.android.deskclock:colorPrimary}</code></td><td> The primary branding color for the app.</td></tr>
           <tr><td><code>{@link #Theme_colorPrimaryDark com.android.deskclock:colorPrimaryDark}</code></td><td> Dark variant of the primary branding color.</td></tr>
           <tr><td><code>{@link #Theme_colorSwitchThumbNormal com.android.deskclock:colorSwitchThumbNormal}</code></td><td> The color applied to framework switch thumbs in their normal state.</td></tr>
           <tr><td><code>{@link #Theme_controlBackground com.android.deskclock:controlBackground}</code></td><td> The background used by framework controls.</td></tr>
           <tr><td><code>{@link #Theme_dialogPreferredPadding com.android.deskclock:dialogPreferredPadding}</code></td><td> Preferred padding for dialog content.</td></tr>
           <tr><td><code>{@link #Theme_dialogTheme com.android.deskclock:dialogTheme}</code></td><td> Theme to use for dialogs spawned from this theme.</td></tr>
           <tr><td><code>{@link #Theme_dividerHorizontal com.android.deskclock:dividerHorizontal}</code></td><td> A drawable that may be used as a horizontal divider between visual elements.</td></tr>
           <tr><td><code>{@link #Theme_dividerVertical com.android.deskclock:dividerVertical}</code></td><td> A drawable that may be used as a vertical divider between visual elements.</td></tr>
           <tr><td><code>{@link #Theme_dropDownListViewStyle com.android.deskclock:dropDownListViewStyle}</code></td><td> ListPopupWindow compatibility </td></tr>
           <tr><td><code>{@link #Theme_dropdownListPreferredItemHeight com.android.deskclock:dropdownListPreferredItemHeight}</code></td><td> The preferred item height for dropdown lists.</td></tr>
           <tr><td><code>{@link #Theme_editTextBackground com.android.deskclock:editTextBackground}</code></td><td> EditText background drawable.</td></tr>
           <tr><td><code>{@link #Theme_editTextColor com.android.deskclock:editTextColor}</code></td><td> EditText text foreground color.</td></tr>
           <tr><td><code>{@link #Theme_editTextStyle com.android.deskclock:editTextStyle}</code></td><td> Default EditText style.</td></tr>
           <tr><td><code>{@link #Theme_homeAsUpIndicator com.android.deskclock:homeAsUpIndicator}</code></td><td> Specifies a drawable to use for the 'home as up' indicator.</td></tr>
           <tr><td><code>{@link #Theme_listChoiceBackgroundIndicator com.android.deskclock:listChoiceBackgroundIndicator}</code></td><td> Drawable used as a background for selected list items.</td></tr>
           <tr><td><code>{@link #Theme_listDividerAlertDialog com.android.deskclock:listDividerAlertDialog}</code></td><td> The list divider used in alert dialogs.</td></tr>
           <tr><td><code>{@link #Theme_listPopupWindowStyle com.android.deskclock:listPopupWindowStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemHeight com.android.deskclock:listPreferredItemHeight}</code></td><td> The preferred list item height.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemHeightLarge com.android.deskclock:listPreferredItemHeightLarge}</code></td><td> A larger, more robust list item height.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemHeightSmall com.android.deskclock:listPreferredItemHeightSmall}</code></td><td> A smaller, sleeker list item height.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemPaddingLeft com.android.deskclock:listPreferredItemPaddingLeft}</code></td><td> The preferred padding along the left edge of list items.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemPaddingRight com.android.deskclock:listPreferredItemPaddingRight}</code></td><td> The preferred padding along the right edge of list items.</td></tr>
           <tr><td><code>{@link #Theme_panelBackground com.android.deskclock:panelBackground}</code></td><td> The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
           <tr><td><code>{@link #Theme_panelMenuListTheme com.android.deskclock:panelMenuListTheme}</code></td><td> Default Panel Menu style.</td></tr>
           <tr><td><code>{@link #Theme_panelMenuListWidth com.android.deskclock:panelMenuListWidth}</code></td><td> Default Panel Menu width.</td></tr>
           <tr><td><code>{@link #Theme_popupMenuStyle com.android.deskclock:popupMenuStyle}</code></td><td> Default PopupMenu style.</td></tr>
           <tr><td><code>{@link #Theme_popupWindowStyle com.android.deskclock:popupWindowStyle}</code></td><td> Default PopupWindow style.</td></tr>
           <tr><td><code>{@link #Theme_radioButtonStyle com.android.deskclock:radioButtonStyle}</code></td><td> Default RadioButton style.</td></tr>
           <tr><td><code>{@link #Theme_ratingBarStyle com.android.deskclock:ratingBarStyle}</code></td><td> Default RatingBar style.</td></tr>
           <tr><td><code>{@link #Theme_searchViewStyle com.android.deskclock:searchViewStyle}</code></td><td> Style for the search query widget.</td></tr>
           <tr><td><code>{@link #Theme_selectableItemBackground com.android.deskclock:selectableItemBackground}</code></td><td> A style that may be applied to buttons or other selectable items
             that should react to pressed and focus states, but that do not
             have a clear visual border along the edges.</td></tr>
           <tr><td><code>{@link #Theme_selectableItemBackgroundBorderless com.android.deskclock:selectableItemBackgroundBorderless}</code></td><td> Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
           <tr><td><code>{@link #Theme_spinnerDropDownItemStyle com.android.deskclock:spinnerDropDownItemStyle}</code></td><td> Default Spinner style.</td></tr>
           <tr><td><code>{@link #Theme_spinnerStyle com.android.deskclock:spinnerStyle}</code></td><td> Default Spinner style.</td></tr>
           <tr><td><code>{@link #Theme_switchStyle com.android.deskclock:switchStyle}</code></td><td> Default style for the Switch widget.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceLargePopupMenu com.android.deskclock:textAppearanceLargePopupMenu}</code></td><td> Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceListItem com.android.deskclock:textAppearanceListItem}</code></td><td> The preferred TextAppearance for the primary text of list items.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceListItemSmall com.android.deskclock:textAppearanceListItemSmall}</code></td><td> The preferred TextAppearance for the primary text of small list items.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSearchResultSubtitle com.android.deskclock:textAppearanceSearchResultSubtitle}</code></td><td> Text color, typeface, size, and style for system search result subtitle.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSearchResultTitle com.android.deskclock:textAppearanceSearchResultTitle}</code></td><td> Text color, typeface, size, and style for system search result title.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSmallPopupMenu com.android.deskclock:textAppearanceSmallPopupMenu}</code></td><td> Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
           <tr><td><code>{@link #Theme_textColorAlertDialogListItem com.android.deskclock:textColorAlertDialogListItem}</code></td><td> Color of list item text in alert dialogs.</td></tr>
           <tr><td><code>{@link #Theme_textColorSearchUrl com.android.deskclock:textColorSearchUrl}</code></td><td> Text color for urls in search suggestions, used by things like global search </td></tr>
           <tr><td><code>{@link #Theme_toolbarNavigationButtonStyle com.android.deskclock:toolbarNavigationButtonStyle}</code></td><td> Default Toolar NavigationButtonStyle </td></tr>
           <tr><td><code>{@link #Theme_toolbarStyle com.android.deskclock:toolbarStyle}</code></td><td> Default Toolbar style.</td></tr>
           <tr><td><code>{@link #Theme_windowActionBar com.android.deskclock:windowActionBar}</code></td><td> Flag indicating whether this window should have an Action Bar
             in place of the usual title bar.</td></tr>
           <tr><td><code>{@link #Theme_windowActionBarOverlay com.android.deskclock:windowActionBarOverlay}</code></td><td> Flag indicating whether this window's Action Bar should overlay
             application content.</td></tr>
           <tr><td><code>{@link #Theme_windowActionModeOverlay com.android.deskclock:windowActionModeOverlay}</code></td><td> Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar).</td></tr>
           <tr><td><code>{@link #Theme_windowFixedHeightMajor com.android.deskclock:windowFixedHeightMajor}</code></td><td> A fixed height for the window along the major axis of the screen,
             that is, when in portrait.</td></tr>
           <tr><td><code>{@link #Theme_windowFixedHeightMinor com.android.deskclock:windowFixedHeightMinor}</code></td><td> A fixed height for the window along the minor axis of the screen,
             that is, when in landscape.</td></tr>
           <tr><td><code>{@link #Theme_windowFixedWidthMajor com.android.deskclock:windowFixedWidthMajor}</code></td><td> A fixed width for the window along the major axis of the screen,
             that is, when in landscape.</td></tr>
           <tr><td><code>{@link #Theme_windowFixedWidthMinor com.android.deskclock:windowFixedWidthMinor}</code></td><td> A fixed width for the window along the minor axis of the screen,
             that is, when in portrait.</td></tr>
           <tr><td><code>{@link #Theme_windowMinWidthMajor com.android.deskclock:windowMinWidthMajor}</code></td><td> The minimum width the window is allowed to be, along the major
             axis of the screen.</td></tr>
           <tr><td><code>{@link #Theme_windowMinWidthMinor com.android.deskclock:windowMinWidthMinor}</code></td><td> The minimum width the window is allowed to be, along the minor
             axis of the screen.</td></tr>
           <tr><td><code>{@link #Theme_windowNoTitle com.android.deskclock:windowNoTitle}</code></td><td> Flag indicating whether there should be no title on this window.</td></tr>
           </table>
           @see #Theme_actionBarDivider
           @see #Theme_actionBarItemBackground
           @see #Theme_actionBarPopupTheme
           @see #Theme_actionBarSize
           @see #Theme_actionBarSplitStyle
           @see #Theme_actionBarStyle
           @see #Theme_actionBarTabBarStyle
           @see #Theme_actionBarTabStyle
           @see #Theme_actionBarTabTextStyle
           @see #Theme_actionBarTheme
           @see #Theme_actionBarWidgetTheme
           @see #Theme_actionButtonStyle
           @see #Theme_actionDropDownStyle
           @see #Theme_actionMenuTextAppearance
           @see #Theme_actionMenuTextColor
           @see #Theme_actionModeBackground
           @see #Theme_actionModeCloseButtonStyle
           @see #Theme_actionModeCloseDrawable
           @see #Theme_actionModeCopyDrawable
           @see #Theme_actionModeCutDrawable
           @see #Theme_actionModeFindDrawable
           @see #Theme_actionModePasteDrawable
           @see #Theme_actionModePopupWindowStyle
           @see #Theme_actionModeSelectAllDrawable
           @see #Theme_actionModeShareDrawable
           @see #Theme_actionModeSplitBackground
           @see #Theme_actionModeStyle
           @see #Theme_actionModeWebSearchDrawable
           @see #Theme_actionOverflowButtonStyle
           @see #Theme_actionOverflowMenuStyle
           @see #Theme_activityChooserViewStyle
           @see #Theme_alertDialogButtonGroupStyle
           @see #Theme_alertDialogCenterButtons
           @see #Theme_alertDialogStyle
           @see #Theme_alertDialogTheme
           @see #Theme_android_windowAnimationStyle
           @see #Theme_android_windowIsFloating
           @see #Theme_autoCompleteTextViewStyle
           @see #Theme_borderlessButtonStyle
           @see #Theme_buttonBarButtonStyle
           @see #Theme_buttonBarNegativeButtonStyle
           @see #Theme_buttonBarNeutralButtonStyle
           @see #Theme_buttonBarPositiveButtonStyle
           @see #Theme_buttonBarStyle
           @see #Theme_buttonStyle
           @see #Theme_buttonStyleSmall
           @see #Theme_checkboxStyle
           @see #Theme_checkedTextViewStyle
           @see #Theme_colorAccent
           @see #Theme_colorButtonNormal
           @see #Theme_colorControlActivated
           @see #Theme_colorControlHighlight
           @see #Theme_colorControlNormal
           @see #Theme_colorPrimary
           @see #Theme_colorPrimaryDark
           @see #Theme_colorSwitchThumbNormal
           @see #Theme_controlBackground
           @see #Theme_dialogPreferredPadding
           @see #Theme_dialogTheme
           @see #Theme_dividerHorizontal
           @see #Theme_dividerVertical
           @see #Theme_dropDownListViewStyle
           @see #Theme_dropdownListPreferredItemHeight
           @see #Theme_editTextBackground
           @see #Theme_editTextColor
           @see #Theme_editTextStyle
           @see #Theme_homeAsUpIndicator
           @see #Theme_listChoiceBackgroundIndicator
           @see #Theme_listDividerAlertDialog
           @see #Theme_listPopupWindowStyle
           @see #Theme_listPreferredItemHeight
           @see #Theme_listPreferredItemHeightLarge
           @see #Theme_listPreferredItemHeightSmall
           @see #Theme_listPreferredItemPaddingLeft
           @see #Theme_listPreferredItemPaddingRight
           @see #Theme_panelBackground
           @see #Theme_panelMenuListTheme
           @see #Theme_panelMenuListWidth
           @see #Theme_popupMenuStyle
           @see #Theme_popupWindowStyle
           @see #Theme_radioButtonStyle
           @see #Theme_ratingBarStyle
           @see #Theme_searchViewStyle
           @see #Theme_selectableItemBackground
           @see #Theme_selectableItemBackgroundBorderless
           @see #Theme_spinnerDropDownItemStyle
           @see #Theme_spinnerStyle
           @see #Theme_switchStyle
           @see #Theme_textAppearanceLargePopupMenu
           @see #Theme_textAppearanceListItem
           @see #Theme_textAppearanceListItemSmall
           @see #Theme_textAppearanceSearchResultSubtitle
           @see #Theme_textAppearanceSearchResultTitle
           @see #Theme_textAppearanceSmallPopupMenu
           @see #Theme_textColorAlertDialogListItem
           @see #Theme_textColorSearchUrl
           @see #Theme_toolbarNavigationButtonStyle
           @see #Theme_toolbarStyle
           @see #Theme_windowActionBar
           @see #Theme_windowActionBarOverlay
           @see #Theme_windowActionModeOverlay
           @see #Theme_windowFixedHeightMajor
           @see #Theme_windowFixedHeightMinor
           @see #Theme_windowFixedWidthMajor
           @see #Theme_windowFixedWidthMinor
           @see #Theme_windowMinWidthMajor
           @see #Theme_windowMinWidthMinor
           @see #Theme_windowNoTitle
         */
        public static final int[] Theme = {
            0x01010057, 0x010100ae, 0x7f010011, 0x7f010012,
            0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016,
            0x7f010017, 0x7f010018, 0x7f010019, 0x7f01001a,
            0x7f01001b, 0x7f01001c, 0x7f01001d, 0x7f01001e,
            0x7f01001f, 0x7f010020, 0x7f010021, 0x7f010022,
            0x7f010023, 0x7f010024, 0x7f010025, 0x7f010026,
            0x7f010027, 0x7f010028, 0x7f010029, 0x7f01002a,
            0x7f01002b, 0x7f01002c, 0x7f01002d, 0x7f01002e,
            0x7f01002f, 0x7f010030, 0x7f010031, 0x7f010032,
            0x7f010033, 0x7f010034, 0x7f010035, 0x7f010036,
            0x7f010037, 0x7f010038, 0x7f010039, 0x7f01003a,
            0x7f01003b, 0x7f01003c, 0x7f01003d, 0x7f01003e,
            0x7f01003f, 0x7f010040, 0x7f010041, 0x7f010042,
            0x7f010043, 0x7f010044, 0x7f010045, 0x7f010046,
            0x7f010047, 0x7f010048, 0x7f010049, 0x7f01004a,
            0x7f01004b, 0x7f01004c, 0x7f01004d, 0x7f01004e,
            0x7f01004f, 0x7f010050, 0x7f010051, 0x7f010052,
            0x7f010053, 0x7f010054, 0x7f010055, 0x7f010056,
            0x7f010057, 0x7f010058, 0x7f010059, 0x7f01005a,
            0x7f01005b, 0x7f01005c, 0x7f01005d, 0x7f01005e,
            0x7f01005f, 0x7f010060, 0x7f010061, 0x7f010062,
            0x7f010063, 0x7f010064, 0x7f010065, 0x7f010066,
            0x7f010067, 0x7f010068, 0x7f010069, 0x7f01006a,
            0x7f01006b, 0x7f01006c, 0x7f01006d, 0x7f01006e,
            0x7f01006f, 0x7f010070, 0x7f010071, 0x7f010072,
            0x7f010073, 0x7f010074, 0x7f010075, 0x7f010076,
            0x7f010077, 0x7f010078, 0x7f010079, 0x7f01007a
        };
        /**
          <p>
          @attr description
           Custom divider drawable to use for elements in the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarDivider
        */
        public static final int Theme_actionBarDivider = 23;
        /**
          <p>
          @attr description
           Custom item state list drawable background for action bar items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarItemBackground
        */
        public static final int Theme_actionBarItemBackground = 24;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarPopupTheme
        */
        public static final int Theme_actionBarPopupTheme = 17;
        /**
          <p>
          @attr description
           Size of the Action Bar, including the contextual
             bar used to present Action Modes. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>wrap_content</code></td><td>0</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarSize
        */
        public static final int Theme_actionBarSize = 22;
        /**
          <p>
          @attr description
           Reference to a style for the split Action Bar. This style
             controls the split component that holds the menu/action
             buttons. actionBarStyle is still used for the primary
             bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarSplitStyle
        */
        public static final int Theme_actionBarSplitStyle = 19;
        /**
          <p>
          @attr description
           Reference to a style for the Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarStyle
        */
        public static final int Theme_actionBarStyle = 18;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionBarTabBarStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:actionBarTabBarStyle
        */
        public static final int Theme_actionBarTabBarStyle = 13;
        /**
          <p>
          @attr description
           Default style for tabs within an action bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarTabStyle
        */
        public static final int Theme_actionBarTabStyle = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionBarTabTextStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:actionBarTabTextStyle
        */
        public static final int Theme_actionBarTabTextStyle = 14;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate the
             action bar. This will be inherited by any widget inflated
             into the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarTheme
        */
        public static final int Theme_actionBarTheme = 20;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar. Most of the time
             this will be a reference to the current theme, but when
             the action bar has a significantly different contrast
             profile than the rest of the activity the difference
             can become important. If this is set to @null the current
             theme will be used.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionBarWidgetTheme
        */
        public static final int Theme_actionBarWidgetTheme = 21;
        /**
          <p>
          @attr description
           Default action button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionButtonStyle
        */
        public static final int Theme_actionButtonStyle = 49;
        /**
          <p>
          @attr description
           Default ActionBar dropdown style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionDropDownStyle
        */
        public static final int Theme_actionDropDownStyle = 45;
        /**
          <p>
          @attr description
           TextAppearance style that will be applied to text that
             appears within action menu items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionMenuTextAppearance
        */
        public static final int Theme_actionMenuTextAppearance = 25;
        /**
          <p>
          @attr description
           Color for text that appears within action menu items. 
 Color for text that appears within action menu items. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionMenuTextColor
        */
        public static final int Theme_actionMenuTextColor = 26;
        /**
          <p>
          @attr description
           Background drawable to use for action mode UI 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeBackground
        */
        public static final int Theme_actionModeBackground = 29;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionModeCloseButtonStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:actionModeCloseButtonStyle
        */
        public static final int Theme_actionModeCloseButtonStyle = 28;
        /**
          <p>
          @attr description
           Drawable to use for the close action mode button 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeCloseDrawable
        */
        public static final int Theme_actionModeCloseDrawable = 31;
        /**
          <p>
          @attr description
           Drawable to use for the Copy action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeCopyDrawable
        */
        public static final int Theme_actionModeCopyDrawable = 33;
        /**
          <p>
          @attr description
           Drawable to use for the Cut action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeCutDrawable
        */
        public static final int Theme_actionModeCutDrawable = 32;
        /**
          <p>
          @attr description
           Drawable to use for the Find action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeFindDrawable
        */
        public static final int Theme_actionModeFindDrawable = 37;
        /**
          <p>
          @attr description
           Drawable to use for the Paste action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModePasteDrawable
        */
        public static final int Theme_actionModePasteDrawable = 34;
        /**
          <p>
          @attr description
           PopupWindow style to use for action modes when showing as a window overlay. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModePopupWindowStyle
        */
        public static final int Theme_actionModePopupWindowStyle = 39;
        /**
          <p>
          @attr description
           Drawable to use for the Select all action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeSelectAllDrawable
        */
        public static final int Theme_actionModeSelectAllDrawable = 35;
        /**
          <p>
          @attr description
           Drawable to use for the Share action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeShareDrawable
        */
        public static final int Theme_actionModeShareDrawable = 36;
        /**
          <p>
          @attr description
           Background drawable to use for action mode UI in the lower split bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeSplitBackground
        */
        public static final int Theme_actionModeSplitBackground = 30;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionModeStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:actionModeStyle
        */
        public static final int Theme_actionModeStyle = 27;
        /**
          <p>
          @attr description
           Drawable to use for the Web Search action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:actionModeWebSearchDrawable
        */
        public static final int Theme_actionModeWebSearchDrawable = 38;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionOverflowButtonStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:actionOverflowButtonStyle
        */
        public static final int Theme_actionOverflowButtonStyle = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionOverflowMenuStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:actionOverflowMenuStyle
        */
        public static final int Theme_actionOverflowMenuStyle = 16;
        /**
          <p>
          @attr description
           Default ActivityChooserView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:activityChooserViewStyle
        */
        public static final int Theme_activityChooserViewStyle = 57;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#alertDialogButtonGroupStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:alertDialogButtonGroupStyle
        */
        public static final int Theme_alertDialogButtonGroupStyle = 91;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#alertDialogCenterButtons}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:alertDialogCenterButtons
        */
        public static final int Theme_alertDialogCenterButtons = 92;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#alertDialogStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:alertDialogStyle
        */
        public static final int Theme_alertDialogStyle = 90;
        /**
          <p>
          @attr description
           Theme to use for alert dialogs spawned from this theme. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:alertDialogTheme
        */
        public static final int Theme_alertDialogTheme = 93;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
          attribute's value can be found in the {@link #Theme} array.
          @attr name android:windowAnimationStyle
        */
        public static final int Theme_android_windowAnimationStyle = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
          attribute's value can be found in the {@link #Theme} array.
          @attr name android:windowIsFloating
        */
        public static final int Theme_android_windowIsFloating = 0;
        /**
          <p>
          @attr description
           Default AutoCompleteTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:autoCompleteTextViewStyle
        */
        public static final int Theme_autoCompleteTextViewStyle = 98;
        /**
          <p>
          @attr description
           Style for buttons without an explicit border, often used in groups. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:borderlessButtonStyle
        */
        public static final int Theme_borderlessButtonStyle = 54;
        /**
          <p>
          @attr description
           Style for buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonBarButtonStyle
        */
        public static final int Theme_buttonBarButtonStyle = 51;
        /**
          <p>
          @attr description
           Style for the "negative" buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonBarNegativeButtonStyle
        */
        public static final int Theme_buttonBarNegativeButtonStyle = 96;
        /**
          <p>
          @attr description
           Style for the "neutral" buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonBarNeutralButtonStyle
        */
        public static final int Theme_buttonBarNeutralButtonStyle = 97;
        /**
          <p>
          @attr description
           Style for the "positive" buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonBarPositiveButtonStyle
        */
        public static final int Theme_buttonBarPositiveButtonStyle = 95;
        /**
          <p>
          @attr description
           Style for button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonBarStyle
        */
        public static final int Theme_buttonBarStyle = 50;
        /**
          <p>
          @attr description
           Normal Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonStyle
        */
        public static final int Theme_buttonStyle = 99;
        /**
          <p>
          @attr description
           Small Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:buttonStyleSmall
        */
        public static final int Theme_buttonStyleSmall = 100;
        /**
          <p>
          @attr description
           Default Checkbox style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:checkboxStyle
        */
        public static final int Theme_checkboxStyle = 101;
        /**
          <p>
          @attr description
           Default CheckedTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:checkedTextViewStyle
        */
        public static final int Theme_checkedTextViewStyle = 102;
        /**
          <p>
          @attr description
           Bright complement to the primary branding color. By default, this is the color applied
             to framework controls (via colorControlActivated). 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorAccent
        */
        public static final int Theme_colorAccent = 83;
        /**
          <p>
          @attr description
           The color applied to framework buttons in their normal state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorButtonNormal
        */
        public static final int Theme_colorButtonNormal = 87;
        /**
          <p>
          @attr description
           The color applied to framework controls in their activated (ex. checked) state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorControlActivated
        */
        public static final int Theme_colorControlActivated = 85;
        /**
          <p>
          @attr description
           The color applied to framework control highlights (ex. ripples, list selectors). 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorControlHighlight
        */
        public static final int Theme_colorControlHighlight = 86;
        /**
          <p>
          @attr description
           The color applied to framework controls in their normal state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorControlNormal
        */
        public static final int Theme_colorControlNormal = 84;
        /**
          <p>
          @attr description
           The primary branding color for the app. By default, this is the color applied to the
             action bar background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorPrimary
        */
        public static final int Theme_colorPrimary = 81;
        /**
          <p>
          @attr description
           Dark variant of the primary branding color. By default, this is the color applied to
             the status bar (via statusBarColor) and navigation bar (via navigationBarColor). 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorPrimaryDark
        */
        public static final int Theme_colorPrimaryDark = 82;
        /**
          <p>
          @attr description
           The color applied to framework switch thumbs in their normal state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:colorSwitchThumbNormal
        */
        public static final int Theme_colorSwitchThumbNormal = 88;
        /**
          <p>
          @attr description
           The background used by framework controls. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:controlBackground
        */
        public static final int Theme_controlBackground = 89;
        /**
          <p>
          @attr description
           Preferred padding for dialog content. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:dialogPreferredPadding
        */
        public static final int Theme_dialogPreferredPadding = 43;
        /**
          <p>
          @attr description
           Theme to use for dialogs spawned from this theme. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:dialogTheme
        */
        public static final int Theme_dialogTheme = 42;
        /**
          <p>
          @attr description
           A drawable that may be used as a horizontal divider between visual elements. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:dividerHorizontal
        */
        public static final int Theme_dividerHorizontal = 56;
        /**
          <p>
          @attr description
           A drawable that may be used as a vertical divider between visual elements. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:dividerVertical
        */
        public static final int Theme_dividerVertical = 55;
        /**
          <p>
          @attr description
           ListPopupWindow compatibility 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:dropDownListViewStyle
        */
        public static final int Theme_dropDownListViewStyle = 73;
        /**
          <p>
          @attr description
           The preferred item height for dropdown lists. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:dropdownListPreferredItemHeight
        */
        public static final int Theme_dropdownListPreferredItemHeight = 46;
        /**
          <p>
          @attr description
           EditText background drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:editTextBackground
        */
        public static final int Theme_editTextBackground = 63;
        /**
          <p>
          @attr description
           EditText text foreground color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:editTextColor
        */
        public static final int Theme_editTextColor = 62;
        /**
          <p>
          @attr description
           Default EditText style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:editTextStyle
        */
        public static final int Theme_editTextStyle = 103;
        /**
          <p>
          @attr description
           Specifies a drawable to use for the 'home as up' indicator. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:homeAsUpIndicator
        */
        public static final int Theme_homeAsUpIndicator = 48;
        /**
          <p>
          @attr description
           Drawable used as a background for selected list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:listChoiceBackgroundIndicator
        */
        public static final int Theme_listChoiceBackgroundIndicator = 80;
        /**
          <p>
          @attr description
           The list divider used in alert dialogs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:listDividerAlertDialog
        */
        public static final int Theme_listDividerAlertDialog = 44;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#listPopupWindowStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:listPopupWindowStyle
        */
        public static final int Theme_listPopupWindowStyle = 74;
        /**
          <p>
          @attr description
           The preferred list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:listPreferredItemHeight
        */
        public static final int Theme_listPreferredItemHeight = 68;
        /**
          <p>
          @attr description
           A larger, more robust list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:listPreferredItemHeightLarge
        */
        public static final int Theme_listPreferredItemHeightLarge = 70;
        /**
          <p>
          @attr description
           A smaller, sleeker list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:listPreferredItemHeightSmall
        */
        public static final int Theme_listPreferredItemHeightSmall = 69;
        /**
          <p>
          @attr description
           The preferred padding along the left edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:listPreferredItemPaddingLeft
        */
        public static final int Theme_listPreferredItemPaddingLeft = 71;
        /**
          <p>
          @attr description
           The preferred padding along the right edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:listPreferredItemPaddingRight
        */
        public static final int Theme_listPreferredItemPaddingRight = 72;
        /**
          <p>
          @attr description
           The background of a panel when it is inset from the left and right edges of the screen. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:panelBackground
        */
        public static final int Theme_panelBackground = 77;
        /**
          <p>
          @attr description
           Default Panel Menu style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:panelMenuListTheme
        */
        public static final int Theme_panelMenuListTheme = 79;
        /**
          <p>
          @attr description
           Default Panel Menu width. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:panelMenuListWidth
        */
        public static final int Theme_panelMenuListWidth = 78;
        /**
          <p>
          @attr description
           Default PopupMenu style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:popupMenuStyle
        */
        public static final int Theme_popupMenuStyle = 60;
        /**
          <p>
          @attr description
           Default PopupWindow style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:popupWindowStyle
        */
        public static final int Theme_popupWindowStyle = 61;
        /**
          <p>
          @attr description
           Default RadioButton style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:radioButtonStyle
        */
        public static final int Theme_radioButtonStyle = 104;
        /**
          <p>
          @attr description
           Default RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:ratingBarStyle
        */
        public static final int Theme_ratingBarStyle = 105;
        /**
          <p>
          @attr description
           Style for the search query widget. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:searchViewStyle
        */
        public static final int Theme_searchViewStyle = 67;
        /**
          <p>
          @attr description
           A style that may be applied to buttons or other selectable items
             that should react to pressed and focus states, but that do not
             have a clear visual border along the edges. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:selectableItemBackground
        */
        public static final int Theme_selectableItemBackground = 52;
        /**
          <p>
          @attr description
           Background drawable for borderless standalone items that need focus/pressed states. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:selectableItemBackgroundBorderless
        */
        public static final int Theme_selectableItemBackgroundBorderless = 53;
        /**
          <p>
          @attr description
           Default Spinner style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:spinnerDropDownItemStyle
        */
        public static final int Theme_spinnerDropDownItemStyle = 47;
        /**
          <p>
          @attr description
           Default Spinner style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:spinnerStyle
        */
        public static final int Theme_spinnerStyle = 106;
        /**
          <p>
          @attr description
           Default style for the Switch widget. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:switchStyle
        */
        public static final int Theme_switchStyle = 107;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for the text inside of a popup menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAppearanceLargePopupMenu
        */
        public static final int Theme_textAppearanceLargePopupMenu = 40;
        /**
          <p>
          @attr description
           The preferred TextAppearance for the primary text of list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAppearanceListItem
        */
        public static final int Theme_textAppearanceListItem = 75;
        /**
          <p>
          @attr description
           The preferred TextAppearance for the primary text of small list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAppearanceListItemSmall
        */
        public static final int Theme_textAppearanceListItemSmall = 76;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAppearanceSearchResultSubtitle
        */
        public static final int Theme_textAppearanceSearchResultSubtitle = 65;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAppearanceSearchResultTitle
        */
        public static final int Theme_textAppearanceSearchResultTitle = 64;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for small text inside of a popup menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textAppearanceSmallPopupMenu
        */
        public static final int Theme_textAppearanceSmallPopupMenu = 41;
        /**
          <p>
          @attr description
           Color of list item text in alert dialogs. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textColorAlertDialogListItem
        */
        public static final int Theme_textColorAlertDialogListItem = 94;
        /**
          <p>
          @attr description
           Text color for urls in search suggestions, used by things like global search 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:textColorSearchUrl
        */
        public static final int Theme_textColorSearchUrl = 66;
        /**
          <p>
          @attr description
           Default Toolar NavigationButtonStyle 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:toolbarNavigationButtonStyle
        */
        public static final int Theme_toolbarNavigationButtonStyle = 59;
        /**
          <p>
          @attr description
           Default Toolbar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:toolbarStyle
        */
        public static final int Theme_toolbarStyle = 58;
        /**
          <p>
          @attr description
           Flag indicating whether this window should have an Action Bar
             in place of the usual title bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowActionBar
        */
        public static final int Theme_windowActionBar = 2;
        /**
          <p>
          @attr description
           Flag indicating whether this window's Action Bar should overlay
             application content. Does nothing if the window would not
             have an Action Bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowActionBarOverlay
        */
        public static final int Theme_windowActionBarOverlay = 4;
        /**
          <p>
          @attr description
           Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowActionModeOverlay
        */
        public static final int Theme_windowActionModeOverlay = 5;
        /**
          <p>
          @attr description
           A fixed height for the window along the major axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowFixedHeightMajor
        */
        public static final int Theme_windowFixedHeightMajor = 9;
        /**
          <p>
          @attr description
           A fixed height for the window along the minor axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowFixedHeightMinor
        */
        public static final int Theme_windowFixedHeightMinor = 7;
        /**
          <p>
          @attr description
           A fixed width for the window along the major axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowFixedWidthMajor
        */
        public static final int Theme_windowFixedWidthMajor = 6;
        /**
          <p>
          @attr description
           A fixed width for the window along the minor axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowFixedWidthMinor
        */
        public static final int Theme_windowFixedWidthMinor = 8;
        /**
          <p>
          @attr description
           The minimum width the window is allowed to be, along the major
             axis of the screen.  That is, when in landscape.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowMinWidthMajor
        */
        public static final int Theme_windowMinWidthMajor = 10;
        /**
          <p>
          @attr description
           The minimum width the window is allowed to be, along the minor
             axis of the screen.  That is, when in portrait.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowMinWidthMinor
        */
        public static final int Theme_windowMinWidthMinor = 11;
        /**
          <p>
          @attr description
           Flag indicating whether there should be no title on this window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:windowNoTitle
        */
        public static final int Theme_windowNoTitle = 3;
        /** Attributes that can be used with a Toolbar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td> Allows us to read in the minHeight attr pre-v16 </td></tr>
           <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.deskclock:collapseContentDescription}</code></td><td> Text to set as the content description for the collapse button.</td></tr>
           <tr><td><code>{@link #Toolbar_collapseIcon com.android.deskclock:collapseIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.deskclock:contentInsetEnd}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.deskclock:contentInsetLeft}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetRight com.android.deskclock:contentInsetRight}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetStart com.android.deskclock:contentInsetStart}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_logo com.android.deskclock:logo}</code></td><td> Drawable to set as the logo that appears at the starting side of
             the Toolbar, just after the navigation button.</td></tr>
           <tr><td><code>{@link #Toolbar_logoDescription com.android.deskclock:logoDescription}</code></td><td> A content description string to describe the appearance of the
             associated logo image.</td></tr>
           <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.deskclock:maxButtonHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.deskclock:navigationContentDescription}</code></td><td> Text to set as the content description for the navigation button
             located at the start of the toolbar.</td></tr>
           <tr><td><code>{@link #Toolbar_navigationIcon com.android.deskclock:navigationIcon}</code></td><td> Icon drawable to use for the navigation button located at
             the start of the toolbar.</td></tr>
           <tr><td><code>{@link #Toolbar_popupTheme com.android.deskclock:popupTheme}</code></td><td> Reference to a theme that should be used to inflate popups
             shown by widgets in the toolbar.</td></tr>
           <tr><td><code>{@link #Toolbar_subtitle com.android.deskclock:subtitle}</code></td><td> Specifies subtitle text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.deskclock:subtitleTextAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.deskclock:subtitleTextColor}</code></td><td> A color to apply to the subtitle string.</td></tr>
           <tr><td><code>{@link #Toolbar_title com.android.deskclock:title}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.deskclock:titleMarginBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.deskclock:titleMarginEnd}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginStart com.android.deskclock:titleMarginStart}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginTop com.android.deskclock:titleMarginTop}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMargins com.android.deskclock:titleMargins}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.deskclock:titleTextAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleTextColor com.android.deskclock:titleTextColor}</code></td><td> A color to apply to the title string.</td></tr>
           </table>
           @see #Toolbar_android_gravity
           @see #Toolbar_android_minHeight
           @see #Toolbar_collapseContentDescription
           @see #Toolbar_collapseIcon
           @see #Toolbar_contentInsetEnd
           @see #Toolbar_contentInsetLeft
           @see #Toolbar_contentInsetRight
           @see #Toolbar_contentInsetStart
           @see #Toolbar_logo
           @see #Toolbar_logoDescription
           @see #Toolbar_maxButtonHeight
           @see #Toolbar_navigationContentDescription
           @see #Toolbar_navigationIcon
           @see #Toolbar_popupTheme
           @see #Toolbar_subtitle
           @see #Toolbar_subtitleTextAppearance
           @see #Toolbar_subtitleTextColor
           @see #Toolbar_title
           @see #Toolbar_titleMarginBottom
           @see #Toolbar_titleMarginEnd
           @see #Toolbar_titleMarginStart
           @see #Toolbar_titleMarginTop
           @see #Toolbar_titleMargins
           @see #Toolbar_titleTextAppearance
           @see #Toolbar_titleTextColor
         */
        public static final int[] Toolbar = {
            0x010100af, 0x01010140, 0x7f01000e, 0x7f01007d,
            0x7f010081, 0x7f01008d, 0x7f01008e, 0x7f01008f,
            0x7f010090, 0x7f010092, 0x7f0100b1, 0x7f0100b2,
            0x7f0100b3, 0x7f0100b4, 0x7f0100b5, 0x7f0100b6,
            0x7f0100b7, 0x7f0100b8, 0x7f0100b9, 0x7f0100ba,
            0x7f0100bb, 0x7f0100bc, 0x7f0100bd, 0x7f0100be,
            0x7f0100bf
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gravity}
          attribute's value can be found in the {@link #Toolbar} array.
          @attr name android:gravity
        */
        public static final int Toolbar_android_gravity = 0;
        /**
          <p>
          @attr description
           Allows us to read in the minHeight attr pre-v16 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#minHeight}.
          @attr name android:minHeight
        */
        public static final int Toolbar_android_minHeight = 1;
        /**
          <p>
          @attr description
           Text to set as the content description for the collapse button. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:collapseContentDescription
        */
        public static final int Toolbar_collapseContentDescription = 19;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#collapseIcon}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:collapseIcon
        */
        public static final int Toolbar_collapseIcon = 18;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetEnd
        */
        public static final int Toolbar_contentInsetEnd = 6;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetLeft
        */
        public static final int Toolbar_contentInsetLeft = 7;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetRight
        */
        public static final int Toolbar_contentInsetRight = 8;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:contentInsetStart
        */
        public static final int Toolbar_contentInsetStart = 5;
        /**
          <p>
          @attr description
           Drawable to set as the logo that appears at the starting side of
             the Toolbar, just after the navigation button. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:logo
        */
        public static final int Toolbar_logo = 4;
        /**
          <p>
          @attr description
           A content description string to describe the appearance of the
             associated logo image. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:logoDescription
        */
        public static final int Toolbar_logoDescription = 22;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#maxButtonHeight}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:maxButtonHeight
        */
        public static final int Toolbar_maxButtonHeight = 17;
        /**
          <p>
          @attr description
           Text to set as the content description for the navigation button
             located at the start of the toolbar. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:navigationContentDescription
        */
        public static final int Toolbar_navigationContentDescription = 21;
        /**
          <p>
          @attr description
           Icon drawable to use for the navigation button located at
             the start of the toolbar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:navigationIcon
        */
        public static final int Toolbar_navigationIcon = 20;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate popups
             shown by widgets in the toolbar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:popupTheme
        */
        public static final int Toolbar_popupTheme = 9;
        /**
          <p>
          @attr description
           Specifies subtitle text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:subtitle
        */
        public static final int Toolbar_subtitle = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#subtitleTextAppearance}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:subtitleTextAppearance
        */
        public static final int Toolbar_subtitleTextAppearance = 11;
        /**
          <p>
          @attr description
           A color to apply to the subtitle string. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:subtitleTextColor
        */
        public static final int Toolbar_subtitleTextColor = 24;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#title}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:title
        */
        public static final int Toolbar_title = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#titleMarginBottom}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:titleMarginBottom
        */
        public static final int Toolbar_titleMarginBottom = 16;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#titleMarginEnd}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:titleMarginEnd
        */
        public static final int Toolbar_titleMarginEnd = 14;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#titleMarginStart}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:titleMarginStart
        */
        public static final int Toolbar_titleMarginStart = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#titleMarginTop}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:titleMarginTop
        */
        public static final int Toolbar_titleMarginTop = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#titleMargins}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:titleMargins
        */
        public static final int Toolbar_titleMargins = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#titleTextAppearance}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.deskclock:titleTextAppearance
        */
        public static final int Toolbar_titleTextAppearance = 10;
        /**
          <p>
          @attr description
           A color to apply to the title string. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:titleTextColor
        */
        public static final int Toolbar_titleTextColor = 23;
        /** Attributes that can be used with a View.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td> Boolean that controls whether a view can take focus.</td></tr>
           <tr><td><code>{@link #View_android_theme android:theme}</code></td><td> Specifies a theme override for a view.</td></tr>
           <tr><td><code>{@link #View_paddingEnd com.android.deskclock:paddingEnd}</code></td><td> Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingStart com.android.deskclock:paddingStart}</code></td><td> Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_theme com.android.deskclock:theme}</code></td><td> Deprecated.</td></tr>
           </table>
           @see #View_android_focusable
           @see #View_android_theme
           @see #View_paddingEnd
           @see #View_paddingStart
           @see #View_theme
         */
        public static final int[] View = {
            0x01010000, 0x010100da, 0x7f010094, 0x7f010095,
            0x7f010096
        };
        /**
          <p>
          @attr description
           Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#focusable}.
          @attr name android:focusable
        */
        public static final int View_android_focusable = 1;
        /**
          <p>
          @attr description
           Specifies a theme override for a view. When a theme override is set, the
             view will be inflated using a {@link android.content.Context} themed with
             the specified resource. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#theme}.
          @attr name android:theme
        */
        public static final int View_android_theme = 0;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:paddingEnd
        */
        public static final int View_paddingEnd = 3;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:paddingStart
        */
        public static final int View_paddingStart = 2;
        /**
          <p>
          @attr description
           Deprecated. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.deskclock:theme
        */
        public static final int View_theme = 4;
        /** Attributes that can be used with a ViewBackgroundHelper.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
           <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.deskclock:backgroundTint}</code></td><td> Tint to apply to the background.</td></tr>
           <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.deskclock:backgroundTintMode}</code></td><td> Blending mode used to apply the background tint.</td></tr>
           </table>
           @see #ViewBackgroundHelper_android_background
           @see #ViewBackgroundHelper_backgroundTint
           @see #ViewBackgroundHelper_backgroundTintMode
         */
        public static final int[] ViewBackgroundHelper = {
            0x010100d4, 0x7f010097, 0x7f010098
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#background}
          attribute's value can be found in the {@link #ViewBackgroundHelper} array.
          @attr name android:background
        */
        public static final int ViewBackgroundHelper_android_background = 0;
        /**
          <p>
          @attr description
           Tint to apply to the background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:backgroundTint
        */
        public static final int ViewBackgroundHelper_backgroundTint = 1;
        /**
          <p>
          @attr description
           Blending mode used to apply the background tint. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.deskclock:backgroundTintMode
        */
        public static final int ViewBackgroundHelper_backgroundTintMode = 2;
        /** Attributes that can be used with a ViewStubCompat.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
           <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td> Overrides the id of the inflated View with this value.</td></tr>
           <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td> Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so.</td></tr>
           </table>
           @see #ViewStubCompat_android_id
           @see #ViewStubCompat_android_inflatedId
           @see #ViewStubCompat_android_layout
         */
        public static final int[] ViewStubCompat = {
            0x010100d0, 0x010100f2, 0x010100f3
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#id}
          attribute's value can be found in the {@link #ViewStubCompat} array.
          @attr name android:id
        */
        public static final int ViewStubCompat_android_id = 0;
        /**
          <p>
          @attr description
           Overrides the id of the inflated View with this value. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#inflatedId}.
          @attr name android:inflatedId
        */
        public static final int ViewStubCompat_android_inflatedId = 2;
        /**
          <p>
          @attr description
           Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so. The layout resource must be a
             valid reference to a layout. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout}.
          @attr name android:layout
        */
        public static final int ViewStubCompat_android_layout = 1;
    };
}
