/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.calculator2;

public final class R {
    public static final class attr {
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxTextSize=0x7f010001;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minTextSize=0x7f010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stepTextSize=0x7f010002;
    }
    public static final class color {
        /**  Default background color for the status bar. 
         */
        public static final int calculator_accent_color=0x7f050000;
        /**  Color to indicate an error has occured. 
         */
        public static final int calculator_error_color=0x7f050001;
        /**  Background color of the calculator display. 
         */
        public static final int display_background_color=0x7f050002;
        /**  Text color for the formula in the calculator display. 
         */
        public static final int display_formula_text_color=0x7f050003;
        /**  Lighter color for exponent while scrolling. 
         */
        public static final int display_result_exponent_text_color=0x7f050005;
        /**  Text color for the result in the calculator display. 
         */
        public static final int display_result_text_color=0x7f050004;
        /**  Background color for the advanced pad. 
         */
        public static final int pad_advanced_background_color=0x7f050008;
        /**  Ripple color when a button is pressed in a pad. 
         */
        public static final int pad_button_advanced_ripple_color=0x7f05000c;
        /**  Text color for a button in the advanced pad. 
         */
        public static final int pad_button_advanced_text_color=0x7f05000a;
        /**  Ripple color when a button is pressed in a pad. 
         */
        public static final int pad_button_ripple_color=0x7f05000b;
        /**  Text color for a button in a pad. 
         */
        public static final int pad_button_text_color=0x7f050009;
        /**  Background color for the numeric pad. 
         */
        public static final int pad_numeric_background_color=0x7f050006;
        /**  Background color for the operator pad. 
         */
        public static final int pad_operator_background_color=0x7f050007;
    }
    public static final class dimen {
        /**  The margin between the pad pages when displayed using a view pager. 
         */
        public static final int pad_page_margin=0x7f060000;
    }
    public static final class drawable {
        public static final int pad_button_advanced_background=0x7f020000;
        public static final int pad_button_background=0x7f020001;
        public static final int pad_button_inverse_background=0x7f020002;
    }
    public static final class id {
        public static final int clr=0x7f0a002c;
        public static final int const_e=0x7f0a0017;
        public static final int const_pi=0x7f0a0016;
        public static final int dec_point=0x7f0a0027;
        public static final int del=0x7f0a002b;
        public static final int digit_0=0x7f0a0028;
        public static final int digit_1=0x7f0a0024;
        public static final int digit_2=0x7f0a0025;
        public static final int digit_3=0x7f0a0026;
        public static final int digit_4=0x7f0a0021;
        public static final int digit_5=0x7f0a0022;
        public static final int digit_6=0x7f0a0023;
        public static final int digit_7=0x7f0a001e;
        public static final int digit_8=0x7f0a001f;
        public static final int digit_9=0x7f0a0020;
        public static final int display=0x7f0a0002;
        public static final int eq=0x7f0a0029;
        public static final int formula=0x7f0a0005;
        public static final int fun_10pow=0x7f0a0014;
        public static final int fun_arccos=0x7f0a000e;
        public static final int fun_arcsin=0x7f0a000c;
        public static final int fun_arctan=0x7f0a0010;
        public static final int fun_cos=0x7f0a000d;
        public static final int fun_exp=0x7f0a0012;
        public static final int fun_ln=0x7f0a0011;
        public static final int fun_log=0x7f0a0013;
        public static final int fun_sin=0x7f0a000b;
        public static final int fun_tan=0x7f0a000f;
        public static final int lparen=0x7f0a0019;
        public static final int menu_copy=0x7f0a0034;
        public static final int menu_fraction=0x7f0a0032;
        public static final int menu_leading=0x7f0a0031;
        public static final int menu_licenses=0x7f0a0033;
        public static final int menu_paste=0x7f0a0035;
        public static final int message=0x7f0a0001;
        public static final int mode=0x7f0a0004;
        public static final int op_add=0x7f0a0030;
        public static final int op_div=0x7f0a002d;
        public static final int op_fact=0x7f0a0015;
        public static final int op_mul=0x7f0a002e;
        public static final int op_pct=0x7f0a000a;
        public static final int op_pow=0x7f0a0018;
        public static final int op_sqr=0x7f0a001c;
        public static final int op_sqrt=0x7f0a001b;
        public static final int op_sub=0x7f0a002f;
        public static final int pad_advanced=0x7f0a0007;
        public static final int pad_numeric=0x7f0a001d;
        public static final int pad_operator=0x7f0a002a;
        public static final int pad_pager=0x7f0a0000;
        public static final int result=0x7f0a0006;
        public static final int rparen=0x7f0a001a;
        public static final int toggle_inv=0x7f0a0008;
        public static final int toggle_mode=0x7f0a0009;
        public static final int toolbar=0x7f0a0003;
    }
    public static final class layout {
        public static final int activity_calculator=0x7f04000a;
        public static final int activity_calculator_land=0x7f040000;
        public static final int activity_calculator_port=0x7f040001;
        public static final int activity_calculator_tablet_port=0x7f040002;
        public static final int dialog_message=0x7f040003;
        public static final int display=0x7f040004;
        public static final int pad_advanced=0x7f040005;
        public static final int pad_advanced_tablet_port=0x7f040006;
        public static final int pad_numeric=0x7f040007;
        public static final int pad_operator_one_col=0x7f040008;
        public static final int pad_operator_two_col=0x7f040009;
    }
    public static final class menu {
        public static final int activity_calculator=0x7f090000;
        public static final int copy=0x7f090001;
        public static final int paste=0x7f090002;
    }
    public static final class mipmap {
        public static final int ic_launcher_calculator=0x7f030000;
    }
    public static final class string {
        /**  Name of the application. [CHAR_LIMIT=NONE] 
         */
        public static final int app_name=0x7f070000;
        /**  Indicator (for "leading" display) that result is inexact. [CHAR_LIMIT=NONE] 
         */
        public static final int approximate=0x7f070057;
        /**  Dialog message when a computation is cancelled by the user. [CHAR_LIMIT=NONE] 
         */
        public static final int cancelled=0x7f070052;
        /**  Clear button to clear the currently entered expression. [CHAR_LIMIT=4] 
         */
        public static final int clr=0x7f070028;
        /**  Constant for Euler's number (i.e. "2.7182…"). [CHAR_LIMIT=1] 
         */
        public static final int const_e=0x7f070001;
        /**  Constant for pi (i.e. "3.1415…"). [CHAR_LIMIT=1] 
         */
        public static final int const_pi=0x7f070002;
        /** 
      Decimal separator (e.g. "1.23" or "1,23").

      This should be whatever character is appropriate for use as a decimal sign for a given locale
      when used with Arabic numerals (i.e. 0, 1, 2, 3, ...)

      [CHAR_LIMIT=1]
      
         */
        public static final int dec_point=0x7f070005;
        /**  Delete button to remove last entered token. [CHAR_LIMIT=4] 
         */
        public static final int del=0x7f070029;
        /**  Content description for "clr" button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_clr=0x7f070048;
        /**  Content description for 'e' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_const_e=0x7f07002b;
        /**  Content description for 'π' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_const_pi=0x7f07002c;
        /**  Content description for '.' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_dec_point=0x7f07002d;
        /**  Content description for "del" button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_del=0x7f070049;
        /**  Content description for '=' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_eq=0x7f070047;
        /** 
      Content description for 10^ button. This button is used to raise 10 to the subsequently
      entered power. E.g. <10^>3 would yield 1000.
      [CHAR_LIMIT=NONE]
      
         */
        public static final int desc_fun_10pow=0x7f070038;
        /**  Content description for 'arccos' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_arccos=0x7f070035;
        /**  Content description for 'arcsin' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_arcsin=0x7f070036;
        /**  Content description for 'arctan' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_arctan=0x7f070037;
        /**  Content description for 'cos' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_cos=0x7f070030;
        /**  Content description for e^ (exponential function) button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_exp=0x7f070039;
        /**  Content description for 'ln' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_ln=0x7f070031;
        /**  Content description for 'log' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_log=0x7f070032;
        /**  Content description for 'sin' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_sin=0x7f070033;
        /**  Content description for 'tan' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_tan=0x7f070034;
        /**  Content description for "inv" button to show inverse functions. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_inv_off=0x7f07004a;
        /**  Content description for "inv" button to hide inverse functions. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_inv_on=0x7f07004b;
        /**  Content description for '(' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_lparen=0x7f07002e;
        /**  Content description for degree mode. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_mode_deg=0x7f070043;
        /**  Content description for radian mode. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_mode_rad=0x7f070044;
        /**  Content description for '+' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_add=0x7f07003b;
        /**  Content description for '÷' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_div=0x7f07003c;
        /**  Content description for '!' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_fact=0x7f07003d;
        /**  Content description for '×' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_mul=0x7f07003e;
        /**  Content description for '%' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_pct=0x7f07003f;
        /**  Content description for '^' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_pow=0x7f070040;
        /** 
      Content description for ^2 button. This button is used to square the previously entered
      number. E.g. 3<^2> would yield 9.
      [CHAR_LIMIT=NONE]
      
         */
        public static final int desc_op_sqr=0x7f07003a;
        /**  Content description for '√' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_sqrt=0x7f070041;
        /**  Content description for '-' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_sub=0x7f070042;
        /**  Content description for ')' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_rparen=0x7f07002f;
        /**  Content description for switch to degree button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_switch_deg=0x7f070045;
        /**  Content description for switch to radian button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_switch_rad=0x7f070046;
        /**  Decimal representation of zero (e.g. "0", "10", "1.0", "1e0"). [CHAR_LIMIT=1] 
         */
        public static final int digit_0=0x7f070006;
        /**  Decimal representation of one (e.g. "1", "11", "1.1", "1e1"). [CHAR_LIMIT=1] 
         */
        public static final int digit_1=0x7f070007;
        /**  Decimal representation of two (e.g. "2", "22", "2.2", "2e2"). [CHAR_LIMIT=1] 
         */
        public static final int digit_2=0x7f070008;
        /**  Decimal representation of three (e.g. "3", "33", "3.3", "3e3"). [CHAR_LIMIT=1] 
         */
        public static final int digit_3=0x7f070009;
        /**  Decimal representation of four (e.g. "4", "44", "4.4", "4e4"). [CHAR_LIMIT=1] 
         */
        public static final int digit_4=0x7f07000a;
        /**  Decimal representation of five (e.g. "5", "55", "5.5", "5e5"). [CHAR_LIMIT=1] 
         */
        public static final int digit_5=0x7f07000b;
        /**  Decimal representation of six (e.g. "6", "66", "6.6", "6e6"). [CHAR_LIMIT=1] 
         */
        public static final int digit_6=0x7f07000c;
        /**  Decimal representation of seven (e.g. "7", "77", "7.7", "7e7"). [CHAR_LIMIT=1] 
         */
        public static final int digit_7=0x7f07000d;
        /**  Decimal representation of eight (e.g. "8", "88", "8.8", "8e8"). [CHAR_LIMIT=1] 
         */
        public static final int digit_8=0x7f07000e;
        /**  Decimal representation of eight (e.g. "9", "99", "9.9", "9e9"). [CHAR_LIMIT=1] 
         */
        public static final int digit_9=0x7f07000f;
        /**  Button label to dismiss informative text message. [CHAR_LIMIT=40] 
         */
        public static final int dismiss=0x7f070055;
        /**  Equals button (e.g. "1 + 2 = ?"). [CHAR_LIMIT=1] 
         */
        public static final int eq=0x7f070027;
        /**  Error displayed when evaluation is manually aborted. [CHAR_LIMIT=20] 
         */
        public static final int error_aborted=0x7f07004e;
        /**  Error displayed when expression evaluates to an undefined result. [CHAR_LIMIT=20] 
         */
        public static final int error_nan=0x7f07004c;
        /**  Error displayed when excessive precision is required. [CHAR_LIMIT=20] 
         */
        public static final int error_overflow=0x7f07004f;
        /**  Error displayed when expression contains a syntax error. [CHAR_LIMIT=20] 
         */
        public static final int error_syntax=0x7f07004d;
        /** 
      Error displayed when division by zero is detected.

      If the translation does not fit within the given limit, then a shortened version must
      be used, e.g. "Division by 0". Exceeding the limit will result in a truncated string.

      [CHAR_LIMIT=20]
    
         */
        public static final int error_zero_divide=0x7f070050;
        /**  Appended indicator (for "leading" display) that result is exact. [CHAR_LIMIT=NONE] 
         */
        public static final int exact=0x7f070056;
        /**  Abbrev. name of exponential function in formula.  
         */
        public static final int exponential=0x7f070024;
        /**  Abbrev. name of base 10 exponential function (e.g. "10^6"). [CHAR_LIMIT=5] 
         */
        public static final int fun_10pow=0x7f070020;
        /**  Abbrev. name of cosine function (e.g. "arccos(π)"). [CHAR_LIMIT=5] 
         */
        public static final int fun_arccos=0x7f07001d;
        /**  Abbrev. name of sine function (e.g. "arcsin(π)"). [CHAR_LIMIT=5] 
         */
        public static final int fun_arcsin=0x7f07001e;
        /**  Abbrev. name of tangent function (e.g. "arctan(π)"). [CHAR_LIMIT=5] 
         */
        public static final int fun_arctan=0x7f07001f;
        /**  Abbrev. name of cosine function (e.g. "cos(π)"). [CHAR_LIMIT=4] 
         */
        public static final int fun_cos=0x7f070018;
        /**  Abbrev. name of exponential function (e.g. "e^6"). [CHAR_LIMIT=5] 
         */
        public static final int fun_exp=0x7f070021;
        /**  Natural logarithm function (e.g. "ln(2)"). [CHAR_LIMIT=4] 
         */
        public static final int fun_ln=0x7f070019;
        /**  Logarithm function (e.g. "log(10)"). [CHAR_LIMIT=4] 
         */
        public static final int fun_log=0x7f07001a;
        /**  Abbrev. name of sine function (e.g. "sin(π)"). [CHAR_LIMIT=4] 
         */
        public static final int fun_sin=0x7f07001b;
        /**  Abbrev. name of tangent function (e.g. "tan(π)"). [CHAR_LIMIT=4] 
         */
        public static final int fun_tan=0x7f07001c;
        /**  Toggle button to show/hide inverse functions. [CHAR_LIMIT=4] 
         */
        public static final int inv=0x7f07002a;
        /**  Left parenthesis (e.g. "log(", "2 × (3 - 1)". [CHAR_LIMIT=1] 
         */
        public static final int lparen=0x7f070003;
        /**  Menu option to display result as fraction. [CHAR_LIMIT=40] 
         */
        public static final int menu_fraction=0x7f070059;
        /**  Menu option to display result including leading digits. [CHAR_LIMIT=40] 
         */
        public static final int menu_leading=0x7f070058;
        /**  Menu option to view the app's open source licenses. [CHAR_LIMIT=40] 
         */
        public static final int menu_licenses=0x7f07005a;
        /**  Abbrev. name of degree mode [CHAR_LIMIT=4] 
         */
        public static final int mode_deg=0x7f070025;
        /**  Abbrev. name of radian mode. [CHAR_LIMIT=4] 
         */
        public static final int mode_rad=0x7f070026;
        /** 
      Button label to allow future computations with a longer timeout.

      When evaluating a result takes too long, we show a "timed out" dialog. This button allows
      the user to increase the maximum amount of time we attempt to evaluate the expression before
      "timing out".

      [CHAR_LIMIT=40]
    
         */
        public static final int ok_remove_timeout=0x7f070054;
        /**  Addition operator (e.g. "1 + 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_add=0x7f070010;
        /**  Divide operator (e.g. "1 ÷ 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_div=0x7f070011;
        /**  Factorial operator (e.g. "2!"). [CHAR_LIMIT=1] 
         */
        public static final int op_fact=0x7f070012;
        /**  Multiply operator (e.g. "1 × 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_mul=0x7f070013;
        /**  Percent operator (e.g. "25%"). [CHAR_LIMIT=1] 
         */
        public static final int op_pct=0x7f070014;
        /**  Power operator (e.g. "1 ^ 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_pow=0x7f070015;
        /**  Abbrev. name of suffix square function on key (e.g. "17^2"). [CHAR_LIMIT=5] 
         */
        public static final int op_sqr=0x7f070022;
        /**  Square root operator (e.g. "√1"). [CHAR_LIMIT=1] 
         */
        public static final int op_sqrt=0x7f070016;
        /**  Subtraction operator (e.g. "1 - 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_sub=0x7f070017;
        /**  Right parenthesis (e.g. "log(2)", "(3 - 1) × 2". [CHAR_LIMIT=1] 
         */
        public static final int rparen=0x7f070004;
        /** 
      Abbrev. name of suffix square function in formula.
      "^2" does not work, since it blends into a later constant.
      
         */
        public static final int squared=0x7f070023;
        /**  Toast shown when text is copied to the clipboard. [CHAR_LIMIT=40] 
         */
        public static final int text_copied_toast=0x7f070051;
        /**  Dialog message when a computation times out. [CHAR_LIMIT=NONE] 
         */
        public static final int timeout=0x7f070053;
    }
    public static final class style {
        public static final int DisplayTextStyle=0x7f080003;
        public static final int DisplayTextStyle_Formula=0x7f080006;
        public static final int DisplayTextStyle_Result=0x7f080007;
        public static final int PadButtonStyle=0x7f080004;
        public static final int PadButtonStyle_Advanced=0x7f080008;
        public static final int PadButtonStyle_Advanced_Text=0x7f080009;
        public static final int PadButtonStyle_Numeric=0x7f08000a;
        public static final int PadButtonStyle_Numeric_Equals=0x7f08000b;
        public static final int PadButtonStyle_Operator=0x7f08000c;
        public static final int PadButtonStyle_Operator_Text=0x7f08000d;
        public static final int PadLayoutStyle=0x7f080005;
        public static final int PadLayoutStyle_Advanced=0x7f08000e;
        public static final int PadLayoutStyle_Numeric=0x7f08000f;
        public static final int PadLayoutStyle_Operator=0x7f080010;
        public static final int PadLinearLayoutStyle=0x7f080011;
        public static final int Theme=0x7f080000;
        public static final int Theme_Calculator=0x7f080001;
        public static final int Theme_Licenses=0x7f080002;
    }
    public static final class styleable {
        /** Attributes that can be used with a CalculatorText.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CalculatorText_maxTextSize com.android.calculator2:maxTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CalculatorText_minTextSize com.android.calculator2:minTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CalculatorText_stepTextSize com.android.calculator2:stepTextSize}</code></td><td></td></tr>
           </table>
           @see #CalculatorText_maxTextSize
           @see #CalculatorText_minTextSize
           @see #CalculatorText_stepTextSize
         */
        public static final int[] CalculatorText = {
            0x7f010000, 0x7f010001, 0x7f010002
        };
        /**
          <p>This symbol is the offset where the {@link com.android.calculator2.R.attr#maxTextSize}
          attribute's value can be found in the {@link #CalculatorText} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.calculator2:maxTextSize
        */
        public static final int CalculatorText_maxTextSize = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.calculator2.R.attr#minTextSize}
          attribute's value can be found in the {@link #CalculatorText} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.calculator2:minTextSize
        */
        public static final int CalculatorText_minTextSize = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.calculator2.R.attr#stepTextSize}
          attribute's value can be found in the {@link #CalculatorText} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.calculator2:stepTextSize
        */
        public static final int CalculatorText_stepTextSize = 2;
    };
}
