/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.calculator2;

public final class R {
    public static final class array {
        public static final int operatorDescs=0x7f090000;
    }
    public static final class attr {
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxTextSize=0x7f010001;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minTextSize=0x7f010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stepTextSize=0x7f010002;
    }
    public static final class bool {
        /**  Whether to use localized digits in the numeric pad. 
 Whether to use localized digits in the numeric pad. 
         */
        public static final int use_localized_digits=0x7f060000;
    }
    public static final class color {
        /**  Default background color for the status bar. 
         */
        public static final int calculator_accent_color=0x7f050000;
        /**  Color to indicate an error has occured. 
         */
        public static final int calculator_error_color=0x7f050001;
        /**  Background color of the calculator display. 
         */
        public static final int display_background_color=0x7f050002;
        /**  Text color for the formula in the calculator display. 
         */
        public static final int display_formula_text_color=0x7f050003;
        /**  Text color for the result in the calculator display. 
         */
        public static final int display_result_text_color=0x7f050004;
        /**  Background color for the advanced pad. 
         */
        public static final int pad_advanced_background_color=0x7f050007;
        /**  Ripple color when a button is pressed in a pad. 
         */
        public static final int pad_button_advanced_ripple_color=0x7f05000b;
        /**  Text color for a button in the advanced pad. 
         */
        public static final int pad_button_advanced_text_color=0x7f050009;
        /**  Ripple color when a button is pressed in a pad. 
         */
        public static final int pad_button_ripple_color=0x7f05000a;
        /**  Text color for a button in a pad. 
         */
        public static final int pad_button_text_color=0x7f050008;
        /**  Background color for the numeric pad. 
         */
        public static final int pad_numeric_background_color=0x7f050005;
        /**  Background color for the operator pad. 
         */
        public static final int pad_operator_background_color=0x7f050006;
    }
    public static final class dimen {
        /**  The margin between the pad pages when displayed using a view pager. 
         */
        public static final int pad_page_margin=0x7f070000;
    }
    public static final class drawable {
        public static final int pad_button_advanced_background=0x7f020000;
        public static final int pad_button_background=0x7f020001;
    }
    public static final class id {
        public static final int clr=0x7f0b0020;
        public static final int const_e=0x7f0b000c;
        public static final int const_pi=0x7f0b000b;
        public static final int dec_point=0x7f0b001b;
        public static final int del=0x7f0b001f;
        public static final int digit_0=0x7f0b001c;
        public static final int digit_1=0x7f0b0018;
        public static final int digit_2=0x7f0b0019;
        public static final int digit_3=0x7f0b001a;
        public static final int digit_4=0x7f0b0015;
        public static final int digit_5=0x7f0b0016;
        public static final int digit_6=0x7f0b0017;
        public static final int digit_7=0x7f0b0012;
        public static final int digit_8=0x7f0b0013;
        public static final int digit_9=0x7f0b0014;
        public static final int display=0x7f0b0001;
        public static final int eq=0x7f0b001d;
        public static final int formula=0x7f0b0002;
        public static final int fun_cos=0x7f0b0006;
        public static final int fun_ln=0x7f0b0008;
        public static final int fun_log=0x7f0b0009;
        public static final int fun_sin=0x7f0b0005;
        public static final int fun_tan=0x7f0b0007;
        public static final int lparen=0x7f0b000e;
        public static final int op_add=0x7f0b0024;
        public static final int op_div=0x7f0b0021;
        public static final int op_fact=0x7f0b000a;
        public static final int op_mul=0x7f0b0022;
        public static final int op_pow=0x7f0b000d;
        public static final int op_sqrt=0x7f0b0010;
        public static final int op_sub=0x7f0b0023;
        public static final int pad_advanced=0x7f0b0004;
        public static final int pad_numeric=0x7f0b0011;
        public static final int pad_operator=0x7f0b001e;
        public static final int pad_pager=0x7f0b0000;
        public static final int result=0x7f0b0003;
        public static final int rparen=0x7f0b000f;
    }
    public static final class layout {
        public static final int activity_calculator=0x7f040008;
        public static final int activity_calculator_land=0x7f040000;
        public static final int activity_calculator_port=0x7f040001;
        public static final int activity_calculator_tablet_port=0x7f040002;
        public static final int display=0x7f040003;
        public static final int pad_advanced=0x7f040004;
        public static final int pad_numeric=0x7f040005;
        public static final int pad_operator_one_col=0x7f040006;
        public static final int pad_operator_two_col=0x7f040007;
    }
    public static final class mipmap {
        public static final int ic_launcher_calculator=0x7f030000;
    }
    public static final class string {
        /**  Name of the application. [CHAR_LIMIT=NONE] 
         */
        public static final int app_name=0x7f08000f;
        /**  Clear operation to clear the currently entered expression. [CHAR_LIMIT=3] 
         */
        public static final int clr=0x7f080017;
        /**  Constant for Euler's number (i.e. "2.7182…"). [CHAR_LIMIT=1] 
         */
        public static final int const_e=0x7f080000;
        /**  Constant for pi (i.e. "3.1415…"). [CHAR_LIMIT=1] 
         */
        public static final int const_pi=0x7f080001;
        /**  Delete operation to remove last entered token. [CHAR_LIMIT=3] 
         */
        public static final int del=0x7f080018;
        /**  Content description for "clr" button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_clr=0x7f08002a;
        /**  Content description for 'e' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_const_e=0x7f080019;
        /**  Content description for 'π' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_const_pi=0x7f08001a;
        /**  Content description for '.' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_dec_point=0x7f08001b;
        /**  Content description for "del" button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_del=0x7f08002b;
        /**  Content description for '=' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_eq=0x7f08002c;
        /**  Content description for 'cos' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_cos=0x7f08001e;
        /**  Content description for 'ln' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_ln=0x7f08001f;
        /**  Content description for 'log' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_log=0x7f080020;
        /**  Content description for 'sin' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_sin=0x7f080021;
        /**  Content description for 'tan' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_fun_tan=0x7f080022;
        /**  Content description for '(' button. [CHAR_LIMIT=NONE] 
Content descriptions for accessibility. These strings will be read aloud to users who are using the calculator with
    accessibility features enabled and should reflect the mathematical concept instead of a direct representation of what is shown
    on the button
         */
        public static final int desc_lparen=0x7f08001c;
        /**  Content description for '+' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_add=0x7f080023;
        /**  Content description for '÷' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_div=0x7f080024;
        /**  Content description for '!' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_fact=0x7f080025;
        /**  Content description for '×' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_mul=0x7f080026;
        /**  Content description for '^' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_pow=0x7f080027;
        /**  Content description for '√' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_sqrt=0x7f080028;
        /**  Content description for '-' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_op_sub=0x7f080029;
        /**  Content description for ')' button. [CHAR_LIMIT=NONE] 
         */
        public static final int desc_rparen=0x7f08001d;
        /**  Equals operator (e.g. "1 + 2 = ?"). [CHAR_LIMIT=1] 
         */
        public static final int eq=0x7f08000b;
        /**  Error displayed when expression evaluates to NaN. [CHAR_LIMIT=14] 
         */
        public static final int error_nan=0x7f080010;
        /**  Error displayed when expression contains a syntax error. [CHAR_LIMIT=14] 
         */
        public static final int error_syntax=0x7f080011;
        /**  Abbrev. name of cosine function (e.g. "cos(π)". [CHAR_LIMIT=3] 
         */
        public static final int fun_cos=0x7f080012;
        /**  Natural logarithm function (e.g. "ln(2)"). [CHAR_LIMIT=3] 
         */
        public static final int fun_ln=0x7f080013;
        /**  Logarithm function (e.g. "log(10)"). [CHAR_LIMIT=3] 
         */
        public static final int fun_log=0x7f080014;
        /**  Abbrev. name of sine function (e.g. "sin(π)". [CHAR_LIMIT=3] 
         */
        public static final int fun_sin=0x7f080015;
        /**  Abbrev. name of tangent function (e.g. "tan(π)". [CHAR_LIMIT=3] 
         */
        public static final int fun_tan=0x7f080016;
        /**  Result displayed when expression evaluates to infinity. [CHAR_LIMIT=1] 
         */
        public static final int inf=0x7f08000c;
        /**  Left parenthesis (e.g. "log(", "2 × (3 - 1)". [CHAR_LIMIT=1] 
         */
        public static final int lparen=0x7f080002;
        public static final int max_digits_alert=0x7f08000e;
        public static final int max_input_alert=0x7f08000d;
        /**  Addition operator (e.g. "1 + 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_add=0x7f080004;
        /**  Divide operator (e.g. "1 ÷ 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_div=0x7f080005;
        /**  Factorial operator (e.g. "2!"). [CHAR_LIMIT=1] 
         */
        public static final int op_fact=0x7f080006;
        /**  Multiply operator (e.g. "1 × 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_mul=0x7f080007;
        /**  Power operator (e.g. "1 ^ 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_pow=0x7f080008;
        /**  Square root operator (e.g. "√1"). [CHAR_LIMIT=1] 
         */
        public static final int op_sqrt=0x7f080009;
        /**  Subtraction operator (e.g. "1 - 2"). [CHAR_LIMIT=1] 
         */
        public static final int op_sub=0x7f08000a;
        /**  Right parenthesis (e.g. "log(2)", "(3 - 1) × 2". [CHAR_LIMIT=1] 
         */
        public static final int rparen=0x7f080003;
    }
    public static final class style {
        public static final int CalculatorTheme=0x7f0a0000;
        public static final int DisplayEditTextStyle=0x7f0a0001;
        public static final int DisplayEditTextStyle_Formula=0x7f0a0004;
        public static final int DisplayEditTextStyle_Result=0x7f0a0005;
        public static final int PadButtonStyle=0x7f0a0002;
        public static final int PadButtonStyle_Advanced=0x7f0a0006;
        public static final int PadButtonStyle_Numeric=0x7f0a0007;
        public static final int PadButtonStyle_Numeric_Equals=0x7f0a0008;
        public static final int PadButtonStyle_Operator=0x7f0a0009;
        public static final int PadButtonStyle_Operator_Text=0x7f0a000a;
        public static final int PadLayoutStyle=0x7f0a0003;
        public static final int PadLayoutStyle_Advanced=0x7f0a000b;
        public static final int PadLayoutStyle_Numeric=0x7f0a000c;
        public static final int PadLayoutStyle_Operator=0x7f0a000d;
        public static final int PadLinearLayoutStyle=0x7f0a000e;
    }
    public static final class styleable {
        /** Attributes that can be used with a CalculatorEditText.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CalculatorEditText_maxTextSize com.android.calculator2:maxTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CalculatorEditText_minTextSize com.android.calculator2:minTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #CalculatorEditText_stepTextSize com.android.calculator2:stepTextSize}</code></td><td></td></tr>
           </table>
           @see #CalculatorEditText_maxTextSize
           @see #CalculatorEditText_minTextSize
           @see #CalculatorEditText_stepTextSize
         */
        public static final int[] CalculatorEditText = {
            0x7f010000, 0x7f010001, 0x7f010002
        };
        /**
          <p>This symbol is the offset where the {@link com.android.calculator2.R.attr#maxTextSize}
          attribute's value can be found in the {@link #CalculatorEditText} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.calculator2:maxTextSize
        */
        public static final int CalculatorEditText_maxTextSize = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.calculator2.R.attr#minTextSize}
          attribute's value can be found in the {@link #CalculatorEditText} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.calculator2:minTextSize
        */
        public static final int CalculatorEditText_minTextSize = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.calculator2.R.attr#stepTextSize}
          attribute's value can be found in the {@link #CalculatorEditText} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.calculator2:stepTextSize
        */
        public static final int CalculatorEditText_stepTextSize = 2;
    };
}
