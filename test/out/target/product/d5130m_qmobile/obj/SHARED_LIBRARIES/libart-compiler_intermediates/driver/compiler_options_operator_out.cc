#include <iostream>

#include "driver/compiler_options.h"

// This was automatically generated by art/tools/generate-operator-out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, const CompilerOptions::CompilerFilter& rhs) {
  switch (rhs) {
    case CompilerOptions::kVerifyNone: os << "VerifyNone"; break;
    case CompilerOptions::kInterpretOnly: os << "InterpretOnly"; break;
    case CompilerOptions::kVerifyAtRuntime: os << "VerifyAtRuntime"; break;
    case CompilerOptions::kSpace: os << "Space"; break;
    case CompilerOptions::kBalanced: os << "Balanced"; break;
    case CompilerOptions::kSpeed: os << "Speed"; break;
    case CompilerOptions::kEverything: os << "Everything"; break;
    case CompilerOptions::kTime: os << "Time"; break;
    default: os << "CompilerOptions::CompilerFilter[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace art

